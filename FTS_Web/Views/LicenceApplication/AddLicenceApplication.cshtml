@model FTS.Model.Entities.LicenceApplicationModel
@{
    ViewBag.Title = "Registration of License Application";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
    @Html.HiddenFor(e => e.IP_Address, new {@ID = "IP_Address"})
    @Html.HiddenFor(e => e.UserID, new {@ID = "UserID"})
    @Html.HiddenFor(e => e.ISACL, new {@ID = "ISAL"})
    @Html.HiddenFor(e => e.ISDCL, new {@ID = "ISDL"})
    @Html.HiddenFor(e => e.ISView, new {@ID = "ISView"})
    @Html.HiddenFor(e => e.ISHO, new {@ID = "ISHO"})
    @Html.HiddenFor(e => e.IsEdit, new {@ID = "IsEdit"})
    <div class="container mt-5" style="max-width:100%;">
     <div class="mb-3">   <section>
        <h3 style="font-weight:bold;"> Registration of License Application</h3>
         </section> </div> 
        <div id="stepper1" class="bs-stepper">
            <div class="bs-stepper-header">
                <div class="step" data-target="#step1">
                    <button id="stpstep1" type="button" class="btn step-trigger">
                        <span class="bs-stepper-circle">1</span>
                        <span class="bs-stepper-label">Contractor Details</span>
                    </button>
                </div>
                <div class="line"></div>
                <div class="step" data-target="#step2">
                    <button id="stpstep2" type="button" class="btn step-trigger">
                        <span class="bs-stepper-circle">2</span>
                        <span class="bs-stepper-label">Establishment Details</span>
                    </button>
                </div>
                <div class="line"></div>
                <div  class="step" data-target="#step3">
                    <button id="stpstep3" type="button" class="btn step-trigger">
                        <span class="bs-stepper-circle">3</span>
                        <span class="bs-stepper-label">Principal Employer Details</span>
                    </button>
                </div>
                <div class="line"></div>
                <div class="step" data-target="#step4">
                    <button id="stpstep4" type="button" class="btn step-trigger">
                        <span class="bs-stepper-circle">4</span>
                        <span class="bs-stepper-label">License & Security Details</span>
                    </button>
                </div>
                <div class="line"></div>
                <div class="step" data-target="#step5">
                    <button id="stpstep5" type="button" class="btn step-trigger">
                        <span class="bs-stepper-circle">5</span>
                        <span class="bs-stepper-label">Document</span>
                    </button>
                </div>


            </div>
            <div class="bs-stepper-content">
                <div id="step1" class="content">
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12">

                            <div class="card-header text-center border-1 p-3">
                                <strong>Contractor Details</strong>
                            </div>
                             <div class="col-lg-12 col-sm-12 col-md-12 col-xs-12 pull-right text-right text-danger mt-2 font-weight-bold"><span class="required">All <span class="text-danger">*</span> fields are compulsory</span></div>
                            <div class="card-body mt-2">
                                <div class="row">
                                    <div class="col-xs-10 col-sm-10 col-md-12 ">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(e => e.IsMultipul, new SelectList(Model.CommonList, "DataValue","DisplayValue"),"Select", new { @class = "chosen-select form-control",@ID="IsMultipul",@onchange="IsMultipulOnchange()" })
                                                </div>
                                                @*  @if (@Model.Establishmentregistrationdetaillst[0].IsMultipul == 1)
                                            {*@
                                                <div class="col-md-3" id="rgrbl">


                                                    @if (@Model.IsCLRA == true)
                                                    {
                                                        <input type="radio" value="true" checked="checked" id="rblIsCLRA" name="drprbl" /> <span> CLRA</span>
                                                    }
                                                    else
                                                    {
                                                        <input type="radio" value="false" id="rblIsCLRA" name="drprbl" /> <span> CLRA</span>
                                                    }

                                                    @if (@Model.IsIMW == true)
                                                    {
                                                        <input type="radio" value="true" checked="checked" id="rblIsIMW" name="drprbl" />

                                                        <span> IMW</span>
                                                    }
                                                    else
                                                    {
                                                        <input type="radio" value="false" id="rblIsIMW" name="drprbl" /> <span> IMW</span>
                                                    }

                                                    @if (@Model.ISMTW == true)
                                                    {
                                                        <input type="radio" value="true" checked="checked" id="rblISMTW" name="drprbl" /> <span> MTW</span>
                                                    }
                                                    else
                                                    {
                                                        <input type="radio" value="false" id="rblISMTW" name="drprbl" />  <span> MTW</span>
                                                    }

                                                    @*<input type="radio" value="@Model.Establishmentregistrationdetaillst[0].IsCLRA" checked="checked" id="item_Value" name="item.Value" /> 1001 - Vilnius<br />
                                                    <input type="radio" value="@Model.Establishmentregistrationdetaillst[0].IsIMW" checked="checked" id="item_Value" name="item.Value" /> 1002 - Palanga<br />
                                                    <input type="radio" value="@Model.Establishmentregistrationdetaillst[0].ISMTW" checked="checked" id="item_Value" name="item.Value" /> 1002 - Palanga<br />*@
                                                </div>

                                                @* }
                                            else
                                            {*@
                                                <div class="col-md-3" id="rgchk">

                                                    @Html.Label("CLRA")
                                                    @Html.CheckBoxFor(e => e.IsCLRA, new { @ID="chkIsCLRA"})
                                                    @Html.Label("IMW")
                                                    @Html.CheckBoxFor(e => e.IsIMW, new { @ID="chkIsIMW"})
                                                    @Html.Label("MTW")
                                                    @Html.CheckBoxFor(e => e.ISMTW, new { @ID="chkISMTW"})

                                                </div>
                                                @* }*@

                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col-md-12">
                                                @Html.Label("Contractor Name") <span class="text-danger">*</span>
                                                <div class="input-group input-group-sm">
                                                    @Html.HiddenFor(e => e.ISAmendment, new {@ID = "ISAmendment"})
                                                    @Html.HiddenFor(e => e.RefRegistrationID, new {@ID = "RefRegistrationID"})
                                                    @Html.TextBoxFor(e => e.ContractorName, new { @class = "form-control inputborder", @type = "text", @ID = "ContractorName", placeholder = "Enter Contractor Name", onkeypress = "return allowOnlyLetters(event,this);" })
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpanContractorName" style="display:none;">Please Enter Contractor Name</span>
                                                </div>

                                            </div>

                                        </div>
                                        <div class="row">
                                            <div class="form-group col-md-5">
                                                @Html.Label("Contractor Permanent Address") <span class="text-danger">*</span>
                                                <div class="input-group input-group-sm">
                                                    @Html.TextAreaFor(e => e.ContractorPAddress, new { @class = "form-control inputborder", @type = "text", @ID = "ContractorPAddress", placeholder = "Enter Address", onkeypress = "return allowOnlyLetters(event,this);" })
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpancontractorPAddress" style="display:none;">Please Enter Permanent Address</span>
                                                </div>
                                            </div>
                                            <div class="form-group col-md-2 mt-5" style="margin-top: auto;">
                                                @Html.Label("Copy Permanent Address") 
                                                @Html.CheckBox("SameasPaddress", new { @ID="SameContractorPaddress"})
                                            </div>
                                            <div class="form-group col-md-5">
                                                @Html.Label("Contractor Secondary Address") <span class="text-danger">*</span>
                                                <div class="input-group input-group-sm">
                                                    @Html.TextAreaFor(e => e.ContractorSAddress, new { @class = "form-control inputborder", @type = "text", @ID = "ContractorSAddress", placeholder = "Enter Address", onkeypress = "return allowOnlyLetters(event,this);" })
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpancontractorSAddress" style="display:none;">Please Enter Secondary Address</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                             <div class="form-group col-md-4">
                                                @Html.Label("Email Id") <span class="text-danger">*</span>
                                                <div class="input-group input-group-sm">
                                                    @Html.TextBoxFor(e => e.ContractorEmailId, new { @class = "form-control", @placeholder="Email Id", @ID="ContractorEmailId", required = "required" })
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpanContractorEmail" style="display:none;">Please Enter Email Id</span>
                                                     <span class="text-danger ValidationSpan" id="SpanInvalidCtrEmail" style="display:none;">Please Enter Valid Email Id</span>
                                                </div>

                                            </div>
                                            <div class="form-group col-md-4">
                                                @Html.Label("Mobile No") <span class="text-danger">*</span>
                                                <div class="input-group input-group-sm">
                                                    @Html.TextBoxFor(e => e.ContractorMobileNo, new { @class = "form-control", @placeholder="Mobile No", @ID="ContractorMobileNo", maxlength="10",oninput="numberOnly(this.id);", required = "required" })
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpanContractorMobile" style="display:none;">Please Enter Mobile No.</span>
                                                    <span class="text-danger ValidationSpan" id="SpanContractorvMobile" style="display:none;">Please Enter valid Mobile No.</span>
                                                </div>

                                            </div>
                                            <div class="form-group col-md-2">
                                                @Html.Label("Date Of Birth") <span class="text-danger">*</span>
                                                <div class="input-group input-group-sm">
                                                    @Html.TextBoxFor(e => e.ContractorDOB, new { @class = "form-control datepicker", @ID="ContractorDOB", required = "required" , onChange="datediff()"} )
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpanContractorDOB" style="display:none;">Please select DOB</span>
                                                </div>
                                            </div>
      
                                            <div class="form-group col-md-2">
                                                @Html.Label("Age") <span class="text-danger">*</span>
                                                <div class="input-group input-group-sm">
                                                    @Html.TextBoxFor(e => e.ContractorAge, new { @class = "form-control inputborder", @type = "text", @ID = "ContractorAge"  })
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpanContracttorAge" style="display:none;">Age Can't be Empty please select date.</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col-md-3">
                                                @Html.Label("District") <span class="text-danger">*</span>
                                                <div class="input-group input-group-sm">
                                                    @Html.DropDownListFor(e => e.DistrictID, new SelectList(Model.Districtlist, "DataValue","DisplayValue"),"Select", new { @class = "chosen-select form-control",@ID="DistrictID" })
                                                    <span class="text-danger ValidationSpan" id="Spandistrict" style="display:none;">Please Select District</span>
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="Spanddl_CompanyCode" style="display:none;">Please Select Company Code</span>
                                                </div>
                                            </div>
                                            <div class="form-group col-md-3">
                                                @Html.Label("Taluka") <span class="text-danger">*</span>
                                                <div class="input-group input-group-sm">
                                                    @Html.DropDownListFor(e => e.TalukaID, new SelectList(Model.Talukalist,"DataValue","DisplayValue"),"Select", new { @class = "chosen-select form-control",@ID="TalukaID", })
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="Spantaluka" style="display:none;">Please Select Taluka</span>
                                                </div>

                                            </div>
                                            <div class="form-group col-md-3" id="DivArea">
                                                @Html.Label("Place") <span class="text-danger">*</span>
                                                @Html.HiddenFor(e => e.ZoneID , new { @ID="ZoneID"})
                                                @Html.HiddenFor(e => e.AreaID , new { @ID="AreaID"})
                                                <div class="input-group input-group-sm">
                                                    <input id="ddlArea" class="form-control" value="@Model.AreaID" style="width:100%;" />
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="Spantaluka" style="display:none;">Please Select Area</span>
                                                </div>

                                            </div>
                                            <div class="col-md-3">
                                                @Html.Label("Pin code")<span class="text-danger ml-1">*</span>
                                                @Html.TextBoxFor(e => e.Pincode, new { @class = "form-control", @ID="Pincode", required = "required",maxlength="6" })

                                                <div>
                                                    <span class="text-danger ValidationSpan" id="Spanpincode" style="display:none;">Please Enter Pincode</span>
                                                    <span class="text-danger ValidationSpan" id="Spanlengthpincode" style="display:none;">Please Enter 6 digit pin code</span>
                                                    <span class="text-danger ValidationSpan" id="spaninvalid" style="display:none;">Invalid Pincode</span>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>


                                <div class="pb-1 pt-4" style="text-align:right">
                                  @if(@Model.IsSubmit == true && Model.ActionCode != 4)
                                    {
                                        @*<button class="btn btn-primary" onclick="stepper1.next()">Next</button>*@
                                        
                                        <input type="button" class="btn btn-primary" onclick="next(1,0)" id="btnstep1" value="Next" />
                                    }
                                    else
                                    {
                                        @*<input type="button" id="btnsubmit" class="btn btn-primary" value="Save" onclick="SubmitContractorDetail();" />*@
                                         <input type="button" class="btn btn-primary" onclick="next(1,1)" id="btnstep1" value="Save & Next" />
                                    }

                                    @Html.ActionLink("Cancel", "index", "LicenceApplication", new { area = "" }, new { @class = "btn btn-primary" ,ID="CancleContractor" })
                                </div>
                                @* <div class="pb-3" style="text-align:right">

                            </div>*@
                            </div>

                        </div>
                    </div>


                </div>
                <div id="step2" class="content">

                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <div class="card-header text-center border-1 p-3">
                                <strong>Establishment Details</strong>
                            </div>
                             <div class="col-lg-12 col-sm-12 col-md-12 col-xs-12 pull-right text-right text-danger mt-2 font-weight-bold"><span class="required">All <span class="text-danger">*</span> fields are compulsory</span></div>
                            <div class="card-body mt-2">
                                <div class="row">
                                    <div class="col-xs-10 col-sm-10 col-md-12 ">
                                        <div class="row">
                                            <div class="form-group col-md-3">
                                                @Html.Label("Establishment Number")
                                                @Html.HiddenFor(e => e.ApplicationID, new {@ID = "ApplicationID",@class="ApplicationID"})
                                                <div class="input-group input-group-sm">
                                                    <input id="ddlEstablishmentCode" class="form-control" value="@Model.EstablismentCode" style="width:100%;" placeholder="Enter Establishment Number" />
                                                    <span class="text-danger ValidationSpan" id="SpanEstabliscode" style="display:none;">Please Enter Establishment Code</span>
                                                </div>
                                            </div>

                                            <div class="form-group col-md-3">
                                                    @Html.Label("Establishment Name")<span class="text-danger ml-1">*</span>
                                                <div class="input-group input-group-sm">
                                                     @Html.TextBoxFor(e => e.EstablihmentName, new { @class = "form-control inputborder", @ID = "EstablishmentName", placeholder = "Enter Establishment Name"})
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="Spanestabname" style="display:none;">Please Enter Establishment Name</span>
                                                </div>
                                            </div>
                                             <div class="form-group col-md-3">
                                                    @Html.Label("Email ID")<span class="text-danger ml-1">*</span>
                                                <div class="input-group input-group-sm">
                                                     @Html.TextBoxFor(e => e.EmailID, new { @class = "form-control inputborder", @ID = "EmailID", placeholder = "Enter Email ID"})
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpanEmailID" style="display:none;">Please Enter Email Id </span>
                                                    <span class="text-danger ValidationSpan" id="SpanvalidEmail" style="display:none;">Please Enter Valid Email Address.</span>
                                                </div>
                                            </div>
                                             <div class="form-group col-md-3">
                                                    @Html.Label("Mobile No")<span class="text-danger ml-1">*</span>
                                                <div class="input-group input-group-sm">
                                                      @Html.TextBoxFor(e => e.EstablishMobile, new { @class = "form-control", @placeholder="Mobile No", @ID="EstablishMobileNo",maxlength="10",oninput="numberOnly(this.id);" })
                                                     @*@Html.TextBoxFor(e => e.Establishmentregistrationdetaillst[0].EmailID, new { @class = "form-control inputborder", @ID = "EmailID", placeholder = "Enter Email ID"})*@
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpanMobileInvalid" style="display:none;">Please Enter valid Mobile No </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col-md-5">
                                                @Html.Label("Permanent Address")<span class="text-danger ml-1">*</span>

                                                <div class="input-group input-group-sm">
                                                    @Html.TextAreaFor(e => e.EstablishmentPAddress, new { @class = "form-control", @ID="EstabliPAddress",placeholder = "Permanent Address"})
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpanEstabPAddress" style="display:none;">Please Enter Permanent Address</span>
                                                </div>
                                            </div>
                                             <div class="col-md-2 mt-5" style="margin-top: auto;">
                                                    @Html.Label("Copy Permanent Address")
                                                    @Html.CheckBox("SameasPaddress", new { @ID="SameEstablishPaddress"})
                                                </div>
                                            <div class="form-group col-md-5">
                                                @Html.Label("Secondary Address")<span class="text-danger">*</span>

                                                <div class="input-group input-group-sm">
                                                    @Html.TextAreaFor(e => e.EstablishmentSAddress, new { @class = "form-control", @ID="EstabliSAddress",placeholder = "Secondary Address" })
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpanEstabSAddress" style="display:none;">Please Enter Secondary Address</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col-md-2">
                                                @Html.Label("District") <span class="text-danger">*</span>
                                                <div class="input-group input-group-sm">
                                                    @Html.DropDownListFor(e => e.EDistrictID, new SelectList(Model.EstablisDistrictlist, "DataValue","DisplayValue"),"Select", new { @class = "chosen-select form-control",@ID="EDistrictID", })
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpandEistrict" style="display:none;">Please Select District</span>
                                                </div>
                                            </div>
                                            <div class="form-group col-md-2">
                                                @Html.Label("Taluka") <span class="text-danger">*</span>
                                                <div class="input-group input-group-sm">
                                                    @Html.DropDownListFor(e => e.ETalukaID, new SelectList(Model.EstablisTalukalist,"DataValue","DisplayValue"),"Select", new { @class = "chosen-select form-control",@ID="ETalukaID", })
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpanEtalukaId" style="display:none;">Please Select Taluka</span>
                                                </div>

                                            </div>
                                            <div class="form-group col-md-2" id="EDivArea" >
                                                @Html.Label("Area") 
                                                @Html.HiddenFor(e => e.EZoneID , new { @ID="EZoneID"})
                                                @Html.HiddenFor(e => e.EAreaID , new { @ID="EAreaID"})
                                                <div class="input-group input-group-sm">
                                                    <input id="ddlAreaEstablish" class="form-control" value="@Model.EAreaID" style="width:100%;" />
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="Spantaluka" style="display:none;">Please Select Area</span>
                                                </div>

                                            </div>
                                            <div class="col-md-2">
                                                @Html.Label("Pin code")<span class="text-danger ml-1">*</span>
                                                @Html.TextBoxFor(e => e.EPincode, new { @class = "form-control", @ID="EPincode", required = "required",maxlength="6"})

                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpanEincode" style="display:none;">Please Enter Pincode</span>
                                                    <span class="text-danger ValidationSpan" id="SpanlengtEhpincode" style="display:none;">Please Enter 6 digit pin code</span>
                                                    <span class="text-danger ValidationSpan" id="spaneValidpincode" style="display:none;">Invalid Pincode</span>

                                                </div>
                                            </div>
                                             <div class="col-md-2">
                                                    @Html.Label("Type of Establishment") <span class="text-danger">*</span>
                                                    @Html.DropDownListFor(e => e.TypeOfBusiness, new SelectList(Model.TypeOfEstablishmentList, "DataValue","DisplayValue"),"Select", new { @class = "chosen-select form-control",@ID="TypeOfEstablishment"})
                                                    <span class="text-danger ValidationSpan" id="SpanEstablishmentTypeOfBusinessTrade" style="display:none;">Please Select Type Of Establishment</span>
                                               </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div class="pb-1 pt-4" style="text-align:right"> 
                                 @if(Model.IsSubmit == true && Model.ActionCode != 4)
                                 {
                                     @*<input type="button" class="btn btn-primary" value="previous" onclick="prev(1)" />*@
                                    <input type="button" class="btn btn-primary" value="Previous" onclick="prev(2,0)" />
                                    <input type="button" class="btn btn-primary" onclick="next(2,0)" id="btnstep1" value="Next" />
                                }
                                else 
                                {
                                    <input type="button" class="btn btn-primary" onclick="next(2,1)" id="btnstep1" value="Save & Next" />
                                    @*<button class="btn btn-primary" onclick="Establishmentsubmit()" id="btnsavecrop">Save</button>*@
                                }
                                 @Html.ActionLink("Cancel", "index", "LicenceApplication", new { area = "" }, new { @class = "btn btn-primary",ID="CancleEstablishment" })
                            </div>

                           @* <div class="pb-1 pt-4 ">
                                
                            </div>*@
                        </div>
                    </div>

                </div>
                <div id="step3" class="content">
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <div class="card-header text-center border-1 p-3">
                                <strong>Principal Employer Details</strong>
                            </div>
                             <div class="col-lg-12 col-sm-12 col-md-12 col-xs-12 pull-right text-right text-danger mt-2 font-weight-bold"><span class="required">All <span class="text-danger">*</span> fields are compulsory</span></div>
                        </div>
                    </div>
                    <div class="content-wrapper">
                        <div class="row">
                            <div class="col-12 grid-margin stretch-card">
                                <div class="card">
                                    <div class="card-body">
                                        <br>
                                        <div>
                                            <a id="Edit" class="btn btn-info" onclick="Fn_AddPrincipalEmployerInformation()"><i class="fas fa-folder-plus"></i> Add Principal Employer</a>
                                        </div>
                                        <br>
                                        <div id="TextBoxContainer">
                                        </div>
                                        <div class="form-group" style="text-align:right">
                                            @if (Model.IsSubmit == true && Model.ActionCode != 4)
                                            {
                                                 @*<button class="btn btn-primary" onclick="stepper1.previous()">Previous</button>*@
                                                  <input type="button" class="btn btn-primary" value="Previous" onclick="prev(3,0)" />
                                                 <input type="button" class="btn btn-primary" onclick="next(3,0)" id="btnstep1" value="Next" />
                                            }
                                            else
                                            {
                                                <input type="button" class="btn btn-primary" onclick="next(3,1)" id="btnstep1" value="Save & Next" />
                                                @*<input type="submit" id="btnprisubmit" class="btn btn-primary submit" value="Submit" onclick="SavePrincipalRegistrationRecord();" />*@
                                            }
                                            @Html.ActionLink("Cancel", "index", "LicenceApplication", new { area = "" }, new { @class = "btn btn-primary",ID="CanclePrincipal" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @*
                <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12">
                <div class="card-header text-center border-1 p-3">
                <strong>Crop/Variety offered for certification</strong>
                </div>
                <div class="card-body mt-2">
                <div class="row">
                <div class="col-xs-10 col-sm-10 col-md-12 ">
                <div class="row">
                <div class="form-group col-md-12">
                @Html.Label("Principle Employer Name") <span class="text-danger">*</span>
                <div class="input-group input-group-sm">
                @Html.TextBoxFor(e => e.PEmployerName, new { @class = "form-control inputborder", @type = "text", @ID = "PEmployerName", placeholder = "Enter Employer Name", onkeypress = "return allowOnlyLetters(event,this);" })
                </div>
                <div>
                <span class="text-danger ValidationSpan" id="SpanEmployerName" style="display:none;">Please Enter Employer Name</span>
                </div>

                </div>

                </div>
                <div class="row">
                <div class="form-group col-md-6">
                @Html.Label("Principle Employer Permanent Address") <span class="text-danger">*</span>
                <div class="input-group input-group-sm">
                @Html.TextAreaFor(e => e.PEmployerPAddress, new { @class = "form-control inputborder", @type = "text", @ID = "PEmployerPAddress", placeholder = "Enter Permanent Address", onkeypress = "return allowOnlyLetters(event,this);" })
                </div>
                <div>
                <span class="text-danger ValidationSpan" id="SpancontractorPAddress" style="display:none;">Please Enter Permanent Address</span>
                </div>
                </div>
                <div class="form-group col-md-6">
                @Html.Label("Principle Employer Secondary Address") <span class="text-danger">*</span>
                <div class="input-group input-group-sm">
                @Html.TextAreaFor(e => e.PEmployerSAddress, new { @class = "form-control inputborder", @type = "text", @ID = "PEmployerSAddress", placeholder = "Enter Permanent Address", onkeypress = "return allowOnlyLetters(event,this);" })
                </div>
                <div>
                <span class="text-danger ValidationSpan" id="SpancontractorPAddress" style="display:none;">Please Enter Permanent Address</span>
                </div>
                </div>
                </div>
                <div class="row">
                <div class="form-group col-md-3">
                @Html.Label("District") <span class="text-danger">*</span>
                <div class="input-group input-group-sm">
                @Html.DropDownListFor(e => e.DistrictID, new SelectList(Model.Districtlist, "DataValue","DisplayValue"),"Select", new { @class = "chosen-select form-control",@ID="DistrictID", })
                <span class="text-danger ValidationSpan" id="Spandistrict" style="display:none;">Please Select District</span>
                </div>
                <div>
                <span class="text-danger ValidationSpan" id="Spanddl_CompanyCode" style="display:none;">Please Select Company Code</span>
                </div>
                </div>
                <div class="form-group col-md-3">
                @Html.Label("Taluka") <span class="text-danger">*</span>
                <div class="input-group input-group-sm">
                @Html.DropDownListFor(e => e.TalukaID, new SelectList(Model.Talukalist,"DataValue","DisplayValue"),"Select", new { @class = "chosen-select form-control",@ID="TalukaID", })
                </div>
                <div>
                <span class="text-danger ValidationSpan" id="Spantaluka" style="display:none;">Please Select Taluka</span>
                </div>

                </div>
                <div class="form-group col-md-3">
                @Html.Label("Area") <span class="text-danger">*</span>
                @Html.HiddenFor(e => e.ZoneID , new { @ID="ZoneID"})
                @Html.HiddenFor(e => e.AreaID , new { @ID="AreaID"})
                <div class="input-group input-group-sm">
                <input id="ddlArea" class="form-control" value="@Model.AreaID" style="width:100%;" />
                </div>
                <div>
                <span class="text-danger ValidationSpan" id="Spantaluka" style="display:none;">Please Select Area</span>
                </div>

                </div>
                <div class="col-md-3">
                @Html.Label("Pin code")<span class="text-danger ml-1">*</span>
                @Html.TextBoxFor(e => e.Pincode, new { @class = "form-control", @ID="Pincode", required = "required",@type = "number" })

                <div>
                <span class="text-danger ValidationSpan" id="Spanpincode" style="display:none;">Please Enter Pincode</span>
                <span class="text-danger ValidationSpan" id="Spanlengthpincode" style="display:none;">Please Enter 6 digit pin code</span>
                </div>
                </div>
                </div>
                </div>

                </div>
                </div>
                <div class="pb-1 pt-4 " style="text-align:right">
                <button class="btn btn-primary" onclick="Typedetailsubmit()" id="btnsavecrop">Save</button>
                <input type="button" id="btnsubmit" class="btn btn-primary" value="Save" onclick="SubmitContractorDetail();" />
                </div>

                <div class="pb-1 pt-4 " style="text-align:right">
                <button class="btn btn-primary" onclick="stepper1.next()">Next</button>
                </div>
                </div>
                </div>*@

                </div>
                <div id="step4" class="content">

                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <div class="card-header text-center border-1 p-3">
                                <strong>License & Security Details</strong>
                            </div>
                             <div class="col-lg-12 col-sm-12 col-md-12 col-xs-12 pull-right text-right text-danger mt-2 font-weight-bold"><span class="required">All <span class="text-danger">*</span> fields are compulsory</span></div>
                            <div class="card-body mt-2">
                                <div class="row">
                                    <div class="col-xs-10 col-sm-10 col-md-12 ">
                                        <div class="row">
                                            <div class="form-group col-md-6">
                                                @Html.Label("License Challan No") <span class="text-danger">*</span>
                                                <div class="input-group input-group-sm">
                                                    @Html.HiddenFor(e => e.ApplicationID, new {@ID = "ApplicationID",@class="ApplicationID"})
                                                    @Html.TextBoxFor(e => e.ChallanNo, new { @class = "form-control inputborder", @type = "text", @ID = "ChallanNo", placeholder = " Challan Number", oninput="numberOnly(this.id);" })
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpanChallanNo" style="display:none;">Please Enter Challan No</span>
                                                </div>
                                            </div>
                                            <div class="form-group col-md-2">
                                                @Html.Label("License Challan Date") <span class="text-danger">*</span>
                                                <div class="input-group input-group-sm">
                                                    @Html.TextBoxFor(e => e.ChallanDate, new { @class = "form-control datepicker", @ID="ChallanDate", required = "required" })
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpanChallandate" style="display:none;">Please Select Challan Date</span>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="row">
                                            <div class="form-group col-md-4">
                                                @Html.Label("License Fee") <span class="text-danger">*</span>
                                                <div class="input-group input-group-sm">
                                                   
                                                    @Html.TextBoxFor(e => e.LicenceFee, new { @class = "form-control inputborder", @type = "text", @ID = "LicenceFee", placeholder = "Enter License Fee"})
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpanLicenceFee" style="display:none;">Please Enter Licence Fee</span>
                                                </div>
                                            </div>
                                            <div class="form-group col-md-4">
                                                @Html.Label("Tresury Name") <span class="text-danger">*</span>
                                                <div class="input-group input-group-sm">
                                                    @Html.TextBoxFor(e => e.TreasuryName, new { @class = "form-control inputborder", @type = "text", @ID = "TreasuryName", placeholder = "Enter Tresury Name", onkeypress = "return allowOnlyLetters(event,this);" })
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpanTreasuryName" style="display:none;">Please Enter Tresury Name</span>
                                                </div>
                                            </div>
                                            <div class="form-group col-md-4">
                                                @Html.Label("License Challan Document") <span class="text-danger">*</span>
                                                 @Html.HiddenFor(e => e.LicecneDoc, new {@ID = "LicecneDoc"})
                                                <div class="input-group input-group-sm">
                                                    <input type="file" id="chaalnafile" class="form-control" onchange="return fileValidation()">
                                                     @if (@Model.LicecneDoc != null && @Model.LicecneDoc != "")
                                                    {
                                                        <a href="/LicenceApplication/DownloadFile/?FileName=@Model.LicecneDoc"><i class="fas fa-download ml-2"></i></a>
                                                    }
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpanChallandoc" style="display:none;">Please Select Challan Document</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col-md-6">
                                                @Html.Label("Security Challan No") <span class="text-danger">*</span>
                                                <div class="input-group input-group-sm">
                                                    @Html.TextBoxFor(e => e.SecurityChallanNo, new { @class = "form-control inputborder", @type = "text", @ID = "SecurityChallanNo", placeholder = " Security Challan Number", oninput="numberOnly(this.id);" })
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpanSecureChallanNo" style="display:none;">Please Enter Security Challan No</span>
                                                </div>
                                            </div>
                                            <div class="form-group col-md-2">
                                                @Html.Label("Security Challan Date") <span class="text-danger">*</span>
                                                <div class="input-group input-group-sm">
                                                    @Html.TextBoxFor(e => e.SecurityChallanDate, new { @class = "form-control datepicker", @ID="SecurityChallanDate", required = "required" })
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpanSecuChallanDate" style="display:none;">Please Select Challan Date</span>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="row">
                                            <div class="form-group col-md-4">
                                                @Html.Label("Security Deposit") <span class="text-danger">*</span>
                                                <div class="input-group input-group-sm">
                                                    @Html.TextBoxFor(e => e.SecurityDeposit, new { @class = "form-control inputborder", @type = "text", @ID = "SecurityDeposit", placeholder = "Enter Security Deposit Amount" })
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="SpanSecurityDeposit" style="display:none;">Please Enter Security Deposit </span>
                                                </div>
                                            </div>
                                            <div class="form-group col-md-4">
                                                @Html.Label("Tresure Name") <span class="text-danger">*</span>
                                                <div class="input-group input-group-sm">
                                                    @Html.TextBoxFor(e => e.TreasurName, new { @class = "form-control inputborder", @type = "text", @ID = "TreasurName", placeholder = "Enter Tresure Name", onkeypress = "return allowOnlyLetters(event,this);" })
                                                    
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="spanTreasureName" style="display:none;">Please Enter Tresure Name</span>
                                                </div>
                                            </div>
                                            <div class="form-group col-md-4">
                                                @Html.Label("Security Challan Document") <span class="text-danger">*</span>
                                                 @Html.HiddenFor(e => e.SecurityDoc, new {@ID = "SecurityDoc"})
                                                <div class="input-group input-group-sm">
                                                    <input type="file" id="securityfile" class="form-control" onchange="return fileValidation()">
                                                    @if (@Model.SecurityDoc != "" || @Model.SecurityDoc != null)
                                                    {
                                                        @*<a href="/LicenceApplication/DownloadFile/?FileName=@Model.LicecneDoc" ><i class="fas fa-download"></i></a>*@
                                                        <a href="~/Documents/LicenceApplication/@Model.SecurityDoc" download><i class="fas fa-download ml-2"></i></a>
                                                    }
                                                     
                                                </div>
                                                <div>
                                                    <span class="text-danger ValidationSpan" id="Spansecuritychallandoc" style="display:none;">Please Select Security Deposite Document</span>
                                                </div>
                                            </div>

                                        </div>

                                    </div>

                                </div>
                            </div>
                            <div class="pb-1 pt-4 " style="text-align:right">
                                @*<button class="btn btn-primary" onclick="SubmitEstablishmentDetail()" id="btnsavecrop">Save</button>*@
                           
                            </div>

                            <div class="pb-1 pt-4 " style="text-align:right">
                                 @if (Model.IsSubmit == true && Model.ActionCode != 4)
                                 {
                                    @*<button class="btn btn-primary" onclick="stepper1.previous()">Previous</button>*@
                                    <input type="button" class="btn btn-primary" value="Previous" onclick="prev(4,0)" />
                                    <input type="button" class="btn btn-primary" onclick="next(4,0)" id="btnstep1" value="Next" />
                                 }
                                 else
                                 {
                                      <input type="button" class="btn btn-primary" onclick="next(4,1)" id="btnstep1" value="Save & Next" />
                                    @*<input type="button" id="btnsubmit" class="btn btn-primary" value="Save" onclick="SubmitChallanSecurityDetail();" />*@
                                 }
                                 @Html.ActionLink("Cancel", "index", "LicenceApplication", new { area = "" }, new { @class = "btn btn-primary",ID="CancleDocument" })
                            </div>
                        </div>
                    </div>

                </div>
                <div id="step5" class="content">
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <div class="card-header text-center border-1 p-3">
                                <strong>Documents </strong>
                            </div>
                             <div class="col-lg-12 col-sm-12 col-md-12 col-xs-12 pull-right text-right text-danger mt-2 font-weight-bold"><span class="required">All <span class="text-danger">*</span> fields are compulsory</span></div>
                        </div>
                    </div>
                    <div class="content-wrapper">
                        <div class="row">
                            <div class="col-12 grid-margin stretch-card">
                                <div class="card">
                                    <div class="card-body">

                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12" style="padding-left: 20%;">
                                                    <p3><b>Upload Required Document(Only .PDF, .Doc, .Docx, .JPG, .JPEG, .xls, .xlsx files are allowed)</b></p3>
                                                </div>
                                            </div>
                                        </div>


                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-12" style="padding-left: 27%;">
                                                    <div class="table-responsive">

                                                        <table id="ReinstementList" class="display expandable-table" style="width:100%">
                                                            <thead>
                                                                <tr>
                                                                    <th style="width:29%;" id="roleName">Name</th>
                                                                    <th style="width:5%;" id="Edit">Document</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                <tr>
                                                                    <td>
                                                                        @Html.Label("Factory License")<span class="text-danger">*</span>
                                                                    </td>
                                                                    <td>
                                                                         @Html.HiddenFor(e => e.Doc1, new {@ID = "Doc1"})
                                                                        <input type="file" id="FDOC1" class="FDOC1" onchange="return fileValidation(this.id)">
                                                                        <span class="text-danger ValidationSpan" id="SpanDOC1" style="display:none;">Please Insert File</span>
                                                                    </td>
                                                                    <td>
                                                                        @if (@Model.Doc1 != null && @Model.Doc1 != "")
                                                                        {   
                                                                            <a href="/LicenceApplication/DownloadFile/?FileName=@Model.Doc1"><i class="fas fa-download"></i></a>
                                                                            @*<a href="/LicenceApplication/DownloadFile/?FileName=@Model.LicecneDoc"><i class="fas fa-download"></i></a>*@
                                                                        }
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td>
                                                                        @Html.Label("Gumasta Certificate")
                                                                    </td>
                                                                    <td>
                                                                         @Html.HiddenFor(e => e.Doc2, new {@ID = "Doc2"})
                                                                        <input type="file" id="FDOC2" class="FDOC2" onchange="return fileValidation(this.id)">
                                                                        <span class="text-danger ValidationSpan" id="SpanDOC2" style="display:none;">Please Insert File</span>
                                                                    </td>
                                                                    <td>
                                                                           @if (@Model.Doc2 != null && @Model.Doc2 != "")
                                                                        {
                                                                            <a href="/LicenceApplication/DownloadFile/?FileName=@Model.Doc2"><i class="fas fa-download"></i></a>
                                                                        }
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td>
                                                                        @Html.Label("EPF Code Certificate")
                                                                    </td>
                                                                    <td>
                                                                       @Html.HiddenFor(e => e.Doc3, new {@ID = "Doc3"})
                                                                        <input type="file" id="FDOC3" class="FDOC3" onchange="return fileValidation(this.id)">
                                                                        <span class="text-danger ValidationSpan" id="SpanDOC3" style="display:none;">Please Insert File</span>
                                                                    </td>
                                                                    <td>
                                                                           @if (@Model.Doc3 != null && @Model.Doc3 != "")
                                                                        {
                                                                            <a href="/LicenceApplication/DownloadFile/?FileName=@Model.Doc3"><i class="fas fa-download"></i></a>
                                                                        }
                                                                    </td>
                                                                </tr>
                                                                 <tr>
                                                                    <td>
                                                                        @Html.Label("ESI Code Certificate")
                                                                    </td>
                                                                    <td>
                                                                       @Html.HiddenFor(e => e.Doc4, new {@ID = "Doc4"})
                                                                        <input type="file" id="FDOC4" class="FDOC4" onchange="return fileValidation(this.id)">
                                                                        <span class="text-danger ValidationSpan" id="SpanDOC4" style="display:none;">Please Insert File</span>
                                                                    </td>
                                                                    <td>
                                                                         @if (@Model.Doc4 != null && @Model.Doc4 != "")
                                                                        {
                                                                            <a href="/LicenceApplication/DownloadFile/?FileName=@Model.Doc4"><i class="fas fa-download"></i></a>
                                                                        }
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td>
                                                                        @Html.Label("Pan card of Establishment")
                                                                    </td>
                                                                    <td>
                                                                       @Html.HiddenFor(e => e.Doc5, new {@ID = "Doc5"})
                                                                        <input type="file" id="FDOC5" class="FDOC5" onchange="return fileValidation(this.id)">
                                                                        <span class="text-danger ValidationSpan" id="SpanDOC5" style="display:none;">Please Insert File</span>
                                                                    </td>
                                                                    <td>
                                                                        @if (@Model.Doc5 != null && @Model.Doc5 != "")
                                                                        {
                                                                            <a href="/LicenceApplication/DownloadFile/?FileName=@Model.Doc5"><i class="fas fa-download"></i></a>
                                                                        }
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td>
                                                                        @Html.Label("Others")
                                                                    </td>
                                                                    <td>
                                                                       @Html.HiddenFor(e => e.Doc6, new {@ID = "Doc6"})
                                                                        <input type="file" id="FDOC6" class="FDOC6" onchange="return fileValidation(this.id)">
                                                                        <span class="text-danger ValidationSpan" id="SpanDOC6" style="display:none;">Please Insert File</span>
                                                                    </td>
                                                                    <td>
                                                                        @if (@Model.Doc6 != null && @Model.Doc6 != "")
                                                                        {
                                                                            <a href="/LicenceApplication/DownloadFile/?FileName=@Model.Doc6"><i class="fas fa-download"></i></a>
                                                                        }
                                                                    </td>
                                                                </tr>
                                                               @* <tr>
                                                                    <td>
                                                                        @Html.Label("Doc4")
                                                                    </td>
                                                                    <td>
                                                                        <input type="file" id="DOC4" class="fileUpload" onchange="return fileValidation(this.id)">
                                                                        <span class="text-danger ValidationSpan" id="SpanfileUpload2" style="display:none;">Please Insert File</span>
                                                                    </td>
                                                                    <td>
                                                                        @if (@Model.Doc3 != "")
                                                                        {
                                                                            <a href="/ReinstatementAppliaction/DownloadFile/?FileName=@Model.Doc3"><i class="fas fa-download"></i></a>
                                                                        }
                                                                    </td>
                                                                </tr>*@
                                                            </tbody>
                                                        </table>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12" style="padding-left: 20%;">
                                                    @Html.CheckBoxFor(e => e.IsSubmit, new { @ID="IsSubmit"})
                                                    <span class="text-danger ValidationSpan" id="SpanIsSubmit" style="display:none;">Please Insert File</span>
                                                    @Html.Label("I hereby declare that the particulars given above are true to the best of my knowledge and beliefs")
                                                  @*  @Html.CheckBoxFor(e => e.IsQryReplied, new { @ID="IsSubmit"})
                                                    @Html.Label("Is Query Replied")*@
                                                </div>
                                            </div>

                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12" style="padding-left: 35%;">
                                                    @*<button class="btn btn-primary" onclick="stepper1.previous()">Previous</button>*@
                                                    @if (@Model.IsSubmit == true )
                                                    {
                                                        <input type="button" class="btn btn-primary" value="Previous" onclick="prev(5,0)" />
                                                    }
                                                     @if (@Model.ActionCode == 4 )
                                                    {
                                                        <input type="button" id="btnSave" class="btn btn-primary" value="Save & Submit" onclick="saveDocument(1)" />                                                        
                                                    }
                                                    else
                                                    {
                                                        <input type="button" id="btnSave" class="btn btn-primary" value="Save" onclick="saveDocument(0)" />
                                                    }
                                                    @if(Model.ActionCode !=4)
                                                    {
                                                        @if (@Model.Doc1 == "" && @Model.Doc2 == "" && @Model.Doc3 == "" )
                                                        {
                                                        <input type="button" id="btnSubmit" disabled="disabled" class="btn btn-primary" value="Submit" onclick="saveDocument(1)" />
                                                        }
                                                        else
                                                        {
                                                        <input type="button" id="btnSubmit" disabled="disabled" class="btn btn-primary" value="Submit" onclick="SubmitApplication(0)" />
                                                        }
                                                    }
                                                    
                                                    @Html.ActionLink("Cancel", "index", "LicenceApplication", new { area = "" }, new { @class = "btn btn-primary" })
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @*stepper1.next()*@
            </div>



        </div>
    </div>
    @*  </div>
    </div>*@
    @*</div>*@
        <div class="container mt-5" style="max-width:100%;">

        <div class="content-wrapper" id="Divverified">
            <div class="row">
                <div class="col-12 grid-margin stretch-card">
                    <div class="card">
                        <div class="card-body">
                             <div id="DivReviewComment">
                                <fieldset class="border p-2">
                                    <legend>Review Comment:</legend>
                                    <div class="form-group">
                                        <div class="row">

                                            <div class="col-md-5">
                                                @Html.Label("ACL Review")
                                                @Html.TextAreaFor(e => e.ACL_Review_Comments, new { @class = "form-control", @ID="ACL_Review_Comments", required = "required" })
                                                <span class="text-danger ValidationSpan" id="SpanACL_Review_Comments" style="display:none;">Please Enter CLRA Note</span>
                                            </div>
                                            <div class="col-md-5">
                                                @Html.Label("DCL Review")
                                                @Html.TextAreaFor(e => e.DCL_Review_Comments, new { @class = "form-control", @ID="DCL_Review_Comments", required = "required" })
                                                <span class="text-danger ValidationSpan" id="SpanDCL_Review_Comments" style="display:none;">Please Enter CLRA Note</span>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>

                            <div id="DivIsCLRA_verified">
                            <fieldset class="border p-2">
                                <legend>CLRA:</legend>
                                <div class="form-group">
                                    <div class="row">

                                        <div class="col-md-3">

                                            @if (@Model.IsCLRA_verified == true)
                                            {
                                                <input type="radio" value="true" checked="checked" id="IsCLRA_verifiedApprove" name="IsCLRA_verified" /> <span> Approve</span>
                                            }
                                            else
                                            {
                                                <input type="radio" value="false" id="IsCLRA_verifiedApprove" name="IsCLRA_verified" /> <span> Approve</span>
                                            }

                                            @if (@Model.IsCLRA_verified == false)
                                            {
                                                <input type="radio" value="true" checked="checked" id="IsCLRA_verifiedReject" name="IsCLRA_verified" /><span> Reject</span>
                                            }
                                            else
                                            {
                                                <input type="radio" value="false" id="IsCLRA_verifiedReject" name="IsCLRA_verified" /> <span> Reject</span>
                                            }

                                        </div>
                                         <div class="col-md-5">
                                                @* @Html.Label("Approve DOC") *@
                                                <input type="file" id="IsCLRA_Approve_DOC" class="IsCLRA_Approve_DOC" onchange="return fileValidation(this.id)">
                                                @* <span class="text-danger ValidationSpan" id="SpanMTWNote" style="display:none;">Please Enter MTW Note</span>*@
                                                @if (@Model.Approve_DOC != "" && @Model.Approve_DOC != null)
                                                {
                                                    <a href="~/Documents/LicenceApplication/@Model.Approve_DOC" download><i class="fas fa-download"></i></a>
                                                }
                                         </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-5">
                                            @Html.Label("Note") <span class="text-danger">*</span>
                                            @Html.TextAreaFor(e => e.CLRANote, new { @class = "form-control", @ID="CLRANote", required = "required" })
                                                <span class="text-danger ValidationSpan" id="SpanCLRANote" style="display:none;">Please Enter CLRA Note</span>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                            </div>

                             <div id="DivIsIMW_verified">
                             <fieldset class="border p-2">
                                <legend>IsIMW:</legend>
                                <div class="form-group">
                                    <div class="row">

                                        <div class="col-md-3">

                                            @if (@Model.IsIMW_verified == true)
                                            {
                                                <input type="radio" value="true" checked="checked" id="IsIMW_verifiedApprove" name="IsIMW_verified" /> <span> Approve</span>
                                            }
                                            else
                                            {
                                                <input type="radio" value="false" id="IsIMW_verifiedApprove" name="IsIMW_verified" /> <span> Approve</span>
                                            }

                                            @if (@Model.IsIMW_verified == false)
                                            {
                                                <input type="radio" value="true" checked="checked" id="IsIMW_verifiedReject" name="IsIMW_verified" />

                                                <span> Reject</span>
                                            }
                                            else
                                            {
                                                <input type="radio" value="false" id="IsIMW_verifiedReject" name="IsIMW_verified" /> <span> Reject</span>
                                            }

                                        </div>
                                         <div class="col-md-3">
                                                @* @Html.Label("Approve DOC") *@
                                                <input type="file" id="IsIMW_Approve_DOC" class="IsIMW_Approve_DOC" onchange="return fileValidation(this.id)">
                                                @* <span class="text-danger ValidationSpan" id="SpanMTWNote" style="display:none;">Please Enter MTW Note</span>*@

                                                @if (@Model.Approve_DOC != "" && @Model.Approve_DOC != null)
                                                {
                                                    <a href="~/Documents/LicenceApplication/@Model.Approve_DOC" download><i class="fas fa-download"></i></a>
                                                }
                                            </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-5">
                                            @Html.Label("Note") <span class="text-danger">*</span>
                                            @Html.TextAreaFor(e => e.PrincipalEmployerInformationdetaillst[0].IMWNote, new { @class = "form-control", @ID="IMWNote", required = "required" })
                                            <span class="text-danger ValidationSpan" id="SpanIMWNote" style="display:none;">Please Enter IMW Note</span>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                             </div>

                              <div id="DivISMTW_verified">
                             <fieldset class="border p-2">
                                <legend>ISMTW:</legend>
                                <div class="form-group">
                                    <div class="row">

                                        <div class="col-md-3">

                                            @if (@Model.ISMTW_verified == true)
                                            {
                                                <input type="radio" value="true" checked="checked" id="ISMTW_verifiedApprove" name="ISMTW_verified" /> <span> Approve</span>
                                            }
                                            else
                                            {
                                                <input type="radio" value="false" id="ISMTW_verifiedApprove" name="ISMTW_verified" /> <span> Approve</span>
                                            }

                                            @if (@Model.ISMTW_verified == false)
                                            {
                                                <input type="radio" value="true" checked="checked" id="ISMTW_verifiedReject" name="ISMTW_verified" /> <span> Reject</span>
                                            }
                                            else
                                            {
                                                <input type="radio" value="false" id="ISMTW_verifiedReject" name="ISMTW_verified" /> <span> Reject</span>
                                            }

                                        </div>
                                        <div class="col-md-5">
                                                @* @Html.Label("Approve DOC") *@
                                                <input type="file" id="ISMTW_Approve_DOC" class="ISMTW_Approve_DOC" onchange="return fileValidation(this.id)">
                                                @* <span class="text-danger ValidationSpan" id="SpanMTWNote" style="display:none;">Please Enter MTW Note</span>*@
                                                @if (@Model.Approve_DOC != "" && @Model.Approve_DOC != null)
                                                {
                                                    <a href="~/Documents/LicenceApplication/@Model.Approve_DOC" download><i class="fas fa-download"></i></a>
                                                }
                                            </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-5">
                                            @Html.Label("Note") <span class="text-danger">*</span>
                                            @Html.TextAreaFor(e => e.MTWNote, new { @class = "form-control", @ID="MTWNote", required = "required" })
                                            <span class="text-danger ValidationSpan" id="SpanMTWNote" style="display:none;">Please Enter MTW Note</span>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                             </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-12">
                      <input type="button" id="btnACLSubmit" class="btn btn-primary" value="Submit" onclick="return SaveAclApproveal()" />
                       @if (Model.ISACL == 1 && Model.ISHO == 1)
                        {
                            @Html.ActionLink("Cancel", "LicenceApplicationHOACLList", "LicenceApplication", new { area = "" }, new { @class = "btn btn-primary",ID="CancleDocument" })
                        }
                        else if (Model.ISDCL == 1 && Model.ISHO == 1)
                        {
                            @Html.ActionLink("Cancel", "LicenceApplicationHODCLList", "LicenceApplication", new { area = "" }, new { @class = "btn btn-primary",ID="CancleDocument" })
                        }
                        else if (Model.UserMode == 2)
                        {
                            @Html.ActionLink("Cancel", "index", "LicenceApplication", new { area = "" }, new { @class = "btn btn-primary",ID="CancleDocument" })
                        }
                        else
                        {
                            @Html.ActionLink("Cancel", "LicenceACLList", "LicenceApplication", new { area = "" }, new { @class = "btn btn-primary",ID="CancleDocument" })
                        }
                        @*@Html.ActionLink("Cancel", "LicenceACLList", "LicenceApplication", new { area = "" }, new { @class = "btn btn-primary",ID="CancleDocument" })*@
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script>

     function humanise(diff) {
            var str = '';
            var values = {
                ' year': 365,
                ' month': 30,
                ' day': 1
            };

            for (var x in values) {
                var amount = Math.floor(diff / values[x]);

                if (amount >= 1) {
                    str += amount + x + (amount > 1 ? 's' : '') + ' ';
                    diff -= amount * values[x];
                }
            }

            return str;
        }

     

      function datediff(){
       debugger;
                var startDate = kendo.toString(kendo.parseDate(new Date()));
                var endDate = $("#ContractorDOB").data("kendoDatePicker").value();
                var days = Math.round((startDate - endDate)/1000/60/60/24);
                var years = Math.floor(days / 365);
                var tote =  humanise(days);

          if (years > 18) { 
                $("#ContractorAge").val(tote);
                $("#ContractorAge").attr("disabled", "disabled");
          }
          else{
              swal("Age should be greater than 18 for licence registration");
               $("#ContractorAge").val("");  
          }
      }
       if ($("#Pincode").val() == "0") {
                 $("#Pincode").val(""); 
              }

       if ($("#EPincode").val() == "0") {
                 $("#EPincode").val(""); 
              }
       if ($("#ddlArea").val() == "0") {
               $("#ddlArea").val(""); 
              }
        if ($("#ddlAreaEstablish").val() == "0") {
              $("#ddlAreaEstablish").val(""); 
           }
        if ($("#ChallanNo").val() == "0") {
             $("#ChallanNo").val(""); 
          }
           if ($("#LicenceFee").val() == "0") {
             $("#LicenceFee").val(""); 
          }
           if ($("#SecurityChallanNo").val() == "0") {
             $("#SecurityChallanNo").val(""); 
          }
           if ($("#LicenceFee").val() == "0") {
             $("#LicenceFee").val(""); 
          }
          if ($("#SecurityDeposit").val() == "0") {
             $("#SecurityDeposit").val(""); 
          }
 //$('#ContractorDOB').keyup(function(){

 //       debugger;
 //       var startDate = kendo.toString(kendo.parseDate(new Date()));
 //      var endDate = $("#ContractorDOB").data("kendoDatePicker").value();
 //      var days = Math.round((startDate - endDate)/1000/60/60/24);
 //      var years = Math.floor(days / 365);
 //       var tote =  humanise(days);
 //        $("#ContractorAge").val(tote);
 //          });
       // if (years != 0) {
       //      $("#ContractorAge").val(tote);
           
       //    $("#ContractorAge").attr("disabled", "disabled");
       //} 
       // else
       // {
       //     $("#ContractorAge").prop("disabled", false); 
       // }
  
 //    $('#ContractorDOB').keydown(function(){
 ////$('#ContractorAge').click(function () {
 //       debugger;
 //       var startDate = kendo.toString(kendo.parseDate(new Date()));
 //      var endDate = $("#ContractorDOB").data("kendoDatePicker").value();
 //      var days = Math.round((startDate - endDate)/1000/60/60/24);
 //      var years = Math.floor(days / 365);
 //       var tote =  humanise(days);
 //        $("#ContractorAge").val(tote);
 //      // if (years != 0) {
 //      //      $("#ContractorAge").val(tote);
           
 //      //    $("#ContractorAge").attr("disabled", "disabled");
 //      //} 
 //      // else
 //      // {
 //      //     $("#ContractorAge").prop("disabled", false); 
 //      // }
 //   });
//    $('#ContractorAge').change(function(){
//        var startDate = kendo.toString(kendo.parseDate(new Date()));
//       var endDate = $("#ContractorDOB").data("kendoDatePicker").value();
//       var days = Math.round((startDate - endDate)/1000/60/60/24);
//       var years = Math.floor(days / 365);
//        var tote =  humanise(days);
//   $("#ContractorAge").val(tote);
//})
</script>
<script>
    var stepper1Node = document.querySelector('#stepper1')
    //   var stepper1 = new Stepper(document.querySelector('#stepper1'))
    var stepper1 = new Stepper(document.querySelector('#stepper1'), {
        linear: false,
        animation: true
    });

    $(document).ready(function() {

          IsMultipulOnchange();
           StpView('@Model.stpid');

        bindEstablishDropdown(@Html.Raw(Json.Serialize(Model.TradunionList)));
        bindAreaDropdown(@Html.Raw(Json.Serialize(Model.AreaList)));
          bindAreaEstablishDropdown(@Html.Raw(Json.Serialize(Model.EstablishAreaList)));
        if ('@Model.ApplicationID' > '0' && '@Model.AreaID' > '0') {
            $("#DivArea").show();
        }
        else {
            $("#DivArea").hide();
        }
        if ('@Model.ApplicationID' > '0' && '@Model.EAreaID' > '0') {
            $("#EDivArea").show();
        }
        else {
            $("#EDivArea").hide();
        }
        $(".chosen-select").chosen();
        $('.chosen-container').css('width', '100%');
        PrincipalEmployerInformation();
         $("#ContractorDOB").kendoDatePicker({ format: "dd-MM-yyyy"});
          $("#ChallanDate").kendoDatePicker({ format: "dd-MM-yyyy"});   
         $("#SecurityChallanDate").kendoDatePicker({ format: "dd-MM-yyyy"});

    //DOB Disable Future date           
           $("#ContractorDOB").kendoDatePicker({
                //value: new Date(),
                 format: "dd-MM-yyyy",
                disableDates: function (date) {
              return (date && date.getTime() > (new Date()).getTime());
                }
            });

             $("#SecurityChallanDate").kendoDatePicker({
                //value: new Date(),
                 format: "dd-MM-yyyy",
                disableDates: function (date) {
              return (date && date.getTime() > (new Date()).getTime());
                }
            });

            $("#ChallanDate").kendoDatePicker({
                //value: new Date(),
                 format: "dd-MM-yyyy",
                disableDates: function (date) {
              return (date && date.getTime() > (new Date()).getTime());
                }
            });
        
         //$("#ContractorAge").attr("disabled", "disabled");

         if ('@Model.ApplicationID' > '0')
        { 
            //$(".hidestepper").css({ 'display': 'block' });
            $(".hidestepper").show(); 
            $('#IsMultipul').prop('disabled', true).trigger("chosen:updated");
            $("input[name=drprbl]").attr('disabled', true);
            $(".drpchk").attr('disabled', true); 
            //$("input.group1").prop("disabled", false);
        }
        if ('@Model.IsSubmit' == "True" && '@Model.ActionCode' != 4) {

            $("#btnEshSubmit").hide(); //disable input
            $("#btnSave").hide(); //disable input
            $("#btnSubmit").hide(); //disable input
            $("#IsSubmit").hide(); //disable input
            $("#btnconsubmit").hide(); //disable input
            $("#btnprisubmit").hide(); //disable input
            $('.k-widget.k-combobox.form-control.k-dropdowngrid.k-combobox-clearable').kendoMultiColumnComboBox({ enabled: false });
            $('.k-widget').css('display', 'unset');
            $('.form-control').attr('readonly', 'readonly');
            $('.chosen-select').prop('disabled', true).trigger("chosen:updated");
            //$('.form-control').kendoDatePicker({ enabled: false });
            
        }


         if ('@Model.ISACL' == 1 || '@Model.ISDCL' == 1) 
         {
            $("#CanclePrincipal").hide(); //disable input
            $("#CancleContractor").hide(); //disable input
            $("#CancleEstablishment").hide(); //disable input
            $("#CancleDocument").hide(); //disable input
         }
         //else
         //{
            $("#DivIsCLRA_verified").hide(); //disable input
            $("#DivIsIMW_verified").hide(); //disable input
            $("#DivISMTW_verified").hide(); //disable input
            $("#Divverified").hide(); //disable input
         //}

           if ('@Model.ISACL' == 1 || '@Model.ISDCL' == 1) 
         {
             $("#Divverified").show(); //disable input
            if ('@Model.ISDCL' == 1) {
                $('#DCL_Review_Comments').removeAttr('readonly');
            }
            if ('@Model.ISACL' == 1) {
                $('#ACL_Review_Comments').removeAttr('readonly');
            }
             if ('@Model.IsCLRA' == "True") 
             {
                  $("#DivIsCLRA_verified").show();
                  $('#CLRANote').removeAttr('readonly');
             }

              if ('@Model.IsIMW' == "True") 
              {
                  $("#DivIsIMW_verified").show();
                   $('#IMWNote').removeAttr('readonly');
             }

              if ('@Model.ISMTW' == "True") 
              {
                   $("#DivISMTW_verified").show(); 
                    $('#MTWNote').removeAttr('readonly');
             }
           }
         if ('@Model.ISView' == '1') 
          {
            $("#btnACLSubmit").hide(); //disable input
            $('.form-control').attr('readonly', 'readonly');
            $("input[name=drprbl]").attr('disabled', true);
            $("input[name=ISMTW_verified]").attr('disabled', true);
            $("input[name=IsIMW_verified]").attr('disabled', true);
            $("input[name=IsCLRA_verified]").attr('disabled', true);
            $(".drpchk").attr('disabled', true);
         }
      
    });

     function numberOnly(id) {
        var element = document.getElementById(id);
        element.value = element.value.replace(/[^0-9]/gi, "");
    }
    function numberOnlydecimal(id) {
        var element = document.getElementById(id);
        element.value = element.value.replace(/^[1-9]\d*(\.\d+)?$/, "");
    }
   

     function IsMultipulOnchange() {
        //$("#IsMultipul").change(function() {
        var IsMultipul = $("#IsMultipul").val();
        debugger;
        if (IsMultipul == 1) {
            $("#rgrbl").css({ 'display': 'block' });  //or
            $("#rgchk").css({ 'display': 'none' });  //or
        }
        else {
            //$("rgchk").show();
            //$('#rgchk').css('display', 'block');
            $("#rgchk").css({ 'display': 'block' });  //or
            $("#rgrbl").css({ 'display': 'none' });  //or
        }
    };
     $('input[type=radio][name=drprbl]').change(function() {
        debugger;
    if (this.id == 'rblIsCLRA')
    {
        $("#rblIsCLRA").val("true");
        $("#rblIsIMW").val("false");
        $("#rblISMTW").val("false");
    }
    else if (this.id == 'rblIsIMW')
    {
        $("#rblIsCLRA").val("false");
        $("#rblIsIMW").val("true");
        $("#rblISMTW").val("false");
    }
    else
    {
         $("#rblIsCLRA").val("false");
        $("#rblIsIMW").val("false");
        $("#rblISMTW").val("true");
    }
    });

     $('input[type=radio][name=ISMTW_verified]').change(function() {
        debugger;
    if (this.id == 'ISMTW_verifiedApprove')
    {
        $("#ISMTW_verifiedApprove").val("true");
        //$("#ISMTW_verifiedReject").val("false");
    }
    else
    {
        $("#ISMTW_verifiedApprove").val("false");
       // $("#ISMTW_verifiedReject").val("true");
    }
    });

    $('input[type=radio][name=IsIMW_verified]').change(function () {
        debugger;
        if (this.id == 'IsIMW_verifiedApprove') {
            $("#IsIMW_verifiedApprove").val("true");
            //$("#IsIMW_verifiedReject").val("false");
        }
        else {
            $("#IsIMW_verifiedApprove").val("false");
            //$("#IsIMW_verifiedReject").val("true");
        }
    });

    $('input[type=radio][name=IsCLRA_verified]').change(function () {
        debugger;
        if (this.id == 'IsCLRA_verifiedApprove') {
            $("#IsCLRA_verifiedApprove").val("true");
            //$("#IsIMW_verifiedReject").val("false");
        }
        else {
            $("#IsCLRA_verifiedApprove").val("false");
            //$("#IsIMW_verifiedReject").val("true");
        }
    });


    function bindAreaEstablishDropdown(obj) {

        $("#ddlAreaEstablish").kendoMultiColumnComboBox({
            dataTextField: "DisplayValue",
            dataValueField: "DataValue",
            height: 520,
            columns: [
                { field: "DisplayValue", title: "Registration Name", width: 200 },
            ],
            filter: "contains",
            filterFields: ["DisplayValue"],
            dataSource: {
                data: obj
            },
            change: function(e) {

                if (this.dataSource.data().length > 0) {
                    if (this.dataSource.data()[this.selectedIndex] != undefined) {
                        $('#EZoneID').val(this.dataSource.data()[this.selectedIndex].ZoneID);
                        $('#EAreaID').val(this.dataSource.data()[this.selectedIndex].DataValue);
    @*$('#ddlArea').val(this.dataSource.data()[this.selectedIndex].areaID);*@
                                                                                                        }
                }
            }

        });
    }

    function bindAreaDropdown(obj) {

        $("#ddlArea").kendoMultiColumnComboBox({
            dataTextField: "DisplayValue",
            dataValueField: "DataValue",
            height: 520,
            columns: [
                { field: "DisplayValue", title: "Registration Name", width: 200 },
            ],
            filter: "contains",
            filterFields: ["DisplayValue"],
            dataSource: {
                data: obj
            },
            change: function(e) {

                if (this.dataSource.data().length > 0) {
                    if (this.dataSource.data()[this.selectedIndex] != undefined) {
                        $('#ZoneID').val(this.dataSource.data()[this.selectedIndex].ZoneID);
                        $('#AreaID').val(this.dataSource.data()[this.selectedIndex].DataValue);
    @*$('#ddlArea').val(this.dataSource.data()[this.selectedIndex].areaID);*@
                                                                                                        }
                }
            }

        });
    }

    //Distric Change Method
    //Distric Change Method
    $(function() {
        $("#DistrictID").change(function() {

            $.ajax({
                type: "GET",
                url: "/LicenceApplication/AllList",
                headers: {"XSRF-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value},
                data: { mode: $("#EstablisDetailID").val(), DistrictID: $("#DistrictID").val() },
                success: function(response) {

                    $("#ddlArea").kendoMultiColumnComboBox().empty();
                    $("#TalukaID").empty();
                    var row = "";
                     row += "<option value='none' selected>Select</option>";
                    for (var i = 0; i < response.data.Talukalist.length; i++) {
                        row += "<option value=" + response.data.Talukalist[i].DataValue + ">" + response.data.Talukalist[i].DisplayValue + "</option>";
                    }
                    $("#TalukaID").html(row).trigger('chosen:updated');

                    if (response.data.AreaList != "") {
                        $("#DivArea").show();
                        bindAreaDropdown(response.data.AreaList);

                    }
                    else {
                        $("#DivArea").hide();
                        $("#ZoneID").val(0);
                        $("#AreaID").val(0);
                    }
                },
                failure: function(response) {
                    alert(response.responseText);
                },
                error: function(response) {
                    //respone will be returned here
                    $("#error").val(response.responseText);
                }
            });
        });
    });

    $(function() {
        $("#EDistrictID").change(function() {
            debugger;
            $.ajax({
                type: "GET",
                url: "/ConciliationApplication/AllList",
                headers: {"XSRF-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value},
                data: { mode: $("#ApplicationID").val(), DistrictID: $("#EDistrictID").val() },
                success: function(response) {
                    debugger;
                    $("#ddlAreaEstablish").kendoMultiColumnComboBox().empty();
                    $("#ETalukaID").empty();
                    var row = "";
                     row += "<option value='none' selected>Select</option>";
                    for (var i = 0; i < response.data.Talukalist.length; i++) {
                        row += "<option value=" + response.data.Talukalist[i].DataValue + ">" + response.data.Talukalist[i].DisplayValue + "</option>";
                    }
                    $("#ETalukaID").html(row).trigger('chosen:updated');

                    if (response.data.AreaList != "") {
                        $("#EDivArea").show();
                        bindAreaEstablishDropdown(response.data.AreaList);
                    }
                    else {
                        $("#EDivArea").hide();
                        $("#EZoneID").val(0);
                        $("#EAreaID").val(0);
                    }
                },
                failure: function(response) {
                    alert(response.responseText);
                },
                error: function(response) {
                    //respone will be returned here
                    $("#error").val(response.responseText);
                }
            });
        });
    });


    function SubmitContractorDetail(stpid) {
        debugger;
          var pincodeEx = /^[1-9][0-9]{5}$/;
          var pincode = $("#Pincode").val();
          var mailregEx = /^\b[A-Z0-9._%-]+@@[A-Z0-9.-]+\.[A-Z]{2,4}\b$/i;
          var email = $("#ContractorEmailId").val();
        var ErrorCnt = 0;
        $('.ValidationSpan').hide();
        if ($("#ContractorName").val() == "0" || $("#ContractorName").val() == "") {
            ErrorCnt++;
            $('#SpanContractorName').show();
        }

        if ($("#ContractorPAddress").val() == "0" || $("#ContractorPAddress").val() == "") {
            ErrorCnt++;
            $('#SpancontractorPAddress').show();
        }
         if ($("#ContractorSAddress").val() == "0" || $("#ContractorSAddress").val() == "") {
            ErrorCnt++;
            $('#SpancontractorSAddress').show();
        }

        if ($("#ContractorDOB").val() == "0" || $("#ContractorDOB").val() == "") {
            ErrorCnt++;
            $('#ContractorDOB').show();
        }

        if ($("#ContractorAge").val() == "0" || $("#ContractorAge").val() == "") {
            ErrorCnt++;
            $('#SpanContracttorAge').show();
        }
        if ($("#ContractorEmailId").val() == "0" || $("#ContractorEmailId").val() == "") {
            ErrorCnt++;
            $('#SpanContractorEmail').show();
        }
        else if (!email.match(mailregEx)) {
            ErrorCnt++;
            $('#SpanInvalidCtrEmail').show();
        }
        //if ($("#ContractorMobileNo").val() == "0" || $("#ContractorMobileNo").val() == "") {
        //    ErrorCnt++;
        //    $('#SpanContractorMobile').show();
        //}
         if ($("#ContractorMobileNo").val().length < 10 || $("#ContractorMobileNo").val() == "0" || $("#ContractorMobileNo").val() == "") {
            ErrorCnt++;
            $('#SpanContractorvMobile').show();
        }
        if ($("#DistrictID").val() == "0" || $("#DistrictID").val() == "") {
            ErrorCnt++;
            $('#Spandistrict').show();
        }
        if ($("#TalukaID").val() == "0" || $("#TalukaID").val() == "") {
            ErrorCnt++;
            $('#Spantaluka').show();
        }

        if ($("#Pincode").val() == "0" || $("#Pincode").val() == "") {
            ErrorCnt++;
            $('#Spanpincode').show();
        }

        else if ($("#Pincode").val().length < 6) {
            ErrorCnt++;
            $('#Spanlengthpincode').show();
        }
         else if (!pincode.match(pincodeEx)) {
                ErrorCnt++;
                $('#spaninvalid').show();
        }


    @*            if ($("#TerminationDate").val() == "0" || $("#TerminationDate").val() == "") {
            ErrorCnt++;
            $('#SpanTerminationDate').show();
            }*@ 
        var IsMultipul = $("#IsMultipul").val();
        var CLRA; var IMW; var MTW;
        debugger;
        if (IsMultipul == 1) {

            CLRA = $("#rblIsCLRA").val();
            IMW = $("#rblIsIMW").val();
            MTW = $("#rblISMTW").val();

        }
        else {

            CLRA = $("#chkIsCLRA").val();
            IMW = $("#chkIsIMW").val();
            MTW = $("#chkISMTW").val();
        }

        if (ErrorCnt > 0) {
         return false;
        }

        if (ErrorCnt == 0) {
            var myData = {
                ApplicationID: $('#ApplicationID').val(),
                ContractorName: $('#ContractorName').val(),
                ContractorPAddress: $('#ContractorPAddress').val(),
                ContractorSAddress: $('#ContractorSAddress').val(),
                ContractorDOB: $('#ContractorDOB').val(),
                ContractorAge  : $('#ContractorAge').val(),
                DistrictID: $('#DistrictID').val(),
                TalukaID: $('#TalukaID').val(),
                Pincode: $('#Pincode').val(),
                ZoneID: $('#ZoneID').val(),
                AreaID: $('#AreaID').val(),
                ContractorEmailId : $('#ContractorEmailId').val(),
                ContractorMobileNo : $('#ContractorMobileNo').val(),
                URL: document.URL,
                IsCLRA: CLRA,
                IsIMW: IMW,
                ISMTW: MTW,
                IsMultipul: IsMultipul,
                RefRegistrationID: $('#RefRegistrationID').val(),
                ISAmendment: $('#ISAmendment').val(),
            };
            $.ajax
                ({
                    type: "POST",
                    url: "/LicenceApplication/SaveContractorAppliactionRecord",
                    headers: {"XSRF-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value},
                    dataType: "json",
                    data: myData,
                    success: function(data) {
                        debugger;
                        if (data.data.ErrorCode == 0) {
                            var ApplicationID = data.data.ApplicationID;
                            var IsMultipul = data.data.IsMultipul;
                            var TEMPID = data.data.TEMPID;
                            var ISNew = data.data.ISNew;
                            var IsEdit;
                            if (ISNew == 1) {
                                IsEdit = 1;
                            }
                            else {
                                IsEdit = $("#IsEdit").val();
                            }
                            // var Querystring = "ApplicationID=" + ApplicationID + "&ISNew=" + ISNew;
                            //var Querystring = "ApplicationID=" + ApplicationID;
                              //var Querystring = "id=" + TEMPID;
                                var Querystring = "id=" + TEMPID + "&ISACL=" + $("#ISACL").val() + "&ISDCL=" + $("#ISDCL").val() + "&ISView=" + $("#ISView").val() + "&ISHO=" + $("#ISHO").val() + "&ISAmendment=" + $("#ISAmendment").val() + "&IsEdit=" + IsEdit +  "&stpid="+stpid;
                              window.location.href = "/LicenceApplication/AddLicenceApplication?" + Querystring;
                              //location.reload();
                              swal(data.data.ErrorMassage)
                              //stepper1.next()
                        }
                        else {
                            swal(data.data.ErrorMassage);
                        }

                    },

                    error: function() {
                        swal(data.data.ErrorMassage);
                    }
                })
        }
    }
    function SubmitChallanSecurityDetail(stpid) {
        debugger;
        var ErrorCnt = 0;
        $('.ValidationSpan').hide();
       
        if ($("#ChallanNo").val() == "0" || $("#ChallanNo").val() == "") {
            ErrorCnt++;
            $('#SpanChallanNo').show();   
        }

        if ($("#ChallanDate").val() == "0" || $("#ChallanDate").val() == "") {
            ErrorCnt++;
            $('#SpanChallandate').show();
        }
         if ($("#LicenceFee").val() == "0" || $("#LicenceFee").val() == "") {
            ErrorCnt++;
            $('#SpanLicenceFee').show();
        }

        if ($("#TreasuryName").val() == "0" || $("#TreasuryName").val() == "") {
            ErrorCnt++;
            $('#SpanTreasuryName').show();
        }

        if ($("#chaalnafile").val() == "0" || $("#chaalnafile").val() == "") {
             if ('@Model.LicecneDoc' == '0' || '@Model.LicecneDoc' == '') {
                 ErrorCnt++;
                 $('#SpanChallandoc').show();
             }
        }
        // if ($("#PAddress").val() == "0" || $("#PAddress").val() == "") {
        //    ErrorCnt++;
        //    $('#SpanTradAddress').show();
        //}
        if ($("#SecurityChallanNo").val() == "0" || $("#SecurityChallanNo").val() == "") {
            ErrorCnt++;
            $('#SpanSecureChallanNo').show();
        }
        if ($("#SecurityChallanDate").val() == "0" || $("#SecurityChallanDate").val() == "") {
            ErrorCnt++;
            $('#SpanSecuChallanDate').show(); 
        }
         if ($("#SecurityDeposit").val() == "0" || $("#SecurityDeposit").val() == "") {
            ErrorCnt++;
            $('#SpanSecurityDeposit').show(); 
        }

        if ($("#TreasurName").val() == "0" || $("#TreasurName").val() == "") {
            ErrorCnt++;
            $('#spanTreasureName').show();
        }
         if ($("#securityfile").val() == "0" || $("#securityfile").val() == "") {
             if ('@Model.SecurityDoc' == '0' || '@Model.SecurityDoc' == '') {
                ErrorCnt++;
                $('#Spansecuritychallandoc').show();
             }
        }


    @*            if ($("#TerminationDate").val() == "0" || $("#TerminationDate").val() == "") {
            ErrorCnt++;
            $('#SpanTerminationDate').show();
            }*@


           if (ErrorCnt > 0) {
            return false;
        }

        if (ErrorCnt == 0) {
            //var myData = {
                //ApplicationID: $('#ApplicationID').val(),
                //ChallanNo: $('#LicenceChallanNo').val(),
                //ChallanDate: $('#ChallanDate').val(),
                //LicenceFee: $('#LicenceFee').val(),
                //TreasuryName: $('#TreasuryName').val(),
                //LicecneDoc: $('#chaalnafile').val(),
                //SecurityChallanNo: $('#SecurityChallanNo').val(),
                //SecurityChallanDate: $('#SecurityChallanDate').val(),
                //TreasurName: $('#TreasurName').val(),
                //SecurityDoc: $('#securityfile').val(),

                var ApplicationID = $('#ApplicationID').val();
				var ChallanNo = $('#ChallanNo').val();
				var ChallanDate = $('#ChallanDate').val();
				var LicenceFee = $('#LicenceFee').val();
				var TreasuryName = $('#TreasuryName').val();
				var LicecneDoc = $('#chaalnafile').val();
				var SecurityChallanNo = $('#SecurityChallanNo').val();
				var SecurityChallanDate = $('#SecurityChallanDate').val();
                var SecurityDeposit = $('#SecurityDeposit').val();
                var TreasurName = $('#TreasurName').val();
				//var SecurityDoc = $('#securityfile').val();

				var files = $('#chaalnafile').prop("files");
				var files1 = $('#securityfile').prop("files");

			    var url = "/LicenceApplication/SaveLicenceAndSecurityRecord?handler=MyUploader" + "&ApplicationID=" + ApplicationID + "&ChallanNo=" + ChallanNo + "&ChallanDate=" + ChallanDate + "&LicenceFee=" + LicenceFee + "&TreasuryName=" + TreasuryName + "&LicecneDoc=" + LicecneDoc + "&SecurityChallanNo=" + SecurityChallanNo + "&SecurityChallanDate=" + SecurityChallanDate + "&SecurityDeposit=" + SecurityDeposit + "&TreasurName=" + TreasurName;
				formData = new FormData();
				formData.append("MyUploader", files[0]);
				formData.append("MyUploader", files1[0]);
				//};
				jQuery.ajax({
					type: 'POST',
					url: url,
                    headers: {"XSRF-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value},
		@* dataType: "json",*@
					//data: myData,
					data: formData,
					cache: false,
					contentType: false,
					processData: false,
					success: function(repo) {
						debugger;
						if (repo.status.ErrorCode == 0) {
        //                    var ApplicationID = data.data.ApplicationID;
        //                    var IsMultipul = data.data.IsMultipul;
        //                    var TEMPID = data.data.TEMPID;
        //                     var Querystring = "id=" + TEMPID + "&ISACL=" + $("#ISACL").val() + "&ISDCL=" + $("#ISDCL").val() + "&ISView=" + $("#ISView").val() + "&ISHO=" + $("#ISHO").val()  + "&stpid="+stpid;
							 //window.location.href = "/LicenceApplication/AddLicenceApplication?" + Querystring;
							//alert(repo.status.ErrorMassage);
                            swal(repo.status.ErrorMassage);
                            stepper1.next()
							//location.reload();
						}
						else {
							//alert('repo.status.ErrorMassage');
                            swal(repo.status.ErrorMassage);
						}

					},

					error: function(request, message, error) {
						debugger;
						swal(request.responseJSON);
					}
									});
		}
					}


  //  function fileValidation() {
		//	debugger;
		//	var fileInput = document.getElementById('chaalnafile');

		//	var filePath = fileInput.value;

		//	var allowedExtensions =
		//		/(\.jpg|\.jpeg|\.png|\.pdf|\.doc|\.docx|\.xls|\.xlsx)$/i;

		//	if (!allowedExtensions.exec(filePath)) {
		//		alert('Invalid file type');
		//		fileInput.value = '';
		//		return false;
		//	}

		//}


  //  function fileValidation1() {
		//	debugger;
		//	var fileInput = document.getElementById('securityfile');

		//	var filePath = fileInput.value;

		//	var allowedExtensions =
		//		/(\.jpg|\.jpeg|\.png|\.pdf|\.doc|\.docx|\.xls|\.xlsx)$/i;

		//	if (!allowedExtensions.exec(filePath)) {
		//		alert('Invalid file type');
		//		fileInput.value = '';
		//		return false;
		//	}

		//}

        function fileValidation(id) {
        debugger;
        var fileInput = document.getElementById(id);

        var filePath = fileInput.value;

        // Allowing file type
        var allowedExtensions =
            /(\.jpg|\.jpeg|\.png|\.pdf|\.doc|\.docx|\.xls|\.xlsx)$/i;

        if (!allowedExtensions.exec(filePath)) {
            //alert('Invalid file type');
            swal('Invalid file type');
            fileInput.value = '';
            return false;
        }

        var size = $("#" + id)[0].files[0].size;

        if (size > 20000000) {
            //alert("Please upload file less than 20MB. Thanks!!");
            swal("Please upload file less than 20MB. Thanks!!");
            fileInput.value = '';
            return false;
        }

    }
//Submit final Application

    var ApplicationID = $('#ApplicationID').val();
    var AppIDl = ApplicationID.padStart(6, '0');
    var AppID = "LIC" + AppIDl;

    function SubmitApplication() {
        debugger;
        var ErrorCnt = 0;
        $('.ValidationSpan').hide();
        if ($("#IsSubmit").val() == "0" || $("#IsSubmit").val() == "") {
            ErrorCnt++;
            $('#SpanIsSubmit').show();
        }

       
        if ($("#ApplicationID").val() == "0" || $("#ApplicationID").val() == "") {
            ErrorCnt++;
            alert("please save your Establishment Detail after than try this");
            return false;
        }


        if (ErrorCnt > 0) {
            return false;
        }

        if (ErrorCnt == 0) {
            var myData = {
                ApplicationID: $('#ApplicationID').val(),
                IsSubmit: $('#IsSubmit').val(),
                URL: document.URL,
                AppID: AppID,
            };
            $.ajax
                ({
                    type: "POST",
                    headers: { "XSRF-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value },
                    url: "/LicenceApplication/LicenceApplicationUpdateSubmit",
                    dataType: "json",
                    data: myData,
                    success: function (data) {
                        debugger;

                        if (data.data.ErrorCode == 0) {
                            swal(data.data.ErrorMassage)
                                .then((value) => {
                                    window.location.href = "/LicenceApplication/Index";
                                });
                        }
                        else {
                            swal(data.data.ErrorMassage);
                        }
    @* if (data.data.ErrorCode == 0) {
                            window.location.href = "/ReinstatementAppliaction/Index";
                            alert(data.data.ErrorMassage);
                            }
                            else {
                            alert(data.data.ErrorMassage);
                            }*@

                                                                    },

                    error: function (request, message, error) {
                        debugger;
                        swal(request.responseJSON);
                    }
                })
        }
    }

	function saveDocument(id) {
           debugger;
        var ErrorCnt = 0;
        $('.ValidationSpan').hide();


        if ($("#ApplicationID").val() == "0" || $("#ApplicationID").val() == "") {
            ErrorCnt++;
            alert("please save your Establishment Detail after than try this");
            return false;
        }

        if ($("#Doc1").val() == "") {
            if ($("#FDOC1").val() == "0" || $("#FDOC1").val() == "") {
                ErrorCnt++;
                $('#SpanDOC1').show();
            }
        }

        //if ($("#DOC2").val() == "") {
        //    if ($("#FDOC2").val() == "0" || $("#FDOC2").val() == "") {
        //        ErrorCnt++;
        //        $('#SpanDOC2').show();
        //    }
        //}

        //if ($("#DOC3").val() == "") {
        //    if ($("#FDOC3").val() == "0" || $("#FDOC3").val() == "") {
        //        ErrorCnt++;
        //        $('#SpanDOC3').show();
        //    }
        //}

      

        if (ErrorCnt > 0) {
            return false;
        }

        if (ErrorCnt == 0) {
            var IsSubmit = id;
            var Doc1 = $('#FDOC1').prop("files");
            var Doc2 = $('#FDOC2').prop("files");
            var Doc3 = $('#FDOC3').prop("files");
            var Doc4 = $('#FDOC4').prop("files");
            var Doc5 = $('#FDOC5').prop("files");
            var Doc6 = $('#FDOC6').prop("files");

            var DOC1FileName ="0";
            var DOC2FileName ="1";
            var DOC3FileName ="2";
            var DOC4FileName ="3";
            var DOC5FileName ="4";
            var DOC6FileName ="5";

            var ApplicationID = $('#ApplicationID').val();
            var URL = document.URL;
            var AppIDl = ApplicationID.padStart(6, '0');
            var AppID = "LIC" + AppIDl;

            var url = "/LicenceApplication/DocumentUploader?handler=MyUploader" + "&ApplicationID=" + ApplicationID + "&IsSubmit=" + IsSubmit + "&URL=" + URL + "&AppID=" + AppID;
            formData = new FormData();
            //formData.append("MyUploader", DOC1[0]);
            //formData.append("MyUploader", DOC2[0]);
            //formData.append("MyUploader", DOC3[0]);
             if(Doc1.length > 0)
            {
                formData.append("MyUploader", Doc1[0], DOC1FileName);
            }
            else
            {
                formData.append("MyUploader", Doc1[0]);
            }
           
             if(Doc2.length > 0)
            {
               formData.append("MyUploader", Doc2[0], DOC2FileName);
            }
            else
            {
                formData.append("MyUploader", Doc2[0]);
            }

             if(Doc3.length > 0)
            {
                formData.append("MyUploader", Doc3[0], DOC3FileName);
            }
            else
            {
                formData.append("MyUploader", Doc3[0]);
            }

             if(Doc4.length > 0)
            {
                formData.append("MyUploader", Doc4[0], DOC4FileName);
            }
            else
            {
                formData.append("MyUploader", Doc4[0]);
            }
            
            if(Doc5.length > 0)
            {
                formData.append("MyUploader", Doc5[0], DOC5FileName);
            }
            else
            {
                formData.append("MyUploader", Doc5[0]);
            }

            if(Doc6.length > 0)
            {
                formData.append("MyUploader", Doc6[0], DOC6FileName);
            }
            else
            {
                formData.append("MyUploader", Doc6[0]);
            }

            if (Doc1.length == 0 && Doc2.length == 0 && Doc3.length == 0 && Doc4.length == 0 && Doc5.length == 0 && Doc6.length == 0 && $("#Doc1").val() != "") {
                swal("You are already upoaded Document if you need update So please select Document");
                return false;
            }

            jQuery.ajax({
                type: 'POST',
                url: url,
                headers: {"XSRF-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value},
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                success: function(repo) {
                    debugger;

                    if (repo.status.ErrorCode == 0) {
                        swal(repo.status.ErrorMassage)
                            .then((value) => {
                                //location.reload();
                                //window.location.href = "/LicenceApplication/Index";
                                 var TEMPID = repo.status.TEMPID;
                                    //var Querystring = "id=" + TEMPID + "&ISAL=" + $("#ISAL").val() + "&ISDL=" + $("#ISDL").val() + "&ISView=" + $("#ISView").val() + "&ISHO=" + $("#ISHO").val() + "&ISAmendment=" + $("#ISAmendment").val() + "&IsEdit=" + $("#IsEdit").val() + "&stpid=4" ;
                                     var Querystring = "id=" + TEMPID + "&ISACL=" + $("#ISACL").val() + "&ISDCL=" + $("#ISDCL").val() + "&ISView=" + $("#ISView").val() + "&ISHO=" + $("#ISHO").val() + "&ISAmendment=" + $("#ISAmendment").val() + "&IsEdit=" + $("#IsEdit").val() + "&stpid=5";
                                 window.location.href = "/LicenceApplication/AddLicenceApplication?" + Querystring;
                            });
                    }
                    else {
                        swal(repo.status.ErrorMassage);
                    }


    @*if (repo.status.ErrorCode == 0) {
                        alert(repo.status.ErrorMassage);
                        location.reload();
                        }
                        else{
                        alert(repo.status.ErrorMassage);
                        }*@
                   },
                error: function(request, message, error) {
                    debugger;
                    swal(request.responseJSON);
                }
            });
        }
    }	

		
     



     function Establishmentsubmit(stpid) {
        debugger;
        var ErrorCnt = 0;
        var pincodeEx = "[1-9][1-9][0-9]{4}$";
        //var pincodeEx = /^[1-9][0-9]{5}$/;
        var Epincode = $("#EPincode").val();

        var mailregEx = /^\b[A-Z0-9._%-]+@@[A-Z0-9.-]+\.[A-Z]{2,4}\b$/i;
        var email = $("#EmailID").val();
        $('.ValidationSpan').hide();
       
        if ($("#EstablishmentName").val() == "0" || $("#EstablishmentName").val() == "") {
            ErrorCnt++;
            $('#Spanestabname').show();
        }
        // if ($("#EmailID").val() == "0" || $("#EmailID").val() == "") {
        //    ErrorCnt++;
        //    $('#SpanEmailID').show();
        //}
        if ($("#EmailID").val() == "0" || $("#EmailID").val() == "") {
                ErrorCnt++;
            $('#SpanEmailID').show();
            }
             else if (!email.match(mailregEx)) {
                ErrorCnt++;
            $('#SpanvalidEmail').show();
            }

        if ($("#EstabliPAddress").val() == "0" || $("#EstabliPAddress").val() == "") {
            ErrorCnt++;
            $('#SpanEstabPAddress').show();
        }
         if ($("#EstabliSAddress").val() == "0" || $("#EstabliSAddress").val() == "") {
            ErrorCnt++;
            $('#SpanEstabSAddress').show();
        }

        if ($("#EDistrictID").val() == "0" || $("#EDistrictID").val() == "") {
            ErrorCnt++;
            $('#SpandEistrict').show();
        }
        if ($("#ETalukaID").val() == "0" || $("#ETalukaID").val() == "") {
            ErrorCnt++;
            $('#SpanEtalukaId').show();
        }


        
        
        //if (!pincode.match(pincoderegx)) {
        //    ErrorCnt++;
        //   $("#Spanvalidpincode").show();
        //}   
          if ($("#TypeOfEstablishment").val() == "0" || $("#TypeOfEstablishment").val() == "") {
            ErrorCnt++;
            $('#SpanEstablishmentTypeOfBusinessTrade').show();
        } 
       
         if ($("#EstablishMobileNo").val().length < 10 || $("#EstablishMobileNo").val() == "0" || $("#EstablishMobileNo").val() == "") {
            ErrorCnt++;
            $('#SpanMobileInvalid').show();
        }
         if ($("#EPincode").val() == "0" || $("#EPincode").val() == "") {
            ErrorCnt++;
            $('#SpanEincode').show();
        }

        else if ($("#EPincode").val().length < 6) {
            ErrorCnt++;
            $('#SpanlengtEhpincode').show();
        }
       
        else if (!Epincode.match(pincodeEx)) {
                ErrorCnt++;
                $('#spaneValidpincode').show();
        }
       if (ErrorCnt > 0) {
            return false;
        }

        if (ErrorCnt == 0) {
            var myData = {
                ApplicationID: $('#ApplicationID').val(),
                EstablismentCode: $('#ddlEstablishmentCode').val(),
                EstablihmentName: $('#EstablishmentName').val(),
                EmailID: $('#EmailID').val(),
                EstablishMobile: $('#EstablishMobileNo').val(),
                EstablishmentPAddress: $('#EstabliPAddress').val(),
                EstablishmentSAddress: $('#EstabliSAddress').val(),
                TypeOfBusiness: $('#TypeOfEstablishment').val(),
                EDistrictID: $('#EDistrictID').val(),
                ETalukaID: $('#ETalukaID').val(),
                EZoneID: $('#EZoneID').val(),
                ETalukaID: $('#ETalukaID').val(),
                EPincode: $('#EPincode').val(),
                //ZoneID: $('#ZoneID').val(),
                EAreaID: $('#EAreaID').val(),
                //URL: document.URL,
            };
            $.ajax
                ({
                    type: "POST",
                    url: "/LicenceApplication/SaveEstablishmentLicenceRecord",
                    headers: {"XSRF-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value},
                    dataType: "json",
                    data: myData,
                    success: function(data) {
                        debugger;
                        if (data.data.ErrorCode == 0) {
                            var ApplicationID = data.data.ApplicationID;
                            var TEMPID = data.data.TEMPID;
                            // var Querystring = "ApplicationID=" + ApplicationID + "&ISNew=" + ISNew;
                            //var Querystring = "ApplicationID=" + ApplicationID;
                            //var Querystring = "id=" + TEMPID;
                            swal(data.data.ErrorMassage)
                             //var Querystring = "id=" + TEMPID + "&ISAL=" + $("#ISAL").val() + "&ISDL=" + $("#ISDL").val() + "&ISView=" + $("#ISView").val() + "&ISHO=" + $("#ISHO").val() + "&ISAmendment=" + $("#ISAmendment").val() + "&IsEdit=" + $("#IsEdit").val() + "&stpid="+stpid
                             var Querystring = "id=" + TEMPID + "&ISACL=" + $("#ISACL").val() + "&ISDCL=" + $("#ISDCL").val() + "&ISView=" + $("#ISView").val() + "&ISHO=" + $("#ISHO").val() + "&ISAmendment=" + $("#ISAmendment").val() + "&IsEdit=" + $("#IsEdit").val() + "&stpid="+stpid;
                             window.location.href = "/LicenceApplication/AddLicenceApplication?" + Querystring;
                             //alert(data.data.ErrorMassage);
                             
                             //stepper1.next()
                        }
                        else {
                            //alert('Something went wrong!');
                            swal(data.data.ErrorMassage)
                        }

                    },

                    error: function() {
                        //alert('Something went wrong!');
                        swal(request.responseJSON);
                    }
                })
        }
    }


     var E = 0;

    //Principal Employer Information
    function Fn_AddPrincipalEmployerInformation() {

        debugger
        var i;
        var ApplicationID = $('#ApplicationID').val();
        var PrincipalID = 0;
        var Districtlist = @Html.Raw(Json.Serialize(@Model.PrincipalEmployerInformationdetaillst[0].Districtlist));

    @*  var AddEducationdetails = "<div class='row'>";*@
                                                    var AddEducationdetails = "";
        AddEducationdetails += "<div id='DivPrincipal_" + E + "'><a  class='ml-3' id='PrincipalDelete_" + E + "' style='float: right;' onclick='RemovePrincipal(" + E + ")'><i class='fas fa-trash-alt'></i></a>";
        AddEducationdetails += "<fieldset class='border p-2'>";
    @*  AddEducationdetails += "<legend  class='w-auto'>Establis Detail:"+E+" </legend>";*@
            AddEducationdetails += "<div class='form-group'>";
        AddEducationdetails += "<div class='row'>";
        AddEducationdetails += "<div class='col-md-6'>";
        AddEducationdetails += "<label for='Applicant_Name'>Principal Employer Name <span class='text-danger ml-1'>*</span></label>";
        AddEducationdetails += "<input type='hidden' class='ApplicationID' name='ApplicationID_" + E + "' value='" + ApplicationID + "' id='ApplicationID_" + E + "' />";
        AddEducationdetails += "<input type='hidden' name='PrincipalID_" + E + "' value='" + PrincipalID + "' id='PrincipalID_" + E + "' />";
        AddEducationdetails += "<input class='form-control'' style='width: 100%;' id='PrincipalEmployerName_" + E + "' name='PrincipalEmployerName_" + E + "'  type='text' value=''>";
        AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPrincipalEmployerName_" + E + "' style='display:none;'>Please Enter Employer Name</span>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "<div class='col-md-6'>";
        AddEducationdetails += "<label for='Applicant_Name'>Fathers Name (In case of individuals)</label>";
        AddEducationdetails += "<input class='form-control'' style='width: 100%;' id='PrincipalFtherName_" + E + "' name='PrincipalFtherName_" + E + "'  type='text' value=''>";
        AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPrincipalFtherName_" + E + "' style='display:none;'>Please Enter Father Name</span>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "</div>";
    @*   AddEducationdetails += "</div>";
            AddEducationdetails += "</div>";*@


            AddEducationdetails += "<div class='form-group'>";
        AddEducationdetails += "<div class='row'>";
        AddEducationdetails += "<div class='col-md-5'>";
        AddEducationdetails += "<label for='P_Address'>Permanent Address<span class='text-danger ml-1'>*</span></label>";
        AddEducationdetails += "<textarea  class='form-control'' id='PrincipalPAddress_" + E + "' name='PrincipalPAddress_" + E + "'  type='text' value=''></textarea>";
        AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPrincipalPAddress_" + E + "' style='display:none;'>Please Enter Address</span>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "<div class='col-md-2' style='margin-top: auto;'>";
        AddEducationdetails += "<label for='Pin_code'>Copy Permanent Address</label>";
        AddEducationdetails += "&nbsp;<input  id='SameasPaddress_" + E + "' name='SameasPaddress_" + E + "'  type='checkbox' onclick='PrincipalCopyAddress(" + E + ")'>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "<div class='col-md-5'>";
        AddEducationdetails += "<label for='Applicant_Name'>Secondary Address <span class='text-danger ml-1'>*</span></label>";
        AddEducationdetails += "<textarea class='form-control'' id='PrincipalSAddress_" + E + "' name='PrincipalSAddress_" + E + "'  type='text' value=''></textarea>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "</div>";




        AddEducationdetails += "<div class='form-group'>";
        AddEducationdetails += "<div class='row'>";

        AddEducationdetails += "<div class='col-md-2'>";
        AddEducationdetails += "<label for='Pin_code'>Email</label>";
        AddEducationdetails += "<input class='form-control' placeholder='Enter Email' id='PrincipalEmail_" + E + "' name='PrincipalEmail_" + E + "' value=''>";
        AddEducationdetails += "</div>";

         AddEducationdetails += "<div class='col-md-2'>";
        AddEducationdetails += "<label for='Pin_code'>Mobile</label>";
        AddEducationdetails += "<input class='form-control' maxlength='10' oninput='numberOnly(this.id);' placeholder='Enter mobile' id='Principalmobile_" + E + "' name='Principalmobile_" + E + "' value=''>";
        AddEducationdetails += "</div>";

        AddEducationdetails += "<div class='col-md-2'>";
        AddEducationdetails += "<label for='Applicant_Name'>District<span class='text-danger ml-1'>*</span></label>";
        AddEducationdetails += "<select class='chosen-select form-control' name='PrincipalDistrictID_" + E + "' id='PrincipalDistrictID_" + E + "' onchange='PrincipalChangeDistrict(" + E + ")'>";
        AddEducationdetails += "<option value='0'>Select</option>";
        for (i = 0; i < Districtlist.length; ++i) {
            AddEducationdetails += "<option value=" + Districtlist[i].DataValue + ">" + Districtlist[i].DisplayValue + "</option>";
        }
        AddEducationdetails += "</select>";
        AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPrincipalDistrictID_" + E + "' style='display:none;'>Please Select District</span>";
        AddEducationdetails += "</div>";

        AddEducationdetails += "<div class='col-md-2'>";
        AddEducationdetails += "<label for='Applicant_Name'>Taluka<span class='text-danger ml-1'>*</span></label>";
        AddEducationdetails += "<select class='chosen-select form-control' name='PrincipalTalukaID_" + E + "' id='PrincipalTalukaID_" + E + "'>";
        AddEducationdetails += "<option value='0'>Select</option>";
        AddEducationdetails += "</select>";
        AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPrincipalTalukaID_" + E + "' style='display:none;'>Please Select Taluka</span>";
        AddEducationdetails += "</div>";

        AddEducationdetails += "<div class='col-md-2' id='DivPrincipalArea_" + E + "'  style='display:none;'>";
        AddEducationdetails += "<label for='Applicant_Name'>Area</label>";
        AddEducationdetails += "<input type='hidden' name='PrincipalZoneID_" + E + "' id='PrincipalZoneID_" + E + "' value='0'/>";
        AddEducationdetails += "<input type='hidden' name='PrincipalAreaID_" + E + "' id='PrincipalAreaID_" + E + "' value='0'/>";
        AddEducationdetails += "<input type='hidden' name='PrincipalIsActive_" + E + "' value='true' id='PrincipalIsActive_" + E + "' />";
        AddEducationdetails += "<input style='width: 100%;' class='form-control'' id='ddlPrincipalArea_" + E + "' name='ddlPrincipalArea_" + E + "'  type='text' value='0'>";
        AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanddlPrincipalArea_" + E + "' style='display:none;'>Please Select Area</span>";
        AddEducationdetails += "</div>";

        AddEducationdetails += "<div class='col-md-1'>";
        AddEducationdetails += "<label for='Pin_code'>Pin code<span class='text-danger ml-1'>*</span></label>";
        AddEducationdetails += "<input class='form-control'' id='PrincipalPincode_" + E + "' name='PrincipalPincode_" + E + "' maxlength='6' type='text' oninput='numberOnly(this.id);' value='0'>";
         AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPrincipalPincode_" + E + "' style='display:none;'>Please Select Pincode</span>";
        AddEducationdetails += "<span class='text-danger ValidationSpan'' id='ValidContractorPincode_" + E + "' style='display:none;'>Please Enter Valid PinCode </span>";
        AddEducationdetails += "</div>";

         AddEducationdetails += "</div>";
        AddEducationdetails += "</div>";

    @*  AddEducationdetails += "<legend  class='w-auto'>Establis Detail:"+E+" </legend>";*@
            AddEducationdetails += "<div class='form-group'>";
        AddEducationdetails += "<div class='col-md-12'>";
        AddEducationdetails += "<div class='row'>";

        AddEducationdetails += "<div class='col-md-5'>";
        AddEducationdetails += "<fieldset class='border p-2 row'>";
        AddEducationdetails += "<label for='Pin_code'>Principal Employer's workers<span class='text-danger ml-1'>*</span></label>";
        AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPrincipalEmployerworkers_" + E + "' style='display:none;'>Please Enter Principal Employer's workers Detail / Not available then Enter 0</span>";
        AddEducationdetails += "<div class='col-md-4'>";
        AddEducationdetails += "<input class='form-control ClsEmpwo' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Male' id='PrincipalMaleWorker_" + E + "'  name='PrincipalMaleWorker_" + E + "' value=''>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "<div class='col-md-4'>";
        AddEducationdetails += "<input class='form-control ClsEmpwo' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Female' id='PrincipalFemaleWorker_" + E + "' onkeyup='calcVal(" + E + ")' onkeydown='calcVal(" + E + ")' name='PrincipalFemaleWorker_" + E + "' value=''>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "<div class='col-md-4'>";
        AddEducationdetails += "<input class='form-control ClsEmpwo' oninput='numberOnly(this.id);'  maxlength='4' placeholder='Total' id='PrincipalTotalWorker_" + E + "' onkeyup='calcVal(" + E + ")' onkeydown='calcVal(" + E + ")' name='PrincipalTotalWorker_" + E + "' value='' disabled>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "</fieldset>";
        AddEducationdetails += "</div>";

        AddEducationdetails += "<div class='col-md-5 mx-2'>";
        AddEducationdetails += "<fieldset class='border p-2 row'>";
        AddEducationdetails += "<label for='Pin_code'>Contract workers<span class='text-danger ml-1'>*</span></label>";
        AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanContractworkers_" + E + "' style='display:none;'>Please Enter Contract workers Detail/ Not available then Enter 0</span>";
        AddEducationdetails += "<div class='col-md-4'>";
        AddEducationdetails += "<input class='form-control ClsConwo' oninput='numberOnly(this.id);'  maxlength='4' placeholder='Male' id='PrincipalContractMaleWorker_" + E + "'  name='PrincipalContractMaleWorker_" + E + "' value=''>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "<div class='col-md-4'>";
        AddEducationdetails += "<input class='form-control ClsConwo' oninput='numberOnly(this.id);'  maxlength='4' placeholder='Female' id='PrincipalContractFemaleWorker_" + E + "'  onkeyup='contractcalcVal(" + E + ")' onkeydown='calcVal(" + E + ")'  name='PrincipalContractFemaleWorker_" + E + "' value=''>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "<div class='col-md-4'>";
        AddEducationdetails += "<input class='form-control ClsConwo' oninput='numberOnly(this.id);'  maxlength='4' placeholder='Total' id='PrincipalContractTotalWorker_" + E + "' onkeyup='contractcalcVal(" + E + ")' onkeydown='calcVal(" + E + ")'  name='PrincipalContractTotalWorker_" + E + "' value='' disabled>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "</fieldset>";
        AddEducationdetails += "</div>";

        AddEducationdetails += "</div>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "</div>";


        AddEducationdetails += "<div class='form-group'>";
        AddEducationdetails += "<div class='col-md-12'>";
        AddEducationdetails += "<div class='row'>";

        AddEducationdetails += "<div class='col-md-5'>";
        AddEducationdetails += "<fieldset class='border p-2 row'>";
        AddEducationdetails += "<label for='Pin_code'>Fix term Workers<span class='text-danger ml-1'>*</span></label>";
        AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanFixtermWorkers_" + E + "' style='display:none;'>Please Enter Fix term Workers Detail / Not available then Enter 0</span>";
        AddEducationdetails += "<div class='col-md-4'>";
        AddEducationdetails += "<input class='form-control ClsFixTerm' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Male' id='PrincipalFixTermMaleWorker_" + E + "'  name='PrincipalFixTermMaleWorker_" + E + "' value=''>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "<div class='col-md-4'>";
        AddEducationdetails += "<input class='form-control ClsFixTerm' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Female' id='PrincipalFixTermFemaleWorker_" + E + "' onkeyup='fixworkcalcVal(" + E + ")' onkeydown='calcVal(" + E + ")'  name='PrincipalFixTermFemaleWorker_" + E + "' value=''>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "<div class='col-md-4'>";
        AddEducationdetails += "<input class='form-control ClsFixTerm' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Total' id='PrincipalFixTermTotalWorker_" + E + "' onkeyup='fixworkcalcVal(" + E + ")' onkeydown='calcVal(" + E + ")'  name='PrincipalFixTermTotalWorker_" + E + "' value='' disabled>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "</fieldset>";
        AddEducationdetails += "</div>";

        AddEducationdetails += "<div class='col-md-5 mx-2'>";
        AddEducationdetails += "<fieldset class='border p-2 row'>";
        AddEducationdetails += "<label for='Pin_code'>Others<span class='text-danger ml-1'>*</span></label>";
        AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPrincipalOthers_" + E + "' style='display:none;'>Please Enter Others Detail / Not available then Enter 0</span>";
        AddEducationdetails += "<div class='col-md-4'>";
        AddEducationdetails += "<input class='form-control ClsOther' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Male' id='PrincipalOthersMaleWorker_" + E + "' name='PrincipalOthersMaleWorker_" + E + "' value=''>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "<div class='col-md-4'>";
        AddEducationdetails += "<input class='form-control ClsOther' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Female' id='PrincipalOthersFemaleWorker_" + E + "' onkeyup='othercalval(" + E + ")' onkeydown='calcVal(" + E + ")' vname='PrincipalOthersFemaleWorker_" + E + "' value=''>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "<div class='col-md-4'>";
        AddEducationdetails += "<input class='form-control ClsOther' oninput='numberOnly(this.id);'  maxlength='4' placeholder='Total' id='PrincipalOthersTotalWorker_" + E + "' onkeyup='othercalval(" + E + ")' onkeydown='calcVal(" + E + ")'  name='PrincipalOthersTotalWorker_" + E + "' value='' disabled>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "</fieldset>";
        AddEducationdetails += "</div>";

        AddEducationdetails += "</div>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "</div>";

        AddEducationdetails += "</fieldset>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "</div>";
        AddEducationdetails += "</Br>"
        AddEducationdetails += "</Br>"

        $("#TextBoxContainer").append(AddEducationdetails);
        //bindEstablishDropdown(E);
        bindPrincipalAreaDropdown(E, "");
        $(".chosen-select").chosen();
        E++;

    }

</script>

<script>

    function SavePrincipalRegistrationRecord(stpid) {
        debugger;


        var ErrorCnt = 0;
         var pincoderegx = "[1-9][1-9][0-9]{4}$";
        $('.ValidationSpan').hide();
        var i = E;
        var v;


        //if ($("#ApplicationID").val() == "0" || $("#ApplicationID").val() == "") {
        //    ErrorCnt++;
        //    alert("please save your Establishment Detail after than try this");
        //    return false;
        //}

        for (v = 0; v < i; ++v) {

            var pincode = $("#PrincipalPincode_" + v + "").val();

            if ($("#PrincipalEmployerName_" + v + "").val() == "0" || $("#PrincipalEmployerName_" + v + "").val() == "") {
                ErrorCnt++;
                $("#SpanPrincipalEmployerName_" + v + "").show();
            }

            //if ($("#PrincipalFtherName_" + v + "").val() == "0" || $("#PrincipalFtherName_" + v + "").val() == "") {
            //    ErrorCnt++;
            //    $("#SpanPrincipalFtherName_" + v + "").show();
            //}

            if ($("#PrincipalPAddress_" + v + "").val() == "0" || $("#PrincipalPAddress_" + v + "").val() == "") {
                ErrorCnt++;
                $("#SpanPrincipalPAddress_" + v + "").show();
            }
            if ($("#PrincipalSAddress_" + v + "").val() == "0" || $("#PrincipalSAddress_" + v + "").val() == "") {
                ErrorCnt++;
                $("#SpanPrincipalSAddress_" + v + "").show();
            }

            if ($("#PrincipalDistrictID_" + v + "").val() == "0" || $("#PrincipalDistrictID_" + v + "").val() == "") {
                ErrorCnt++;
                $("#SpanPrincipalDistrictID_" + v + "").show();
            }

            if ($("#PrincipalTalukaID_" + v + "").val() == "0" || $("#PrincipalTalukaID_" + v + "").val() == "") {
                ErrorCnt++;
                $("#SpanPrincipalTalukaID_" + v + "").show();
            }

           if ($("#DivPrincipalArea_" + v + "").is(":visible")) {
                    if ($("#ddlPrincipalArea_" + v + "").val() == "0" || $("#ddlPrincipalArea_" + v + "").val() == "") {
                        ErrorCnt++;
                        $("#SpanddlPrincipalArea_" + v + "").show();
                    }
                }
            
             if ($("#PrincipalMaleWorker_" + v + "").val() == "") {
                    ErrorCnt++;
                    $("#SpanPrincipalEmployerworkers_" + v + "" ).show();
                }
                else if ($("#PrincipalFemaleWorker_" + v + "").val() == "") {
                    ErrorCnt++;
                    $("#SpanPrincipalEmployerworkers_" + v + "").show();
                }
                else if ($("#PrincipalTotalWorker_" + v + "").val() == "") {
                    ErrorCnt++;
                    $("#SpanPrincipalEmployerworkers_" + v + "").show();
                }

                if ($("#PrincipalContractMaleWorker_" + v + "").val() == "") {
                    ErrorCnt++;
                    $("#SpanContractworkers_" + v + "").show();
                }
                else if ($("#PrincipalContractFemaleWorker_" + v + "").val() == "") {
                    ErrorCnt++;
                    $("#SpanContractworkers_" + v + "").show();
                }
                else if ($("#PrincipalContractTotalWorker_" + v + "").val() == "") {
                    ErrorCnt++;
                    $("#SpanContractworkers_" + v + "").show();
                }

                if ($("#PrincipalFixTermMaleWorker_" + v + "").val() == "") {
                    ErrorCnt++;
                    $("#SpanFixtermWorkers_" + v + "").show();
                }
                else if ($("#PrincipalFixTermFemaleWorker_" + v + "").val() == "") {
                    ErrorCnt++;
                    $("#SpanFixtermWorkers_" + v + "").show();
                }
                else if ($("#PrincipalFixTermTotalWorker_" + v + "").val() == "") {
                    ErrorCnt++;
                    $("#SpanFixtermWorkers_" + v + "").show();
                }

                if ($("#PrincipalOthersMaleWorker_" + v + "").val() == "") {
                    ErrorCnt++;
                    $("#SpanPrincipalOthers_" + v + "").show();
                }
                else if ($("#PrincipalOthersFemaleWorker_" + v + "").val() == "") {
                    ErrorCnt++;
                    $("#SpanPrincipalOthers_" + v + "").show();
                }
                else if ($("#PrincipalOthersTotalWorker_" + v + "").val() == "") {
                    ErrorCnt++;
                    $("#SpanPrincipalOthers_" + v + "").show();
                }



            if ($("#PrincipalPincode_" + v + "").val() == "0" || $("#PrincipalPincode_" + v + "").val() == "") {
                ErrorCnt++;
                $("#SpanPrincipalPincode_" + v + "").show();
            }
               
            else if (!pincode.match(pincoderegx)) {
                    ErrorCnt++;
                   $("#ValidContractorPincode_" + v + "").show();
                }	

        }


        if (ErrorCnt > 0) {
            return false;
        }

        if (ErrorCnt == 0) {
            var myData = {
                XMLString: GetPrincipalRegistrationXML(),
            };
            $.ajax
                ({
                    type: "POST",
                    url: "/LicenceApplication/SavePrincipalEmployerLicenceRecord",
                    headers: {"XSRF-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value},
                    dataType: "json",
                    data: myData,
                    success: function(data) {
                        debugger;
                        if (data.data.ErrorCode == 0) {
                            var ApplicationID = data.data.ApplicationID;
                            var TEMPID = data.data.TEMPID;

                            //var Querystring = "id=" + TEMPID;
                             var Querystring = "id=" + TEMPID + "&ISACL=" + $("#ISACL").val() + "&ISDCL=" + $("#ISDCL").val() + "&ISView=" + $("#ISView").val() + "&ISHO=" + $("#ISHO").val() + "&ISAmendment=" + $("#ISAmendment").val() + "&IsEdit=" + $("#IsEdit").val() + "&stpid="+stpid;

                            window.location.href = "/LicenceApplication/AddLicenceApplication?" + Querystring;
                            //alert(data.data.ErrorMassage);
                            swal(data.data.ErrorMassage)
                             //stepper1.next()
                        }
                        else {
                            //alert(data.data.ErrorMassage);
                            swal(data.data.ErrorMassage)
                        }

                    },

                    error: function(request, message, error) {
                        debugger;
                        //alert(request.responseJSON);
                         swal(request.responseJSON)
                    }
                })
        }
    }

    function GetPrincipalRegistrationXML() {
        var xml = '';
        xml += '<DataTable>';
        var i = E;
        var v;
        for (v = 0; v < i; ++v) {
            xml += '<DataRow>';
            xml += "<" + "ApplicationID" + ">" + $("#ApplicationID_" + v + "").val() + "</" + "ApplicationID" + ">";
            xml += "<" + "PrincipalID" + ">" + $("#PrincipalID_" + v + "").val() + "</" + "PrincipalID" + ">";
            xml += "<" + "EmployerName" + ">" + $("#PrincipalEmployerName_" + v + "").val() + "</" + "EmployerName" + ">";
            xml += "<" + "FatherName" + ">" + $("#PrincipalFtherName_" + v + "").val() + "</" + "FatherName" + ">";
            xml += "<" + "PAddress" + ">" + $("#PrincipalPAddress_" + v + "").val() + "</" + "PAddress" + ">";
            xml += "<" + "SAddress" + ">" + $("#PrincipalSAddress_" + v + "").val() + "</" + "SAddress" + ">";
            xml += "<" + "EmailID" + ">" + $("#PrincipalEmail_" + v + "").val() + "</" + "EmailID" + ">";
            xml += "<" + "DistrictID" + ">" + $("#PrincipalDistrictID_" + v + "").val() + "</" + "DistrictID" + ">";
            xml += "<" + "TalukaID" + ">" + $("#PrincipalTalukaID_" + v + "").val() + "</" + "TalukaID" + ">";
            xml += "<" + "ZoneID" + ">" + $("#PrincipalZoneID_" + v + "").val() + "</" + "ZoneID" + ">";
            xml += "<" + "AreaID" + ">" + $("#PrincipalAreaID_" + v + "").val() + "</" + "AreaID" + ">";
            xml += "<" + "Pincode" + ">" + $("#PrincipalPincode_" + v + "").val() + "</" + "Pincode" + ">";
            xml += "<" + "URL" + ">" + document.URL + "</" + "URL" + ">";
            xml += "<" + "IP_Address" + ">" + $("#IP_Address").val() + "</" + "IP_Address" + ">";
            //xml += "<" + "UserID" + ">" + $("#UserID").val() + "</" + "UserID" + ">";
            xml += "<" + "mobile" + ">" + $("#Principalmobile_" + v + "").val() + "</" + "mobile" + ">";
            xml += "<" + "MaleWorker" + ">" + $("#PrincipalMaleWorker_" + v + "").val() + "</" + "MaleWorker" + ">";
            xml += "<" + "FemaleWorker" + ">" + $("#PrincipalFemaleWorker_" + v + "").val() + "</" + "FemaleWorker" + ">";
            xml += "<" + "TotalWorker" + ">" + $("#PrincipalTotalWorker_" + v + "").val() + "</" + "TotalWorker" + ">";
            xml += "<" + "ContractMaleWorker" + ">" + $("#PrincipalContractMaleWorker_" + v + "").val() + "</" + "ContractMaleWorker" + ">";
            xml += "<" + "ContractFemaleWorker" + ">" + $("#PrincipalContractFemaleWorker_" + v + "").val() + "</" + "ContractFemaleWorker" + ">";
            xml += "<" + "ContractTotalWorker" + ">" + $("#PrincipalContractTotalWorker_" + v + "").val() + "</" + "ContractTotalWorker" + ">";
            xml += "<" + "FixTermMaleWorker" + ">" + $("#PrincipalFixTermMaleWorker_" + v + "").val() + "</" + "FixTermMaleWorker" + ">";
            xml += "<" + "FixTermFemaleWorker" + ">" + $("#PrincipalFixTermFemaleWorker_" + v + "").val() + "</" + "FixTermFemaleWorker" + ">";
            xml += "<" + "FixTermTotalWorker" + ">" + $("#PrincipalFixTermTotalWorker_" + v + "").val() + "</" + "FixTermTotalWorker" + ">";
            xml += "<" + "OthersMaleWorker" + ">" + $("#PrincipalOthersMaleWorker_" + v + "").val() + "</" + "OthersMaleWorker" + ">";
            xml += "<" + "OthersFemaleWorker" + ">" + $("#PrincipalOthersFemaleWorker_" + v + "").val() + "</" + "OthersFemaleWorker" + ">";
            xml += "<" + "OthersTotalWorker" + ">" + $("#PrincipalOthersTotalWorker_" + v + "").val() + "</" + "OthersTotalWorker" + ">";
            if ($("#PrincipalIsActive_" + v + "").val() == "true") {
                xml += "<" + "IsActive" + ">" + 1 + "</" + "IsActive" + ">";
            }
            else {
                xml += "<" + "IsActive" + ">" + 0 + "</" + "IsActive" + ">";
            }
            xml += '</DataRow>';
        }
        xml += '</DataTable>'
        return xml;
    }

</script>

<script>
    var E = 0;

    //
    //function Fn_AddPrincipalEmployerInformation() {

    //    debugger
    //    var i;
    //    var ApplicationID = $('#ApplicationID').val();
    //    var PrincipalID = 0;
    //    var Districtlist = @Html.Raw(Json.Serialize(@Model.PrincipalEmployerInformationdetaillst[0].Districtlist));

    //                        var AddEducationdetails = "";
    //    AddEducationdetails += "<div id='DivPrincipal_" + E + "'><a class='ml-3' id='Delete' style='float: right;' onclick='RemovePrincipal(" + E + ")'><i class='fas fa-trash-alt'></i></a>";
    //    AddEducationdetails += "<fieldset class='border p-2'>";
    //        AddEducationdetails += "<div class='form-group'>";
    //    AddEducationdetails += "<div class='row'>";
    //    AddEducationdetails += "<div class='col-md-6'>";
    //    AddEducationdetails += "<label for='Applicant_Name'>Principal Employer Name*</label>";
    //    AddEducationdetails += "<input type='hidden' name='ApplicationID_" + E + "' value='" + ApplicationID + "' id='ApplicationID_" + E + "' />";
    //    AddEducationdetails += "<input type='hidden' name='PrincipalID_" + E + "' value='" + PrincipalID + "' id='PrincipalID_" + E + "' />";
    //    AddEducationdetails += "<input class='form-control'' style='width: 100%;' id='PrincipalEmployerName_" + E + "' name='PrincipalEmployerName_" + E + "'  type='text' value=''>";
    //    AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPrincipalEmployerName_" + E + "' style='display:none;'>Please Enter Establishment Code</span>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "<div class='col-md-6'>";
    //    AddEducationdetails += "<label for='Applicant_Name'>Fathers Name (In case of individuals):</label>";
    //    AddEducationdetails += "<input class='form-control'' style='width: 100%;' id='PrincipalFtherName_" + E + "' name='PrincipalFtherName_" + E + "'  type='text' value=''>";
    //    AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPrincipalFtherName_" + E + "' style='display:none;'>Please Enter Establishment Code</span>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "</div>";


    //        AddEducationdetails += "<div class='form-group'>";
    //    AddEducationdetails += "<div class='row'>";
    //    AddEducationdetails += "<div class='col-md-5'>";
    //    AddEducationdetails += "<label for='P_Address'>Permanent Address*</label>";
    //    AddEducationdetails += "<textarea  class='form-control'' id='PrincipalPAddress_" + E + "' name='PrincipalPAddress_" + E + "'  type='text' value=''></textarea>";
    //    AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPAddress_" + E + "' style='display:none;'>Please Enter Address</span>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "<div class='col-md-2' style='margin-top: auto;'>";
    //    AddEducationdetails += "<label for='Pin_code'>Copy Permanent Address</label>";
    //    AddEducationdetails += "<input  id='SameasPaddress_" + E + "' name='SameasPaddress_" + E + "'  type='checkbox' onclick='PrincipalCopyAddress(" + E + ")'>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "<div class='col-md-5'>";
    //    AddEducationdetails += "<label for='Applicant_Name'>Secondary Address</label>";
    //    AddEducationdetails += "<textarea class='form-control'' id='PrincipalSAddress_" + E + "' name='PrincipalSAddress_" + E + "'  type='text' value=''></textarea>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "</div>";




    //    AddEducationdetails += "<div class='form-group'>";
    //    AddEducationdetails += "<div class='row'>";

    //     AddEducationdetails += "<div class='col-md-2'>";
    //        AddEducationdetails += "<label for='Pin_code'>Email</label>";
    //        AddEducationdetails += "<input class='form-control'' id='PrincipalEmail_" + E + "' placeholder='Enter Email' name='PrincipalEmail_" + E + "' value='" + data[E].Email + "'>";
    //        AddEducationdetails += "</div>";

    //        AddEducationdetails += "<div class='col-md-2'>";
    //        AddEducationdetails += "<label for='Pin_code'>Mobile</label>";
    //        AddEducationdetails += "<input class='form-control' maxlength='10' oninput='numberOnly(this.id);' placeholder='Enter mobile' id='Principalmobile_" + E + "' name='Principalmobile_" + E + "' value='" + data[E].mobile + "'>";
    //        AddEducationdetails += "</div>";

    //    AddEducationdetails += "<div class='col-md-3'>";
    //    AddEducationdetails += "<label for='Applicant_Name'>District</label>";
    //    AddEducationdetails += "<select class='chosen-select form-control' name='PrincipalDistrictID_" + E + "' id='PrincipalDistrictID_" + E + "' onchange='PrincipalChangeDistrict(" + E + ")'>";
    //    AddEducationdetails += "<option value='0'>Select</option>";
    //    for (i = 0; i < Districtlist.length; ++i) {
    //        AddEducationdetails += "<option value=" + Districtlist[i].DataValue + ">" + Districtlist[i].DisplayValue + "</option>";
    //    }
    //    AddEducationdetails += "</select>";
    //    AddEducationdetails += "</div>";

    //    AddEducationdetails += "<div class='col-md-3'>";
    //    AddEducationdetails += "<label for='Applicant_Name'>Taluka</label>";
    //    AddEducationdetails += "<select class='chosen-select form-control' name='PrincipalTalukaID_" + E + "' id='PrincipalTalukaID_" + E + "'>";
    //    AddEducationdetails += "<option value='0'>Select</option>";
    //    AddEducationdetails += "</select>";
    //    AddEducationdetails += "</div>";

    //    AddEducationdetails += "<div class='col-md-2'>";
    //    AddEducationdetails += "<label for='Applicant_Name'>Area</label>";
    //    AddEducationdetails += "<input type='hidden' name='PrincipalZoneID_" + E + "' id='PrincipalZoneID_" + E + "' value='0'/>";
    //    AddEducationdetails += "<input type='hidden' name='PrincipalAreaID_" + E + "' id='PrincipalAreaID_" + E + "' value='0'/>";
    //    AddEducationdetails += "<input style='width: 100%;' class='form-control'' id='ddlPrincipalArea_" + E + "' name='ddlPrincipalArea_" + E + "'  type='text' value='0'>";
    //    AddEducationdetails += "</div>";

    //    AddEducationdetails += "<div class='col-md-1'>";
    //    AddEducationdetails += "<label for='Pin_code'>Pin code</label>";
    //    AddEducationdetails += "<input class='form-control'' id='PrincipalPincode_" + E + "' name='PrincipalPincode_" + E + "' maxlength='6' type='text' oninput='numberOnly(this.id);' value='0'>";
    //    AddEducationdetails += "</div>";

    //     AddEducationdetails += "</div>";
    //    AddEducationdetails += "</div>";

    //        AddEducationdetails += "<div class='form-group'>";
    //    AddEducationdetails += "<div class='col-md-12'>";
    //    AddEducationdetails += "<div class='row'>";

    //    AddEducationdetails += "<div class='col-md-5'>";
    //    AddEducationdetails += "<fieldset class='border p-2 row'>";
    //    AddEducationdetails += "<label for='Pin_code'>Principal Employer's workers<span class='text-danger'>*</span></label>";
    //    AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPrincipalEmployerworkers_" + E + "' style='display:none;'>Please Enter Principal Employer's workers Detail / Not available then Enter 0</span>";
    //    AddEducationdetails += "<div class='col-md-4'>";
    //    AddEducationdetails += "<input class='form-control ClsEmpwo' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Male' id='PrincipalMaleWorker_" + E + "'  name='PrincipalMaleWorker_" + E + "' value=''>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "<div class='col-md-4'>";
    //    AddEducationdetails += "<input class='form-control ClsEmpwo' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Female' id='PrincipalFemaleWorker_" + E + "' onkeyup='calcVal(" + E + ")' onkeydown='calcVal(" + E + ")' name='PrincipalFemaleWorker_" + E + "' value=''>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "<div class='col-md-4'>";
    //    AddEducationdetails += "<input class='form-control ClsEmpwo' oninput='numberOnly(this.id);'  maxlength='4' placeholder='Total' id='PrincipalTotalWorker_" + E + "' onkeyup='calcVal(" + E + ")' onkeydown='calcVal(" + E + ")' name='PrincipalTotalWorker_" + E + "' value='' disabled>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "</fieldset>";
    //    AddEducationdetails += "</div>";

    //    AddEducationdetails += "<div class='col-md-5 mx-2'>";
    //    AddEducationdetails += "<fieldset class='border p-2 row'>";
    //    AddEducationdetails += "<label for='Pin_code'>Contract workers<span class='text-danger'>*</span></label>";
    //    AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanContractworkers_" + E + "' style='display:none;'>Please Enter Contract workers Detail/ Not available then Enter 0</span>";
    //    AddEducationdetails += "<div class='col-md-4'>";
    //    AddEducationdetails += "<input class='form-control ClsConwo' oninput='numberOnly(this.id);'  maxlength='4' placeholder='Male' id='PrincipalContractMaleWorker_" + E + "'  name='PrincipalContractMaleWorker_" + E + "' value=''>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "<div class='col-md-4'>";
    //    AddEducationdetails += "<input class='form-control ClsConwo' oninput='numberOnly(this.id);'  maxlength='4' placeholder='Female' id='PrincipalContractFemaleWorker_" + E + "'  onkeyup='contractcalcVal(" + E + ")' onkeydown='calcVal(" + E + ")'  name='PrincipalContractFemaleWorker_" + E + "' value=''>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "<div class='col-md-4'>";
    //    AddEducationdetails += "<input class='form-control ClsConwo' oninput='numberOnly(this.id);'  maxlength='4' placeholder='Total' id='PrincipalContractTotalWorker_" + E + "' onkeyup='contractcalcVal(" + E + ")' onkeydown='calcVal(" + E + ")'  name='PrincipalContractTotalWorker_" + E + "' value='' disabled>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "</fieldset>";
    //    AddEducationdetails += "</div>";

    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "</div>";


    //    AddEducationdetails += "<div class='form-group'>";
    //    AddEducationdetails += "<div class='col-md-12'>";
    //    AddEducationdetails += "<div class='row'>";

    //    AddEducationdetails += "<div class='col-md-5'>";
    //    AddEducationdetails += "<fieldset class='border p-2 row'>";
    //    AddEducationdetails += "<label for='Pin_code'>Fix term Workers<span class='text-danger'>*</span></label>";
    //    AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanFixtermWorkers_" + E + "' style='display:none;'>Please Enter Fix term Workers Detail / Not available then Enter 0</span>";
    //    AddEducationdetails += "<div class='col-md-4'>";
    //    AddEducationdetails += "<input class='form-control ClsFixTerm' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Male' id='PrincipalFixTermMaleWorker_" + E + "'  name='PrincipalFixTermMaleWorker_" + E + "' value=''>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "<div class='col-md-4'>";
    //    AddEducationdetails += "<input class='form-control ClsFixTerm' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Female' id='PrincipalFixTermFemaleWorker_" + E + "' onkeyup='fixworkcalcVal(" + E + ")' onkeydown='calcVal(" + E + ")'  name='PrincipalFixTermFemaleWorker_" + E + "' value=''>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "<div class='col-md-4'>";
    //    AddEducationdetails += "<input class='form-control ClsFixTerm' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Total' id='PrincipalFixTermTotalWorker_" + E + "' onkeyup='fixworkcalcVal(" + E + ")' onkeydown='calcVal(" + E + ")'  name='PrincipalFixTermTotalWorker_" + E + "' value='' disabled>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "</fieldset>";
    //    AddEducationdetails += "</div>";

    //    AddEducationdetails += "<div class='col-md-5 mx-2'>";
    //    AddEducationdetails += "<fieldset class='border p-2 row'>";
    //    AddEducationdetails += "<label for='Pin_code'>Others<span class='text-danger'>*</span></label>";
    //    AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPrincipalOthers_" + E + "' style='display:none;'>Please Enter Others Detail / Not available then Enter 0</span>";
    //    AddEducationdetails += "<div class='col-md-4'>";
    //    AddEducationdetails += "<input class='form-control ClsOther' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Male' id='PrincipalOthersMaleWorker_" + E + "' name='PrincipalOthersMaleWorker_" + E + "' value=''>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "<div class='col-md-4'>";
    //    AddEducationdetails += "<input class='form-control ClsOther' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Female' id='PrincipalOthersFemaleWorker_" + E + "' onkeyup='othercalval(" + E + ")' onkeydown='calcVal(" + E + ")' vname='PrincipalOthersFemaleWorker_" + E + "' value=''>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "<div class='col-md-4'>";
    //    AddEducationdetails += "<input class='form-control ClsOther' oninput='numberOnly(this.id);'  maxlength='4' placeholder='Total' id='PrincipalOthersTotalWorker_" + E + "' onkeyup='othercalval(" + E + ")' onkeydown='calcVal(" + E + ")'  name='PrincipalOthersTotalWorker_" + E + "' value='' disabled>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "</fieldset>";
    //    AddEducationdetails += "</div>";

    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "</div>";

    //    AddEducationdetails += "</fieldset>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "</div>";
    //    AddEducationdetails += "</Br>"
    //    AddEducationdetails += "</Br>"

    //    $("#TextBoxContainer").append(AddEducationdetails);
    //    bindPrincipalAreaDropdown(E, "");
    //    $(".chosen-select").chosen();
    //    E++;

    //}

    function PrincipalCopyAddress(id) {
        debugger;
         if ($("#SameasPaddress_" + id).is(':checked')) {
        var val = $('#PrincipalPAddress_' + id).val();
        $('#PrincipalSAddress_' + id).val(val);
        $("#PrincipalSAddress_" + id).attr("disabled", "disabled");
       }
       else
        {
            @*$("#SAddress_"+id).val("");*@
            $("#PrincipalSAddress_"+id).prop("disabled", false); // 
        }      
    }

    function PrincipalEmployerInformation() {
        debugger;
        var data = @Html.Raw(Json.Serialize(@Model.PrincipalEmployerInformationdetaillst));
        var i;
        for (E = 0; E < data.length; E++) {


    @*  var AddEducationdetails = "<div class='row'>";*@
                            var AddEducationdetails = "";
            AddEducationdetails += "<div id='DivPrincipal_" + E + "'><a class='ml-3' id='Delete' style='float: right;' onclick='RemovePrincipal(" + E + ")'><i class='fas fa-trash-alt'></i></a>";
            AddEducationdetails += "<fieldset class='border p-2'>";
    @*  AddEducationdetails += "<legend  class='w-auto'>Establish Detail:" + E + " </legend>";*@

                AddEducationdetails += "<div class='form-group'>";
            AddEducationdetails += "<div class='row'>";
            AddEducationdetails += "<div class='col-md-6'>";
            AddEducationdetails += "<label for='Applicant_Name'>Principal Employer Name<span class='text-danger ml-1'>*</span></label>";
            AddEducationdetails += "<input type='hidden' name='ApplicationID_" + E + "' value='" + data[E].ApplicationID + "' id='ApplicationID_" + E + "' />";
            AddEducationdetails += "<input type='hidden' name='PrincipalID_" + E + "' value='" + data[E].PrincipalID + "' id='PrincipalID_" + E + "' />";
            AddEducationdetails += "<input class='form-control'' style='width: 100%;' id='PrincipalEmployerName_" + E + "' name='PrincipalEmployerName_" + E + "'  type='text' value='" + data[E].PrincipalName + "'>";
            AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPrincipalEmployerName_" + E + "' style='display:none;'>Please Enter Employer Name</span>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "<div class='col-md-6'>";
            AddEducationdetails += "<label for='Applicant_Name'>Fathers Name (In case of individuals):</label>";
            AddEducationdetails += "<input class='form-control'' style='width: 100%;' id='PrincipalFtherName_" + E + "' name='PrincipalFtherName_" + E + "'  type='text'  value='" + data[E].PrincipalFatherName + "'>";
            AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPrincipalFtherName_" + E + "' style='display:none;'>Please Enter Father Name</span>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "</div>";


            AddEducationdetails += "<div class='form-group'>";
            AddEducationdetails += "<div class='row'>";
            AddEducationdetails += "<div class='col-md-5'>";
            AddEducationdetails += "<label for='P_Address'>Permanent Address<span class='text-danger ml-1'>*</span></label>";
            AddEducationdetails += "<textarea  class='form-control'' id='PrincipalPAddress_" + E + "' name='PrincipalPAddress_" + E + "'  type='text'>" + data[E].PAddress + "</textarea>";
            AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPrincipalPAddress_" + E + "' style='display:none;'>Please Enter Permanent Address</span>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "<div class='col-md-2' style='margin-top: auto;'>";
            AddEducationdetails += "<label for='Pin_code'>Copy Permanent Address</label>";
            AddEducationdetails += "&nbsp;<input  id='SameasPaddress_" + E + "' name='SameasPaddress_" + E + "'  type='checkbox' onclick='PrincipalCopyAddress(" + E + ")'>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "<div class='col-md-5'>";
            AddEducationdetails += "<label for='Applicant_Name'>Secondary Address</label>";
            AddEducationdetails += "<textarea class='form-control'' id='PrincipalSAddress_" + E + "' name='PrincipalSAddress_" + E + "'  type='text'>" + data[E].SAddress + "</textarea>";
             AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPrincipalSAddress_" + E + "' style='display:none;'>Please Enter Secondary Address</span>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "</div>";

            AddEducationdetails += "<div class='form-group'>";
            AddEducationdetails += "<div class='row'>";

                        AddEducationdetails += "<div class='col-md-2'>";
            AddEducationdetails += "<label for='Pin_code'>Email</label>";
            AddEducationdetails += "<input class='form-control'' id='PrincipalEmail_" + E + "' placeholder='Enter Email' name='PrincipalEmail_" + E + "' value='" + data[E].EmailID + "'>";
            AddEducationdetails += "</div>";

            AddEducationdetails += "<div class='col-md-2'>";
            AddEducationdetails += "<label for='Pin_code'>Mobile</label>";
            AddEducationdetails += "<input class='form-control' maxlength='10' oninput='numberOnly(this.id);' placeholder='Enter mobile' id='Principalmobile_" + E + "' name='Principalmobile_" + E + "' value='" + data[E].mobile + "'>";
            AddEducationdetails += "</div>";

            AddEducationdetails += "<div class='col-md-2'>";
            AddEducationdetails += "<label for='District_Name'>District<span class='text-danger ml-1'>*</span></label>";
            AddEducationdetails += "<select class='chosen-select form-control' name='PrincipalDistrictID_" + E + "' value='" + data[E].DistrictID + "' id='PrincipalDistrictID_" + E + "' onchange='PrincipalChangeDistrict(" + E + ")'>";
            AddEducationdetails += "<option value='0'>Select</option>";
            for (i = 0; i < data[E].Districtlist.length; ++i) {
                if (data[E].Districtlist[i].DataValue == data[E].DistrictID) {
                    AddEducationdetails += "<option value=" + data[E].Districtlist[i].DataValue + " selected='selected'>" + data[E].Districtlist[i].DisplayValue + "</option>";
                }
                else {

                    AddEducationdetails += "<option value=" + data[E].Districtlist[i].DataValue + ">" + data[E].Districtlist[i].DisplayValue + "</option>";
                }
            }
            AddEducationdetails += "</select>";
            AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPrincipalDistrictID_" + E + "' style='display:none;'>Please Select District</span>";
            AddEducationdetails += "</div>";

            AddEducationdetails += "<div class='col-md-2' style='width: 366px;'>";
            AddEducationdetails += "<label for='Taluka_Name'>Taluka <span class='text-danger ml-1'>*</span></label>";
            AddEducationdetails += "<select class='chosen-select form-control' name='PrincipalTalukaID_" + E + "' value='" + data[E].TalukaID + "' id='PrincipalTalukaID_" + E + "'>";
            AddEducationdetails += "<option value='0'>Select</option>";
            for (i = 0; i < data[E].Talukalist.length; ++i) {
                if (data[E].Talukalist[i].DataValue == data[E].TalukaID) {
                    AddEducationdetails += "<option value=" + data[E].Talukalist[i].DataValue + " selected='selected'>" + data[E].Talukalist[i].DisplayValue + "</option>";
                }
                else {
                    AddEducationdetails += "<option value=" + data[E].Talukalist[i].DataValue + ">" + data[E].Talukalist[i].DisplayValue + "</option>";
                }
            }
            AddEducationdetails += "</select>";
             AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPrincipalTalukaID_" + E + "' style='display:none;'>Please Select Taluka</span>";
            AddEducationdetails += "</div>";


           AddEducationdetails += "<div class='col-md-2' id='DivPrincipalArea_" + E + "'>";
            AddEducationdetails += "<label for='Applicant_Name'>Area</label>";
            AddEducationdetails += "<input type='hidden' name='PrincipalZoneID_" + E + "' value='" + data[E].ZoneID + "' id='PrincipalZoneID_" + E + "' />";
            AddEducationdetails += "<input type='hidden' name='PrincipalAreaID_" + E + "' value='" + data[E].AreaID + "' id='PrincipalAreaID_" + E + "' />";
            AddEducationdetails += "<input type='hidden' name='PrincipalIsActive_" + E + "' value='" + data[E].IsActive + "' id='PrincipalIsActive_" + E + "' />";
            AddEducationdetails += "<input style='width: 100%;' class='form-control'' id='ddlPrincipalArea_" + E + "'  value='" + data[E].AreaID + "' name='ddlPrincipalArea_" + E + "'  type='text'>";
             AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanddlPrincipalArea_" + E + "' style='display:none;'>Please Select Area</span>";
            AddEducationdetails += "</div>";

            AddEducationdetails += "<div class='col-md-1'>";
            AddEducationdetails += "<label for='Pin_code'>Pin code</label>";
            AddEducationdetails += "<input class='form-control'' oninput='numberOnly(this.id);' id='PrincipalPincode_" + E + "' maxlength='6' name='PrincipalPincode_" + E + "'  type='text' value='" + data[E].Pincode + "'>";
            AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPrincipalPincode_" + E + "' style='display:none;'>Please Select Pincode</span>";
             AddEducationdetails += "<span class='text-danger ValidationSpan'' id='ValidContractorPincode_" + E + "' style='display:none;'>Please Enter Valid PinCode </span>";
            AddEducationdetails += "</div>";

             AddEducationdetails += "</div>";
            AddEducationdetails += "</div>";

            AddEducationdetails += "<div class='form-group'>";
            AddEducationdetails += "<div class='col-md-12'>";
            AddEducationdetails += "<div class='row'>";

            AddEducationdetails += "<div class='col-md-5'>";
            AddEducationdetails += "<fieldset class='border p-2 row'>";
            AddEducationdetails += "<label for='Pin_code'>Principal Employer's workers<span class='text-danger'>*</span></label>";
            AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPrincipalEmployerworkers_" + E + "' style='display:none;'>Please Enter Principal Employer's workers Detail/ Not available then Enter 0</span>";
            AddEducationdetails += "<div class='col-md-4'>";
            AddEducationdetails += "<input class='form-control ClsEmpwo' oninput='numberOnly(this.id);'  maxlength='4' placeholder='Male' id='PrincipalMaleWorker_" + E + "' name='PrincipalMaleWorker_" + E + "' value='" + data[E].MaleWorker + "'>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "<div class='col-md-4'>";
            AddEducationdetails += "<input class='form-control ClsEmpwo' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Female' id='PrincipalFemaleWorker_" + E + "' onkeyup='calcVal(" + E + ")' onkeydown='calcVal(" + E + ")' name='PrincipalFemaleWorker_" + E + "' value='" + data[E].FemaleWorker + "'>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "<div class='col-md-4'>"; 
            AddEducationdetails += "<input class='form-control ClsEmpwo' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Total' id='PrincipalTotalWorker_" + E + "' onkeyup='calcVal(" + E + ")' onkeydown='calcVal(" + E + ")' name='PrincipalTotalWorker_" + E + "' value='" + data[E].TotalWorker + "' disabled>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "</fieldset>";
            AddEducationdetails += "</div>";

            AddEducationdetails += "<div class='col-md-5 mx-2'>";
            AddEducationdetails += "<fieldset class='border p-2 row'>";
            AddEducationdetails += "<label for='Pin_code'>Contract workers<span class='text-danger'>*</span></label>";
            AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanContractworkers_" + E + "' style='display:none;'>Please Enter Contract workers Detail/ Not available then Enter 0</span>";
            AddEducationdetails += "<div class='col-md-4'>";
            AddEducationdetails += "<input class='form-control ClsConwo' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Male' id='PrincipalContractMaleWorker_" + E + "' name='PrincipalContractMaleWorker_" + E + "' value='" + data[E].ContractMaleWorker + "'>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "<div class='col-md-4'>";
            AddEducationdetails += "<input class='form-control ClsConwo' oninput='numberOnly(this.id);'  maxlength='4' placeholder='Female' id='PrincipalContractFemaleWorker_" + E + "' onkeyup='contractcalcVal(" + E + ")' onkeydown='contractcalcVal(" + E + ")'  name='PrincipalContractFemaleWorker_" + E + "' value='" + data[E].ContractFemaleWorker + "'>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "<div class='col-md-4'>";
            AddEducationdetails += "<input class='form-control ClsConwo' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Total' id='PrincipalContractTotalWorker_" + E + "' onkeyup='contractcalcVal(" + E + ")' onkeydown='contractcalcVal(" + E + ")'  name='PrincipalContractTotalWorker_" + E + "' value='" + data[E].ContractTotalWorker + "' disabled>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "</fieldset>";
            AddEducationdetails += "</div>";

            AddEducationdetails += "</div>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "</div>";


            AddEducationdetails += "<div class='form-group'>";
            AddEducationdetails += "<div class='col-md-12'>";
            AddEducationdetails += "<div class='row'>";

            AddEducationdetails += "<div class='col-md-5'>";
            AddEducationdetails += "<fieldset class='border p-2 row'>";
            AddEducationdetails += "<label for='Pin_code'>Fix term Workers<span class='text-danger'>*</span></label>";
            AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanFixtermWorkers_" + E + "' style='display:none;'>Please Enter Fix term Workers Detail / Not available then Enter 0</span>";
            AddEducationdetails += "<div class='col-md-4'>";
            AddEducationdetails += "<input class='form-control ClsFixTerm' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Male' id='PrincipalFixTermMaleWorker_" + E + "' name='PrincipalFixTermMaleWorker_" + E + "' value='" + data[E].FixTermMaleWorker + "'>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "<div class='col-md-4'>";
            AddEducationdetails += "<input class='form-control ClsFixTerm' oninput='numberOnly(this.id);'  maxlength='4' placeholder='Female' id='PrincipalFixTermFemaleWorker_" + E + "' onkeyup='fixworkcalcVal(" + E + ")' onkeydown='fixworkcalcVal(" + E + ")'  name='PrincipalFixTermFemaleWorker_" + E + "' value='" + data[E].FixTermFemaleWorker + "'>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "<div class='col-md-4'>";
            AddEducationdetails += "<input class='form-control ClsFixTerm' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Total' id='PrincipalFixTermTotalWorker_" + E + "' onkeyup='fixworkcalcVal(" + E + ")' onkeydown='fixworkcalcVal(" + E + ")'  name='PrincipalFixTermTotalWorker_" + E + "' value='" + data[E].FixTermTotalWorker + "' disabled>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "</fieldset>";
            AddEducationdetails += "</div>";

            AddEducationdetails += "<div class='col-md-5 mx-2'>";
            AddEducationdetails += "<fieldset class='border p-2 row'>";
            AddEducationdetails += "<label for='Pin_code'>Others<span class='text-danger'>*</span></label>";
             AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanPrincipalOthers_" + E + "' style='display:none;'>Please Enter Others Detail / Not available then Enter 0</span>";
            AddEducationdetails += "<div class='col-md-4'>";
            AddEducationdetails += "<input class='form-control ClsOther' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Male' id='PrincipalOthersMaleWorker_" + E + "' name='PrincipalOthersMaleWorker_" + E + "' value='" + data[E].OthersMaleWorker + "'>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "<div class='col-md-4'>"; 
            AddEducationdetails += "<input class='form-control ClsOther' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Female' id='PrincipalOthersFemaleWorker_" + E + "' onkeyup='othercalval(" + E + ")' onkeydown='othercalval(" + E + ")'  name='PrincipalOthersFemaleWorker_" + E + "' value='" + data[E].OthersFemaleWorker + "'>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "<div class='col-md-4'>";
            AddEducationdetails += "<input class='form-control ClsOther' oninput='numberOnly(this.id);'  maxlength='4'  placeholder='Total' id='PrincipalOthersTotalWorker_" + E + "'  onkeyup='othercalval(" + E + ")' onkeydown='othercalval(" + E + ")' name='PrincipalOthersTotalWorker_" + E + "' value='" + data[E].OthersTotalWorker + "' disabled>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "</fieldset>";
            AddEducationdetails += "</div>";

            AddEducationdetails += "</div>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "</div>";


            AddEducationdetails += "</fieldset>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "</Br>"
            AddEducationdetails += "</Br>"

            $("#TextBoxContainer").append(AddEducationdetails);
            bindPrincipalAreaDropdown(E, data[E].AreaList);
            $(".chosen-select").chosen();
            $('.chosen-container').css('width', '100%');
            if (data[E].PrincipalID > 0 && data[E].AreaID > 0) {
                $("#DivPrincipalArea_" + E).show();
            }
            else {
                $("#DivPrincipalArea_" + E).hide();
                $("#PrincipalZoneID_" + E).val();
                $("#PrincipalAreaID_" + E).val();


            }
             if ($("#PrincipalPincode_" + E).val() == "0") {
                 $("#PrincipalPincode_" + E).val(""); 
              }
            //E++; 

        }

    }

    function bindPrincipalAreaDropdown(id, list) {

        $("#ddlPrincipalArea_" + id).kendoMultiColumnComboBox({
            dataTextField: "DisplayValue",
            dataValueField: "DataValue",
            height: 520,
            columns: [
                { field: "DisplayValue", title: "Area Name", width: 200 },
            ],
            filter: "contains",
            filterFields: ["DisplayValue"],
            dataSource: {
                data: list
            },
            change: function(e) {

                if (this.dataSource.data().length > 0) {
                    if (this.dataSource.data()[this.selectedIndex] != undefined) {
                        $('#PrincipalZoneID_' + id).val(this.dataSource.data()[this.selectedIndex].ZoneID);
                        $('#PrincipalAreaID_' + id).val(this.dataSource.data()[this.selectedIndex].DataValue);

                    }
                }
            }
        });
    }

    function PrincipalChangeDistrict(id) {
        $.ajax({
            type: "GET",
            url: "/ReinstatementAppliaction/AllList",
            headers: {"XSRF-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value},
            data: { mode: $("#PrincipalID_" + id).val(), DistrictID: $("#PrincipalDistrictID_" + id).val() },
            success: function(response) {
                debugger;
                $("#ddlPrincipalArea_" + id).kendoMultiColumnComboBox().empty();
                 if ($("#ddlPrincipalArea_" + id).val() == "0") {
                 $("#ddlPrincipalArea_" + id).val(''); 
                 }
                $("#PrincipalTalukaID_" + id).empty();
                var row = "";
                 row += "<option value='none' selected>Select</option>";
                for (var i = 0; i < response.data.Talukalist.length; i++) {
                    row += "<option value=" + response.data.Talukalist[i].DataValue + ">" + response.data.Talukalist[i].DisplayValue + "</option>";
                }
                $("#PrincipalTalukaID_" + id).html(row).trigger('chosen:updated');

               

                if (response.data.AreaList != "") {
                     $("#DivPrincipalArea_" + id).show();
                    bindPrincipalAreaDropdown(id, response.data.AreaList);
                }
                 else {
                    $("#DivPrincipalArea_" + id).hide();
                    $("#PrincipalZoneID_" + id).val(0);
                    $("#PrincipalAreaID_" + id).val(0);
                }

            },
            failure: function(response) {
                swal(response.responseText);
            },
            error: function(response) {
                //respone will be returned here
                $("#error").val(response.responseText);
            }
        });
    }

    function bindEstablishDropdown(id) {

        $("#ddlEstablishmentCode" + id).kendoMultiColumnComboBox({
            dataTextField: "EstablishmentCode",
            dataValueField: "DataValue",
            height: 520,
            columns: [
                { field: "EstablishmentCode", title: "Regis. No", width: 100 },
                { field: "DisplayValue", title: "Registration Name", width: 200 },
            ],
            filter: "contains",
            filterFields: ["DisplayValue", "EstablishmentCode"],
            dataSource: {
                data: @Html.Raw(Json.Serialize(Model.EstablishmentList)),
            },
            change: function(e) {

                if (this.dataSource.data().length > 0) {
    @*     a.TradunionID as DataValue
                        ,a.RegistrationName as DisplayValue
                        ,a.RegistrationNo as RegistrationNo
                        ,a.PAddress as PAddress
                        ,a.SAddress as SAddress
                        ,a.TalukaID as TalukaID
                        ,a.DistrictID as DistrictID
                        ,a.Pincode as Pincode*@
            if (this.dataSource.data()[this.selectedIndex] != undefined) {
                        $('#EstablishmentName_' + id).val(this.dataSource.data()[this.selectedIndex].DisplayValue);
                        $('#EstablishmentCode_' + id).val(this.dataSource.data()[this.selectedIndex].EstablishmentCode);
                        $('#ddlEstablishmentCode' + id).val(this.dataSource.data()[this.selectedIndex].EstablishmentCode);
                    }
                }
            }

        });
    }
    $('#SameEstablishPaddress').click(function () {
        //check if checkbox is checked
        if ($(this).is(':checked')) {

          var val = $('#EstabliPAddress').val();
           $('#EstabliSAddress').val(val);
              $('#EstabliSAddress').attr("disabled", true);
        } 
         else{
            $('#EstabliSAddress').attr("disabled", false);
        }
    });
    $('#SameContractorPaddress').click(function () {
        //check if checkbox is checked
        if ($(this).is(':checked')) {

          var val = $('#ContractorPAddress').val();
           $('#ContractorSAddress').val(val);
            $('#ContractorSAddress').attr("disabled", true);
        } 
        else{
            $('#ContractorSAddress').attr("disabled", false);
        }
    });
    $("#Pincode").bind("keypress", function (e) {
        debugger
       var keyCode = e.which ? e.which : e.keyCode
       if (!(keyCode >= 48 && keyCode <= 57)) {

           return false;
       } 

   });
   $('#IsSubmit').click(function () {
        //check if checkbox is checked
        if ($(this).is(':checked')) {

            $('#btnSubmit').removeAttr('disabled'); //enable input

        } else {
            $('#btnSubmit').attr('disabled', true); //disable input
        }
    });

    function fileValidation(id) {
        debugger;
        var fileInput = document.getElementById(id);

        var filePath = fileInput.value;

        // Allowing file type
        var allowedExtensions =
            /(\.jpg|\.jpeg|\.png|\.pdf|\.doc|\.docx|\.xls|\.xlsx)$/i;

        if (!allowedExtensions.exec(filePath)) {
            //alert('Invalid file type');
            swal('Invalid file type');
            fileInput.value = '';
            return false;
        }

        var size = $("#" + id)[0].files[0].size;

        if (size > 20000000) {
            //alert("Please upload file less than 20MB. Thanks!!");
            swal("Please upload file less than 20MB. Thanks!!");
            fileInput.value = '';
            return false;
        }

    }

     function RemovePrincipal(id) {
        debugger;
        var i = E;
        var G = 0;

        for (v = 0; v < i; ++v) {

            if ($("#DivPrincipal_" + v + "").is(":visible")) {
                G++;
            }
        }

        if (G > 1) {
            $("#DivPrincipal_" + id).hide();
            $("#PrincipalIsActive_" + id).val("false");
        }
        else {
            swal("At least 1 Principal Employer required")
            return false;
        }
     }
</script>
<script>

     function SaveAclApproveal() {
        debugger;

        var ErrorCnt = 0;
        var regEx = /^[5-9][0-9]{9}$/;
        var mailregEx = /^\b[A-Z0-9._%-]+@@[A-Z0-9.-]+\.[A-Z]{2,4}\b$/i;
        var email = $("#EstablishmentEmail").val();
        var files1;
        $('.ValidationSpan').hide();

        if ('@Model.IsCLRA' == "True") 
        {
        files1 = $('#IsCLRA_Approve_DOC').prop("files");
        if ($("#CLRANote").val() == "0" || $("#CLRANote").val() == "") {
            ErrorCnt++;
            $('#SpanCLRANote').show();
        }
        }
       

        if ('@Model.IsIMW' == "True") 
        {
        files1 = $('#IsIMW_Approve_DOC').prop("files");
        if ($("#IMWNote").val() == "0" || $("#IMWNote").val() == "") {
            ErrorCnt++;
            $('#SpanIMWNote').show();
        }
        }


        if ('@Model.ISMTW' == "True") 
        {
        files1 = $('#ISMTW_Approve_DOC').prop("files");
        if ($("#MTWNote").val() == "0" || $("#MTWNote").val() == "") {
            ErrorCnt++;
            $('#SpanMTWNote').show();
        }
        }

        var IsMultipul = $("#IsMultipul").val();
        var CLRA; var IMW; var MTW;
        debugger;
        if (IsMultipul == 1) {

            CLRA = $("#rblIsCLRA").val();
            IMW = $("#rblIsIMW").val();
            MTW = $("#rblISMTW").val();

        }
        else {

            CLRA = $("#chkIsCLRA").val();
            IMW = $("#chkIsIMW").val();
            MTW = $("#chkISMTW").val();
        }

        if (ErrorCnt > 0) {
            return false;
        }

        if (ErrorCnt == 0) {
            //var myData = {
            //    IsCLRA_verified: $('#IsCLRA_verifiedApprove').val(),
            //    IsIMW_verified: $('#IsIMW_verifiedApprove').val(),
            //    ISMTW_verified: $('#ISMTW_verifiedApprove').val(),
            //    IMWNote: $('#IMWNote').val(),
            //    MTWNote: $('#MTWNote').val(),
            //    CLRANote: $('#CLRANote').val(),
            //    IsCLRA: CLRA,
            //    IsIMW: IMW,
            //    ISMTW: MTW,
            //    ApplicationID: $('#ApplicationID').val(),
            //    URL: document.URL,
            //};

             var url = "/LicenceApplication/LicenceApproveRejectByACL?handler=MyUploader" +
                "&IsCLRA_verified=" + $('#IsCLRA_verifiedApprove').val() +
                "&IsIMW_verified=" + $('#IsIMW_verifiedApprove').val() +
                "&ISMTW_verified=" + $('#ISMTW_verifiedApprove').val() +
                "&IMWNote=" + $('#IMWNote').val() +
                "&MTWNote=" + $('#MTWNote').val() +
                "&CLRANote=" + $('#CLRANote').val() +
                "&IsCLRA=" + CLRA +
                "&IsIMW=" + IMW +
                "&ISMTW=" + MTW +
                "&ApplicationID=" + $('#ApplicationID').val() +
                "&DCL_Review_Comments=" + $('#DCL_Review_Comments').val() +
                "&ACL_Review_Comments=" + $('#ACL_Review_Comments').val() +
                "&URL=" + document.URL;
                formData = new FormData();
                formData.append("MyUploader", files1[0]);

            jQuery.ajax
                ({
                    type: "POST",
                    url: url,
                    headers: { "XSRF-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value },
                    data: formData,
                    cache: false,
                    contentType: false,
                    processData: false,
                    success: function (repo) {
                        debugger;
                        if (repo.status.ErrorCode == 0) {
                            //var ApplicationID = data.data.ApplicationID;
                            swal(repo.status.ErrorMassage)
                                .then((value) => {
                                   window.location.href = "/LicenceApplication/LicenceACLList" ;
                                });
                            //alert(data.data.ErrorMassage);
                           // swal(data.data.ErrorMassage)
                        }
                        else {
                            swal(repo.status.ErrorMassage)
                        }

                    },

                    error: function (request, message, error) {
                        debugger;
                        //alert(request.responseJSON);
                        swal(request.responseJSON);
                    }
                });
        }
    }
</script>
 <script>
 function calcVal(id) {
  var num1 = $('#PrincipalMaleWorker_' + id).val();
  var num2 = $('#PrincipalFemaleWorker_'+ id).val();
  var result = parseInt(num1) + parseInt(num2);
  if (!isNaN(result)) {
    $('#PrincipalTotalWorker_'+ id).val(result);
  }
}
 function contractcalcVal(id) {
  var num1 = $('#PrincipalContractMaleWorker_' + id).val();
  var num2 = $('#PrincipalContractFemaleWorker_'+ id).val();
  var result = parseInt(num1) + parseInt(num2);
  if (!isNaN(result)) {
    $('#PrincipalContractTotalWorker_'+ id).val(result);
  }
}
 function fixworkcalcVal(id) {
  var num1 = $('#PrincipalFixTermMaleWorker_' + id).val();
  var num2 = $('#PrincipalFixTermFemaleWorker_'+ id).val();
  var result = parseInt(num1) + parseInt(num2);
  if (!isNaN(result)) {
    $('#PrincipalFixTermTotalWorker_'+ id).val(result);
  }
}
 function othercalval(id) {
  var num1 = $('#PrincipalOthersMaleWorker_' + id).val();
  var num2 = $('#PrincipalOthersFemaleWorker_'+ id).val();
  var result = parseInt(num1) + parseInt(num2);
  if (!isNaN(result)) {
    $('#PrincipalOthersTotalWorker_'+ id).val(result);
  }
}


</script>
<script>
    debugger;
    stpstep1 = document.getElementById("stpstep1");
    stpstep2 = document.getElementById("stpstep2");
    stpstep3 = document.getElementById("stpstep3");
    stpstep4 = document.getElementById("stpstep4");

    function prev(id,Submit) {
        debugger;
        if (id == 2) 
        {

            if(Submit == 1)
            {
            //SavePrincipalRegistrationRecord(1);
            //SubmitContractorDetail(1);
            stpstep1.click();
            }
            else
            {
             stpstep1.click();
            }
        }
        else if (id == 3)
        {
            if(Submit == 1)
            {
            //SaveContractorRegistrationRecord(2);
            }
            else
            {
              stpstep2.click();
            }
           
        }
        else if (id == 4)
        {
            if(Submit == 1)
            {
            //SaveContractorRegistrationRecord(2);
            }
            else
            {
              stpstep3.click();
            }
           
        }
        else {
            stpstep4.click();
        }
    }

    function next(id,Submit) {
        debugger;
        //$("#step1").hide();
        //$("#step2").show();
        if (id == 1) 
        {
            if(Submit == 1)
            {
                SubmitContractorDetail(2);
            //SaveEstablishmentRegistrationRecord(2);
            //stpstep2.click();
            }
            else
            {
                 stpstep2.click();
            }
        }
        else if (id == 2) 
        {
             
            if(Submit == 1)
            {
              Establishmentsubmit(3)
             //stpstep2.click();
            }
            else
            {
            stpstep3.click();
            }
        }
         else if (id == 3) 
        {
             
            if(Submit == 1)
            {
                SavePrincipalRegistrationRecord(4);
            //stpstep2.click();
            }
            else
            {
            stpstep4.click();
            }
        }
        else if (id == 4) 
        {
             
            if(Submit == 1)
            {
                SubmitChallanSecurityDetail(5);
            //stpstep2.click();
            }
            else
            {
            stpstep5.click();
            }
        }
        else 
        {
             
            if(Submit == 1)
            {
            //SaveContractorRegistrationRecord(4);
            //stpstep2.click();
            }
            else
            {
            stpstep5.click();
            }
        }

    }

    function StpView(id) {
        debugger;
        //$("#step1").hide();
        //$("#step2").show();
        if (id == 1) {
            stpstep1.click();
        }
        else if (id == 2) {
            stpstep2.click();
        }
        else if (id == 3) {
            stpstep3.click();
        }
        else if (id == 4) {
            stpstep4.click();
        }
        else {
            stpstep5.click();
        }

    }
</script> 

