@model FTS.Model.Entities.ReinstatementAppliactionModel
@{
    ViewBag.Title = "Reinstatement Application";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@using (Html.BeginForm())
{
       <br />
    <section>
            <h3 style="font-weight:bold;">@ViewBag.Title</h3>
    </section>   



      Html.RenderPartial("_DetailView");


 <div class="content-wrapper">
          @Html.AntiForgeryToken()
    @* Hearing*@
        <div class="row" id="DivHearing">
                  
            <div class="col-12 grid-margin stretch-card">
                  
                <div class="card">
                   
                    <div class="card-body">

                 <fieldset>
                          <legend>Hearing Detail</legend>
                        <div id="Hearing">


                        </div>
                         </fieldset>
                      @*  <div class="form-group">
                             <div class="col-md-12">
                                <div class="row">
                                   <div class="col-md-6">
                                     @Html.HiddenFor(e => e.ApplicationID , new { @ID="ApplicationID"})
                                     @Html.Label("Hearing Date") <span class='text-danger'>*</span><br>
                                     @Html.TextBoxFor(e => e.HearingDate,"{0:dd-MM-yyyy}", new { @class = "form-control datepicker", @ID="HearingDate", required = "required" })
                                     <span class="text-danger ValidationSpan" id="SpanJoinningDate" style="display:none;">Please Insert Joinning Date</span>
                                   </div>
                                  
                                
                                  <div class="col-md-6">
                                     @Html.Label("Hearing Reason") <span class='text-danger'>*</span><br>
                                     @Html.DropDownListFor(e => e.HearingReasonID, new SelectList(Model.HearingReasonList, "DataValue","DisplayValue"),"Select", new { @class = "chosen-select form-control",@ID="HearingReasonID" ,@width ="15px"})
                                     <span class="text-danger ValidationSpan" id="SpanHearingReason" style="display:none;">Please Select</span>
                                </div>   



                             </div>
                           </div>  

                           <div class="col-md-6 mt-3">
                                     @Html.Label("Hearing Note") <span class='text-danger'>*</span>
                                   @Html.TextAreaFor(e => e.HearingNote, new { @class = "form-control", @ID="HearingNote", required = "required" })
                                   <span class="text-danger ValidationSpan" id="SpanHearingNote" style="display:none;">Please Enter Hearing Note</span>
                                </div>
                       </div>*@

                        <div class="form-group">
                            <input type="button" id="btnHearing" class="btn btn-primary" value="Save" onclick="SubmitHearing();" />
                            @Html.ActionLink("Cancel", "ReinstatementACOLList", "ReinstatementAppliaction", new { area = "" }, new { @class = "btn btn-primary",@ID = "btnCancel" })
                             <input type="button" id="btnAddHearing" class="btn btn-info" value="More Hearing" onclick="Fn_AddHearing();" />
                        </div>   
                </div>
            </div>
        </div>
    </div>

@*
    Settlement*@
     <div class="row" id="DivSettlement" style="display:none;">
                  
            <div class="col-12 grid-margin stretch-card">
                  
                <div class="card">
                   
                    <div class="card-body">
               
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-2">
                                    @Html.HiddenFor(e => e.ApplicationID , new { @ID="ApplicationID"})
                                     @Html.Label("Resolution Date") <span class='text-danger'>*</span>
                                   @Html.TextBoxFor(e => e.SettlementDate,"{0:dd-MM-yyyy}", new { @class = "form-control", @ID="SettlementDate", required = "required" })
                                   <span class="text-danger ValidationSpan" id="SpanJoinningDate" style="display:none;">Please Insert Joinning Date</span>
                                
                                </div>
                                 <div class="col-md-2">
                                     @Html.Label("Resolution Reason")<span class="text-danger ml-1">*</span>
                                     <br>
                                       @Html.DropDownListFor(e => e.HearingReasonID, new SelectList(Model.HearingReasonList, "DataValue","DisplayValue"),"Select", new { @class = "chosen-select form-control",@ID="HearingReasonID" ,@width ="15px"})
                                   <span class="text-danger ValidationSpan" id="SpanResolutionReason" style="display:none;">Please Select Reason</span>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-6">
                                     @Html.Label("Resolution Note") <span class='text-danger'>*</span>
                                   @Html.TextAreaFor(e => e.SettlementNote, new { @class = "form-control", @ID="SettlementNote", required = "required" })
                                   <span class="text-danger ValidationSpan" id="SpanSettlementNote" style="display:none;">Please Enter Hearing Note</span>
                               
                                </div>
                            </div>
                        </div>


                         <div class="form-group"  id="DivOutward">
                                <div class="row">
                                    <div class="col-md-3">
                                                           @*SettlementNote*@
                                        @Html.Label("Order Outward Date: / કેસ બંધ નોંધ:") <span class='text-danger'>*</span>
                                        @Html.TextBoxFor(e => e.OrderOutwardDate,"{0:dd-MM-yyyy}", new { @class = "form-control ", @ID="OrderOutwardDate", required = "required" })
                                        <span class="text-danger ValidationSpan" id="SpanOrderOutwardDate" style="display:none;">Please Enter Date</span>
                                     </div>

                                     <div class="col-md-3">
                                                           @*SettlementNote*@
                                        @Html.Label("Order No:") <span class='text-danger'>*</span>
                                        @Html.TextBoxFor(e => e.OrderOutwardNo, new { @class = "form-control", @ID="OrderOutwardNo", required = "required" })
                                        <span class="text-danger ValidationSpan" id="SpanOrderOutwardNo" style="display:none;">Please Enter Number</span>
                                     </div>

                                                              @*SettlementfileUpload*@
                                      <div class="col-md-6">
                                          
                                         @Html.Label("Order Document: / ઓર્ડર દસ્તાવેજ:") <span class='text-danger'>*</span>
                                         <br/>
                                         <input type="file" id="SettlementfileUpload" class="fileUpload" onchange="return fileValidation()" >
                                         <span class="text-danger ValidationSpan" id="SpanSettlementfileUpload" style="display:none;">Please Select file </span>
                                         @* @if (@Model.SettlementDocURL != "")
                                             {
                                                 <a href="/NFormApplication/DownloadSettlementFile/?FileName=@Model.SettlementDocURL" ><i class="fas fa-download"></i></a>
                                             } *@
                                      </div>
                                </div>
                            </div>

                        @* <div class="form-group">
                            <div class="row">
                                <div class="col-md-4">
                                     @Html.Label("Resolution Document") <span class='text-danger'>*</span>
                                     <input type="file" id="SettlementfileUpload" class="fileUpload"   onchange="return fileValidation()" >
                                   <span class="text-danger ValidationSpan" id="SpanSettlementfileUpload" style="display:none;">Please Select file </span>
                                @if (@Model.SettlementDocURL != "")
                                 {
                                                 <a href="/ReinstatementAppliaction/DownloadSettlementFile/?FileName=@Model.SettlementDocURL" ><i class="fas fa-download"></i></a>
                                   }
                                </div>
                            </div>
                        </div>*@

                     
                          <div class="form-group">
                          <input type="button" id="btnsubmit" class="btn btn-primary" value="Save" onclick="SubmitSettlement();" />
                            @Html.ActionLink("Cancel", "ReinstatementACOLList", "ReinstatementAppliaction", new { area = "" }, new { @class = "btn btn-primary" })
                        </div>   
                </div>
            </div>
        </div>
    </div>


    @*
   Send to Labour*@
     <div class="row" id="DivSendtolabour" style="display:none;">
                  
            <div class="col-12 grid-margin stretch-card">
                  
                <div class="card">
                   
                    <div class="card-body">
               
                        <div class="form-group">
                          <div class="col-md-12">
                            <div class="row">
                                <div class="col-md-3">
                                    @Html.HiddenFor(e => e.ApplicationID , new { @ID="ApplicationID"})
                                    @Html.Label("Send To Labour Court Date") <span class='text-danger'>*</span><br>
                                    @Html.TextBoxFor(e => e.SendLCDate,"{0:dd-MM-yyyy}", new { @class = "form-control", @ID="SendLCDate", required = "required" })
                                    <span class="text-danger ValidationSpan" id="SpanJoinningDate" style="display:none;">Please Insert Joinning Date</span>
                                </div>
                                
                            </div>
                          </div>
                          <div class="col-md-10 mt-3">
                                     @Html.Label("Send To Labour Court Note") <span class='text-danger'>*</span>
                                   @Html.TextAreaFor(e => e.SendLCNote, new { @class = "form-control", @ID="SendLCNote", required = "required" })
                                   <span class="text-danger ValidationSpan" id="SpanSendLCNote" style="display:none;">Please Enter Note</span>
                                </div>


                        </div>  
                     <div class="form-group">
                        <input type="button" id="btnsubmit" class="btn btn-primary" value="Save" onclick="SubmitLabour();" />
                       @Html.ActionLink("Cancel", "ReinstatementACOLList", "ReinstatementAppliaction", new { area = "" }, new { @class = "btn btn-primary" })
                    </div>   
                </div>
            </div>
        </div>
    </div>
                          @if(@Model.ISView == 1)
                          {
                         <div class="form-group">
                            @Html.ActionLink("Cancel", "ReinstatementACOLList", "ReinstatementAppliaction", new { area = "" }, new { @class = "btn btn-primary" })
                        </div> 
                          }
     </div>
     <script>
         
         $("#SettlementDate").kendoDatePicker({
         format :"dd-MM-yyyy",
        disableDates: function (date) {
            if (date <= new Date()) {
                return true;
            } else {
                return false;
            }
        }
           });


         $("#SendLCDate,#OrderOutwardDate").kendoDatePicker({
         format :"dd-MM-yyyy",
        disableDates: function (date) {
            if (date <= new Date()) {
                return true;
            } else {
                return false;
            }
         }
        });



@*        $("#SettlementDate").kendoDatePicker({
          format :"dd-MM-yyyy"
        }); 
          $("#SendLCDate").kendoDatePicker({
          format :"dd-MM-yyyy"
        }); *@




     </script>


 <script>

       $(document).ready(function () {
            debugger;
             HearingDetail();
          @*document.getElementById("HearingReasonID_chosen").style.width = "200px";*@
       @*    $("#DivHearing").hide();*@
        @*   $("#DivSettlement").hide();
           $("#DivSendtolabour").hide();*@
           
           if ('@Model.ActionCode' == '6')
           {
               $("#DivOutward").show();
           }
           else
           {
               $("#DivOutward").hide();
           }

           if ('@Model.ISNew' == 0 && '@Model.ISView' == 0) {
               $("#DivHearing").show();
           }
           else if ('@Model.ISNew' == 1 && '@Model.ISView' == 0)
           {
               $("#DivSettlement").show();
                    $("#btnHearing").hide();
                $("#btnCancel").hide();
                $("#btnAddHearing").hide();
                 if($("#HearingDate_0").val() == "")
                {
                     $("#DivHearing").hide();
                }
           }
            else if ('@Model.ISNew' == 2 && '@Model.ISView' == 0)
           {
               $("#DivSendtolabour").show();
                    $("#btnHearing").hide();
                $("#btnCancel").hide();
                $("#btnAddHearing").hide();
                 if($("#HearingDate_0").val() == "")
                {
                     $("#DivHearing").hide();
                }
           }
            else if ('@Model.ISView' == 1)
           {
               $("#DivSendtolabour").hide();
                $("#DivSettlement").hide();
                @*$("#DivHearing").hide();*@
                 $("#btnHearing").hide();
                 $("#btnCancel").hide();
                $("#btnAddHearing").hide();
                if($("#HearingDate_0").val() == "")
                {
                     $("#DivHearing").hide();
                }
           }

            });


@* function SubmitHearing() {
            debugger;

             var ErrorCnt = 0;
               var regEx = /^[5-9][0-9]{9}$/;
            $('.ValidationSpan').hide();
            if ($("#HearingReasonID").val() == "0" || $("#HearingReasonID").val() == "") {
                ErrorCnt++;
                $('#SpanHearingReason').show();
            }

             if ($("#HearingNote").val() == "0" || $("#HearingNote").val() == "") {
                ErrorCnt++;
                $('#SpanHearingNote').show();
            }

            if (ErrorCnt > 0) {
                return false;
            }

            if (ErrorCnt == 0) {
                var myData = {
                    ApplicationID: $('#ApplicationID').val(),
                    HearingDate: $('#HearingDate').val(),
                    HearingNote: $('#HearingNote').val(),
                    HearingReasonID: $('#HearingReasonID').val(),
                    URL: document.URL,
                };
                $.ajax
                    ({
                        type: "POST",
                        url: "/ReinstatementAppliaction/SaveReinstatementHearingACOLRecord",
                        dataType: "json",
                        data: myData,
                        success: function(data) {
                            debugger;


                             if (data.data.ErrorCode == 0) {
                                swal(data.data.ErrorMassage)
                                .then((value) => {
                                    window.location.href = "/ReinstatementAppliaction/ReinstatementACOLList";
                                });
                             }
                            else {
                                swal(data.data.ErrorMassage);
                             }
                        },

                        error: function (request, message, error) 
                        {
                            debugger; 
                            swal(request.responseJSON);
                          }
                    })
            }
    }*@

     function SubmitLabour() {
            debugger;

             var ErrorCnt = 0;
            $('.ValidationSpan').hide();
            if ($("#SendLCNote").val() == "0" || $("#SendLCNote").val() == "") {
                ErrorCnt++;
                $('#SpanHearingNote').show();
            }

         var SendLCDate = $("#SendLCDate").val();

            if (ErrorCnt > 0) {
                return false;
            }

            if (ErrorCnt == 0) {
                var myData = {
                    ApplicationID: $('#ApplicationID').val(),
                    UPSendLCDate: SendLCDate,
                    SendLCNote: $('#SendLCNote').val(),
                    URL: document.URL,
                };
                $.ajax
                    ({
                        type: "POST",
                        url: "/ReinstatementAppliaction/SaveReinstatementSendtolabourACOLRecord",
                        headers: {"XSRF-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value},
                        dataType: "json",
                        data: myData,
                        success: function(data) {
                            debugger;
                             if (data.data.ErrorCode == 0) {
                                swal(data.data.ErrorMassage)
                                .then((value) => {
                                     DownloadReportFile(data.data.fileName,1);  
                                    window.location.href = "/ReinstatementAppliaction/ReinstatementACOLList";
                                });
                             }
                            else {
                                swal(data.data.ErrorMassage);
                             }


                            @*if (data.data.ErrorCode == 0) {
                                window.location.href = "/ReinstatementAppliaction/ReinstatementACOLList";
                                alert(data.data.ErrorMassage);
                            }
                            else {
                              alert(data.data.ErrorMassage);
                            }*@

                        },

                        error: function (request, message, error) 
                        {
                            debugger; 
                            swal(request.responseJSON);
                          }
                    })
            }
    }

       function SubmitSettlement() {

        var ErrorCnt = 0;
            $('.ValidationSpan').hide();

      
            if ($("#SettlementNote").val() == "0" || $("#SettlementNote").val() == "") {
                ErrorCnt++;
                $('#SpanSettlementNote').show();
            }
@*
            if ($("#SettlementfileUpload").val() == "0" || $("#SettlementfileUpload").val() == "") {
                ErrorCnt++;
                $('#SpanSettlementfileUpload').show();
            }*@

            if ($("#HearingReasonID").val() == "0" || $("#HearingReasonID").val() == "") {
                ErrorCnt++;
                $('#SpanResolutionReason').show();
            }


             if ($("#DivOutward").is(":visible")) 
              {
              
                     if ($("#SettlementfileUpload").val() == "0" || $("#SettlementfileUpload").val() == "")
                     {
                        ErrorCnt++;
                        $('#SpanSettlementfileUpload').show();
                    }

                  if ($("#OrderOutwardDate").val() == "0" || $("#OrderOutwardDate").val() == "") 
                  {
                        ErrorCnt++;
                        $('#SpanOrderOutwardDate').show();
                    }

                     if ($("#OrderOutwardNo").val() == "0" || $("#OrderOutwardNo").val() == "")
                     {
                        ErrorCnt++;
                        $('#SpanOrderOutwardNo').show();
                    }
             }

            if (ErrorCnt > 0) {
                return false;
            }
              
       if (ErrorCnt == 0) {
           var files = $('#SettlementfileUpload').prop("files");
           var ApplicationID = $('#ApplicationID').val();
           var SettlementDate = $('#SettlementDate').val();
           var SettlementNote = $('#SettlementNote').val();
           var HearingReasonID = $('#HearingReasonID').val();
             var OrderOutwardDate = $('#OrderOutwardDate').val();
           var OrderOutwardNo = $('#OrderOutwardNo').val();
           var URL = document.URL;
           debugger;
           var url = "/ReinstatementAppliaction/SaveReinstatementACOLSettlementrecord?handler=MyUploader" + "&ApplicationID=" + ApplicationID + 
           "&SettlementDate=" + SettlementDate  + "&SettlementNote=" + SettlementNote +  "&URL=" + URL +  "&HearingReasonID=" + HearingReasonID +  "&OrderOutwardDate=" + OrderOutwardDate + "&OrderOutwardNo=" + OrderOutwardNo;
           formData = new FormData();
           formData.append("MyUploader", files[0]);

           jQuery.ajax({
               type: 'POST',
               url: url,
               headers: {"XSRF-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value},
               data: formData,
               cache: false,
               contentType: false,
               processData: false,
               success: function(repo) {
                   debugger;
                   
                   if (repo.status.ErrorCode == 0) {
                         swal(repo.status.ErrorMassage)
                         .then((value) => {
                          window.location.href = "/ReinstatementAppliaction/ReinstatementACOLList";
                       });
                   }
                  else {
                          swal(repo.status.ErrorMassage);
                       }
               },
                error: function (request, message, error) 
                        {
                            debugger; 
                            swal(request.responseJSON);
                          }
           });
       }
}


     function fileValidation() {
    debugger;
    var fileInput = document.getElementById('SettlementfileUpload'); 
             
            var filePath = fileInput.value;
         
            // Allowing file type
            var allowedExtensions =
                    /(\.jpg|\.jpeg|\.png|\.pdf|\.doc|\.docx|\.xls|\.xlsx)$/i;
             
            if (!allowedExtensions.exec(filePath)) {
                swal('Invalid file type');
                fileInput.value = '';
                return false;
            }
            
        }



     </Script>

     <script>
                var B = 0;

        function HearingDetail() {
        debugger;
        var data = @Html.Raw(Json.Serialize(@Model.HearingdetailACL));
        var i;
        for (B = 0; B < data.length; B++) {

    @*  var AddEducationdetails = "<div class='row'>";*@
             var AddEducationdetails = "";
            AddEducationdetails += "<div id='DivHearingdetail_" + B + "'>";
            AddEducationdetails += "<fieldset class='border p-2'>";
    @*  AddEducationdetails += "<legend  class='w-auto'>Establish Detail:" + E + " </legend>";*@

            AddEducationdetails += "<div class='form-group'>";
            AddEducationdetails += "<div class='row'>";

            AddEducationdetails += "<div class='col-md-2'>";
                 AddEducationdetails += "<input type='hidden' name='ApplicationID_" + B + "' value='" + data[B].ApplicationID + "' id='ApplicationID_" + B + "' />";
            AddEducationdetails += "<input type='hidden' name='HearingID_" + B + "'  value='" + data[B].HearingID + "' id='HearingID_" + B + "' />";
                    AddEducationdetails += "<input type='hidden' name='IsActive_" + B + "' value='" + data[B].IsActive + "' id='IsActive_" + B + "' />";
            AddEducationdetails += "<label for='Applicant_Name'>Hearing Date <span class='text-danger'>*</span></label>";
            AddEducationdetails += "<input class='form-control datetimepicker' style='width: 100%;' id='HearingDate_" + B + "' name='HearingDate_" + B + "'  type='text' value='" + data[B].HearingDate + "'>";
            AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanHearingDate_" + B + "' style='display:none;'>Please Enter Hearing Date</span>";
            AddEducationdetails += "</div>";

            // AddEducationdetails += "<div class='col-md-2'>";
            //AddEducationdetails += "<label for='District_Name'>Hearing Reason <span class='text-danger'>*</span></label>";
            //AddEducationdetails += "<select class='chosen-select form-control' name='HearingReasonID_" + B + "' id='HearingReasonID_" + B + "'>";
            //AddEducationdetails += "<option value='0'>Select</option>";
            //for (i = 0; i < data[B].HearingReasonList.length; ++i) {
            //    if (data[B].HearingReasonList[i].DataValue == data[B].HearingReasonID) {
            //        AddEducationdetails += "<option value=" + data[B].HearingReasonList[i].DataValue + " selected='selected'>" + data[B].HearingReasonList[i].DisplayValue + "</option>";
            //    }
            //    else {

            //        AddEducationdetails += "<option value=" + data[B].HearingReasonList[i].DataValue + ">" + data[B].HearingReasonList[i].DisplayValue + "</option>";
            //    }
            //}
            //AddEducationdetails += "</select>";
            //AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanHearingReasonID_" + B + "' style='display:none;'>Please Select Reason </span>";
            //AddEducationdetails += "</div>";

            AddEducationdetails += "<div class='col-md-5' id='DivHearing_"+B+"'>";
            AddEducationdetails += "<label for='P_Address'>Hearing Note <span class='text-danger'>*</span></label>";
            AddEducationdetails += "<textarea class='form-control'' id='HearingNote_" + B + "' name='HearingNote_" + B + "'  type='text'>" + data[B].HearingNote + "</textarea>";
            AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanHearingNote_" + B + "' style='display:none;'>Please Hearing Note</span>";
            AddEducationdetails += "</div>";

            AddEducationdetails += "<div class='col-md-2' id='DivCancle_"+B+"'>";
            AddEducationdetails += "<label for='Applicant_Name'>IsCancle <span> &nbsp</span></label>";
            AddEducationdetails += "<input type='hidden' name='IsTempCancle_" + B + "'  value='' id='IsTempCancle_" + B + "' />";
            AddEducationdetails += "<input type='checkbox' class='myCheckbox' onclick='canclecheckbox("+B+")' name='IsCancle_" + B + "' value='" + data[B].IsCancle + "' id='IsCancle_" + B + "' />";
            AddEducationdetails += "</div>";


            AddEducationdetails += "</div>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "</fieldset>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "</Br>"

            $("#Hearing").append(AddEducationdetails);
            $(".chosen-select").chosen();
            $('.chosen-container').css('width', '100%');
           $("#HearingDate_" + B).kendoDateTimePicker({ format: "dd-MM-yyyy HH:mm",  disableDates: function (date) {
            if (date <= new Date()) {
                return true;
            } else {
                return false;
            }
         }});
           if($("#HearingID_" + B).val() == 0)
           {
                $("#HearingDate_" + B).val("");
                $("#DivHearing_" + B).hide();
                $("#DivCancle_" + B).hide();
           }
            else
           {
                $("#HearingDate_" + B).data('kendoDateTimePicker').enable(false);
           }

            if( $("#IsCancle_" + B).val() == 'true')
            {
                $("#IsCancle_" + B).attr('checked', 'checked');
            }

            if( $("#HearingNote_" + B).val().length > 1 || $("#IsCancle_" + B).val() == 'true')
            {
                $("#HearingDate_" + B).data('kendoDateTimePicker').enable(false);
                $("#HearingNote_" + B).attr("disabled", "disabled");
                $("#IsCancle_" + B).attr("disabled", "disabled");
                //$("#HearingReasonID_" + B).prop('disabled', true).trigger("chosen:updated");
            }      
            else{
                 $("#btnAddHearing").attr("disabled", "disabled");
            }
            //B++;

        }

    }

    //Contractor`s Details
    function Fn_AddHearing() {

        debugger
        var i;
        var ApplicationID = $('#ApplicationID').val();
        var HearingID = 0;
        //var HearingReasonList = @Html.Raw(Json.Serialize(@Model.HearingReasonList));


          var AddEducationdetails = "";
            AddEducationdetails += "<div id='DivHearingdetail_" + B + "'>";
            AddEducationdetails += "<fieldset class='border p-2'>";
    @*  AddEducationdetails += "<legend  class='w-auto'>Establish Detail:" + E + " </legend>";*@

            AddEducationdetails += "<div class='form-group'>";
            AddEducationdetails += "<div class='row'>";

            AddEducationdetails += "<div class='col-md-2'>";
            AddEducationdetails += "<input type='hidden' name='ApplicationID_" + B + "' value='" + ApplicationID + "' id='ApplicationID_" + B + "' />";
            AddEducationdetails += "<input type='hidden' name='HearingID_" + B + "'  value='" + HearingID + "' id='HearingID_" + B + "' />";
            AddEducationdetails += "<input type='hidden' name='IsActive_" + B + "' value='true' id='IsActive_" + B + "' />";
            AddEducationdetails += "<label for='Applicant_Name'>Hearing Date <span class='text-danger'>*</span></label>";
            AddEducationdetails += "<input class='form-control datepicker' style='width: 100%;' id='HearingDate_" + B + "' name='HearingDate_" + B + "'  type='text' value=''>";
            AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanHearingDate_" + B + "' style='display:none;'>Please Enter Hearing Date</span>";
            AddEducationdetails += "</div>";

            //AddEducationdetails += "<div class='col-md-2'>";
            //AddEducationdetails += "<label for='District_Name'>Hearing Reason <span class='text-danger'>*</span></label>";
            //AddEducationdetails += "<select class='chosen-select form-control' name='HearingReasonID_" + B + "' id='HearingReasonID_" + B + "'>";
            //AddEducationdetails += "<option value='0'>Select</option>";
            //for (i = 0; i < HearingReasonList.length; ++i) {
            //AddEducationdetails += "<option value=" + HearingReasonList[i].DataValue + ">" + HearingReasonList[i].DisplayValue + "</option>";
            //}
            //AddEducationdetails += "</select>";
            //AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanHearingReasonID_" + B + "' style='display:none;'>Please Select Reason </span>";
            //AddEducationdetails += "</div>";

            AddEducationdetails += "<div class='col-md-5' style='display:none;'>";
            AddEducationdetails += "<label for='P_Address'>Hearing Note</label>";
            AddEducationdetails += "<textarea class='form-control'' id='HearingNote_" + B + "' name='HearingNote_" + B + "'  type='text'></textarea>";
            AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanHearingNote_" + B + "' style='display:none;'>Please Hearing Note</span>";
            AddEducationdetails += "</div>";

            AddEducationdetails += "<div class='col-md-2' style='display:none;'>";
            AddEducationdetails += "<label for='Applicant_Name'>IsCancle <span> &nbsp</span></label>";
               AddEducationdetails += "<input type='hidden' name='IsTempCancle_" + B + "'  value='' id='IsTempCancle_" + B + "' />";
            AddEducationdetails += "<input type='hidden' class='myCheckbox' onclick='canclecheckbox("+B+")' name='IsCancle_" + B + "' value='false' id='IsCancle_" + B + "' />";
            AddEducationdetails += "</div>";


            AddEducationdetails += "</div>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "</fieldset>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "</Br>"

            $("#Hearing").append(AddEducationdetails);
            $(".chosen-select").chosen();
            $('.chosen-container').css('width', '100%');
            $("#btnAddHearing").attr("disabled", "disabled");
            $("#HearingDate_" + B).kendoDateTimePicker({ format: "dd-MM-yyyy HH:mm",  disableDates: function (date) {
            if (date <= new Date()) {
                return true;
            } else {
                return false;
            }
         }});
            B++;

    }

       function GetHearingXML() {
        var xml = '';
        xml += '<DataTable>';
        var i = B;
        var v;
        for (v = 0; v < i; ++v) {
            xml += '<DataRow>';
            xml += "<" + "ApplicationID" + ">" + $("#ApplicationID_" + v + "").val() + "</" + "ApplicationID" + ">";
            xml += "<" + "HearingID" + ">" + $("#HearingID_" + v + "").val() + "</" + "HearingID" + ">";
            xml += "<" + "HearingDate" + ">" + $("#HearingDate_" + v + "").val() + "</" + "HearingDate" + ">";
            //xml += "<" + "HearingReasonID" + ">" + $("#HearingReasonID_" + v + "").val() + "</" + "HearingReasonID" + ">";
            xml += "<" + "HearingNote" + ">" + $("#HearingNote_" + v + "").val() + "</" + "HearingNote" + ">";
            
              if ($("#IsCancle_" + v + "").val() == "true") {
                  xml += "<" + "IsCancle" + ">" + 1 + "</" + "IsCancle" + ">";
              }
              else {
                  xml += "<" + "IsCancle" + ">" + 0 + "</" + "IsCancle" + ">";
              }

              
              if ($("#IsActive_" + v + "").val() == "true") {
                  xml += "<" + "IsActive" + ">" + 1 + "</" + "IsActive" + ">";
              }
              else {
                  xml += "<" + "IsActive" + ">" + 0 + "</" + "IsActive" + ">";
              }

             if ($("#IsTempCancle_" + v + "").val() == "true") {
                  xml += "<" + "IsTempCancle" + ">" + 1 + "</" + "IsTempCancle" + ">";
              }
              else
              {
                  xml += "<" + "IsTempCancle" + ">" + 0 + "</" + "IsTempCancle" + ">";
              }

            xml += "<" + "URL" + ">" + document.URL + "</" + "URL" + ">";
            xml += "<" + "IP_Address" + ">" + $("#IP_Address").val() + "</" + "IP_Address" + ">";
            //xml += "<" + "UserID" + ">" + $("#UserID").val() + "</" + "UserID" + ">";
            xml += '</DataRow>';
        }
        xml += '</DataTable>'
        return xml;
    }


    function SubmitHearing() {
            debugger;

             var ErrorCnt = 0;
               var regEx = /^[5-9][0-9]{9}$/;
            $('.ValidationSpan').hide();
             var i = B;
        var v;

        for (v = 0; v < i; ++v) {

            if ($("#HearingDate_" + v + "").val() == "0" || $("#HearingDate_" + v + "").val() == "") {
                ErrorCnt++;
                $("#SpanHearingDate_" + v + "").show();
            }

            //if ($("#HearingReasonID_" + v + "").val() == "0" || $("#HearingReasonID_" + v + "").val() == "") {
            //    ErrorCnt++;
            //    $("#SpanHearingReasonID_" + v + "").show();
            //}

            if ($("#HearingNote_" + v + "").is(":visible")) {
            if ($("#HearingNote_" + v + "").val() == "0" || $("#HearingNote_" + v + "").val() == "") {
                ErrorCnt++;
                $("#SpanHearingNote_" + v + "").show();
            }
            }

            if (ErrorCnt > 0) {
                return false;
            }
        }

                     
        if (ErrorCnt == 0) {
            var myData = {
                XMLString: GetHearingXML(),
            };
            $.ajax
                ({
                    type: "POST",
                    url: "/ReinstatementAppliaction/SaveReinstatementHearingACOLRecord",
                    headers: {"XSRF-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value},
                    dataType: "json",
                    data: myData,
                    success: function(data) {
                        debugger;
                        if (data.data.ErrorCode == 0) {
                            swal(data.data.ErrorMassage)
                            .then((value) => {
                                 window.location.href = "/ReinstatementAppliaction/ReinstatementACOLList";
                            });
                        }
                        else {
                            swal(data.data.ErrorMassage)
                        }

                    },

                    error: function(request, message, error) {
                        debugger;
                        //alert(request.responseJSON);
                        swal(request.responseJSON);
                    }
                })
        }

    }

   function canclecheckbox(id) {
              debugger;
       
            if ($("#IsCancle_"+id).is(':checked')) {
          $("#IsCancle_"+id).val(true);
          $("#IsTempCancle_"+id).val(true);
        } 

       } 

        </script>
  
 }

 