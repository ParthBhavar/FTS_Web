@model FTS.Model.Entities.NFormApplicationModel
@{
    ViewBag.Title = "Gratuity Application";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
       <br />
    <section>
        <h3 style="font-weight:bold;">@ViewBag.Title</h3>
    </section>   

 <div class="content-wrapper">

        <div class="row">
                  
            <div class="col-12 grid-margin stretch-card">
                  
                <div class="card">
                     <nav>
            <div class="nav nav-pills nav-fill" id="nav-tab"  style="padding-bottom: 0rem;">
             <a class="nav-link active" id="step1-tab" data-bs-toggle="tab">Step 1</a>
             @if(@Model.IsSubmit == true )
             {
                <a class="nav-link" id="step2-tab" data-bs-toggle="tab"  href="/NFormApplication/AddnFormEstablishment?ApplicationID=@Model.ApplicationID&ISNew=1">Step 2</a>
              }
              else
              {
               <a class="nav-link" id="step3-tab" data-bs-toggle="tab">Step 2</a>         
              }

                @if(@Model.IsSubmit == true )
               {
                <a class="nav-link" id="step3-tab" data-bs-toggle="tab"  href="/NFormApplication/AddUploadDocment?ApplicationID=@Model.ApplicationID">Step 4</a>
               }
              else
             {
                 <a class="nav-link" id="step3-tab" data-bs-toggle="tab">Step 3</a>
             }
                        </div>
          </nav>
                      <br>
                    <div class="card-body">
                            <div class="form-group-required">
                                <div class="col-lg-12 col-sm-12 col-md-12 col-xs-12 pull-right text-right text-danger"><span class="required">All <span class="text-danger">*</span> fields are compulsory</span></div>
                    </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-4">
                                     @Html.Label("Applicant Name: / અરજદારનું નામ:")<span class='text-danger'>*</span>
                                    @Html.HiddenFor(e => e.AppliactionIDEdit , new { @ID="AppliactionID"})
                                    @Html.TextBoxFor(e => e.ApplicantName, new { @class = "form-control", @ID="ApplicantName", required = "required" })
                                     <span class="text-danger ValidationSpan" id="SpanApplicantName" style="display:none;">Please Enter Applicant Name</span>
                                </div>
                                <div class="col-md-1">
                                    @Html.Label("Gender: / લિંગ:")<span class='text-danger'>*</span>
                                    @Html.DropDownListFor(e => e.Gender, new SelectList(Model.Ganderlist, "DataValue","DisplayValue"),"Select", new { @class = "chosen-select form-control",@ID="Gender", })
                               <span class="text-danger ValidationSpan" id="Spangender" style="display:none;">Please Select Gender</span>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="row">
                                  <div class="col-md-5">
                                    @Html.Label("Permanent Address: / કાયમી સરનામુ:")<span class='text-danger'>*</span>
                                   @Html.TextAreaFor(e => e.PAddress, new { @class = "form-control", @ID="PAddress", required = "required" })
                                    <span class="text-danger ValidationSpan" id="SpanApplicantAddress" style="display:none;">Please Enter Address</span>
                                </div>
                                    <div class="col-md-2" style="margin-top: auto;">
                                    @Html.Label("Copy Permanent Address")
                                    @Html.CheckBox("SameasPaddress", new { @ID="SameasPaddress"})
                                </div>
                                  <div class="col-md-5">
                                      @Html.Label("Secondary Address: / ગૌણ સરનામું:")<span class='text-danger'>*</span>
                                   @Html.TextAreaFor(e => e.SAddress, new { @class = "form-control", @ID="SAddress", required = "required" })
                                </div>
                        </div>
                         </div>  

                        <div class="form-group">
                            <div class="row">
                                 <div class="col-md-2">
                                    @Html.Label("Email: / ઇમેઇલ:")<span class='text-danger'>*</span>
                                    @Html.TextBoxFor(e => e.Email, new { @class = "form-control", @ID="Email"})
                                   <span class="text-danger ValidationSpan" id="SpanEmail" style="display:none;">Please Enter Valid Email</span>
                                </div>
                                <div class="col-md-2">
                                    @Html.Label("District: / જિલ્લો:")<span class='text-danger'>*</span>
                                    @Html.DropDownListFor(e => e.DistrictID, new SelectList(Model.Districtlist, "DataValue","DisplayValue"),"Select", new { @class = "chosen-select form-control",@ID="DistrictID", })
                                   <span class="text-danger ValidationSpan" id="Spandistrict" style="display:none;">Please Select District</span>
                                </div>

                                 <div class="col-md-2">
                                    @Html.Label("Taluka: / તાલુકો:")<span class='text-danger'>*</span>
                                     @* @Html.HiddenFor(e => e.TalukaID , new { @ID="drpTalukaID"})
                                    <select    id="TalukaID" name="TalukaID"></select> *@ 
                                    @Html.DropDownListFor(e => e.TalukaID, new SelectList(Model.Talukalist,"DataValue","DisplayValue"), new { @class = "chosen-select form-control",@ID="TalukaID", })
                                <span class="text-danger ValidationSpan" id="Spantaluka" style="display:none;">Please Select Taluka</span>
                                </div>
                                      <div class="col-md-2" id="DivArea">
                                    @Html.Label("Area: / વિસ્તાર:")<span class='text-danger'>*</span>
                                    @Html.HiddenFor(e => e.ZoneID , new { @ID="ZoneID"})
                                    @Html.HiddenFor(e => e.AreaID , new { @ID="AreaID"})
                                     <input id="ddlArea" class="form-control ddlArea" value="@Model.AreaID" style="width:100%;" placeholder="--Select--" />
@*                                   @Html.DropDownListFor(e => e.AreaID, new SelectList(Model.AreaList,"DataValue","DisplayValue"),"Select", new { @class = "chosen-select form-control",@ID="ddlArea"})
*@                                <span class="text-danger ValidationSpan" id="SpanArea" style="display:none;">Please Select Area</span>
                                </div>
                                 
                                   <div class="col-md-2">
                                    @Html.Label("Pincode: / પીન કોડ:")<span class='text-danger'>*</span>
                                      @Html.TextBoxFor(e => e.Pincode, new { @class = "form-control", @ID="Pincode", required = "required",maxlength="6",oninput="numberOnly(this.id);"})
                                       <span class="text-danger ValidationSpan" id="Spanpincode" style="display:none;">Please Enter Pincode</span>
                                       <span class="text-danger ValidationSpan" id="Spanlengthpincode" style="display:none;">Please Enter 6 digit pin code</span>
                                       <span class="text-danger ValidationSpan" id="Spanvalpincode" style="display:none;">Please Valid Pincode</span>
                                </div>
                        </div>
                         </div>  
                        
                            <div class="form-group">
                            <div class="row" style="display:none;">
                                   <div class="col-md-1" style="margin-top: auto;">
                                    @Html.Label("IsActive")
                                    @Html.CheckBoxFor(e => e.IsActive, new { @ID="IsActive"})
                                </div>
                        </div>
                         </div>  
                          <div class="form-group">
                             @if(@Model.IsSubmit == true )
                            {
                                <a id="Edit" class="btn btn-info"  href="/NFormApplication/AddnFormEstablishment?ApplicationID=@Model.ApplicationID&ISNew=1" > Next</a>
                            }
                            else
                            {
                                 <input type="button" id="btnsubmit" class="btn btn-primary" value="Save" onclick="SubmitAppliaction();" />
                            }

                            @Html.ActionLink("Cancel", "index", "NFormApplication", new { area = "" }, new { @class = "btn btn-primary" })
                        </div>   
                </div>
            </div>
        </div>
    </div>
     </div>

 <script>

  $(document).ready(function () {
            debugger;
              
            if ($("#Pincode").val() == "0") {
                 $("#Pincode").val(""); 
              }
              

                bindAreaDropdown(@Html.Raw(Json.Serialize(Model.AreaList))); 

                  if ('@Model.AppliactionIDEdit' > '0' && '@Model.AreaID' > '0') 
                  {
                      $("#DivArea").show();
                  }
                  else 
                  {
                       $("#DivArea").hide();
                  }

                 if ('@Model.IsSubmit'=="True") 
                 {
                  $('.k-widget.k-combobox.form-control.k-dropdowngrid.k-combobox-clearable').kendoMultiColumnComboBox({ enabled: false });
                   $('.k-widget').css('display', 'unset');
                   $('.form-control').attr('readonly', 'readonly');
                   $('.chosen-select').prop('disabled', true).trigger("chosen:updated");
                 }
            });


  function bindAreaDropdown(obj) {
             debugger;
        $("#ddlArea").kendoMultiColumnComboBox({
            dataTextField: "DisplayValue",
            dataValueField: "DataValue",
            height: 520,
            columns: [
                { field: "DisplayValue", title: "Registration Name", width: 200 },
            ],
            filter: "contains",
            filterFields: ["DisplayValue"],
            dataSource: {
                data: obj
            },
            autoClose: false,
             close: function (e) 
             {
                debugger;
                 
                if (this.dataSource.data().length > 0) 
                {
                     if (this.dataSource.data()[this.selectedIndex] != undefined) 
                     {
                          
                          var data = this.dataSource._pristineData.find(x => x.DataValue == this.value());
                          if(data != undefined)
                          {
                            $('#ZoneID').val(data.ZoneID);
                            $('#AreaID').val(data.DataValue);
                            @*$('#ddlArea').val(this.dataSource.data()[this.selectedIndex].areaID);*@
                          }
                          else
                          {
                              $('#ddlArea').data("kendoMultiColumnComboBox").value('');
                                 swal("Please Select Valid Area");
                                   $('#ZoneID').val(0);
                                   $('#AreaID').val(0);
                          }
                     }
                     
                }
                else
                {
                   $('#ddlArea').data("kendoMultiColumnComboBox").value('');
                      swal("Please Select Valid Area");
                        $('#ZoneID').val(0);
                        $('#AreaID').val(0);
                }
            }

        });
    }

      //Distric Change Method
         //Distric Change Method
      $(function () {
        $("#DistrictID").change(function () {
                debugger;
                $.ajax({
                    type: "GET",
                    url: "/ReinstatementAppliaction/AllList",
                    headers: {"XSRF-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value},
                    data: { mode: $("#AppliactionID").val(), DistrictID: $("#DistrictID").val() },
                    success: function (response) {
                        debugger;
                        $("#ddlArea").kendoMultiColumnComboBox().empty();
                        $("#TalukaID").empty();
                        var row = "";
                        row += "<option value='none' selected>Select</option>";
                         for (var i = 0; i < response.data.Talukalist.length; i++) {
                            
                            row += "<option value=" + response.data.Talukalist[i].DataValue + ">" + response.data.Talukalist[i].DisplayValue + "</option>";
                            
                        }
                          $("#TalukaID").html(row).trigger('chosen:updated');

                      if (response.data.AreaList != "") {
                           $("#DivArea").show();
                            bindAreaDropdown(response.data.AreaList);
                       }
                        else {
                           $("#DivArea").hide();
                             $('#ZoneID').val(0);
                            $('#AreaID').val(0);
                        }
                       
                    },
                    failure: function (response) {
                        swal(response.responseText);
                    },
                    error: function (response) {
                        //respone will be returned here
                        $("#error").val(response.responseText);
                    }
                });
            });
        });

   function SubmitAppliaction() {
            debugger;

             var ErrorCnt = 0;
       var pinregx = "^[1-9]{1}[0-9]{2}\\s{0,1}[0-9]{3}$"
               var regEx = /^[5-9][0-9]{9}$/;
            $('.ValidationSpan').hide();
              var email = $("#Email").val();   
              var pincode = $("#Pincode").val();   
               var mailregEx = /^\b[A-Z0-9._%-]+@@[A-Z0-9.-]+\.[A-Z]{2,4}\b$/i;

            if ($("#ApplicantName").val() == "0" || $("#ApplicantName").val() == "") {
                ErrorCnt++;
                $('#SpanApplicantName').show();
            }

              if ($("#PAddress").val() == "0" || $("#PAddress").val() == "") {
                ErrorCnt++;
                $('#SpanApplicantAddress').show();
            }

            if ($("#DistrictID").val() == "0" || $("#DistrictID").val() == "") {
                ErrorCnt++;
                $('#Spandistrict').show();
            }
            
            if ($("#TalukaID").val() == "0" || $("#TalukaID").val() == "") {
                ErrorCnt++;
                $('#Spantaluka').show();
            }
            
            if ($("#Gender").val() == "0" || $("#Gender").val() == "") {
                ErrorCnt++;
                $('#Spangender').show();
            }

            if ($("#Email").val() == "0" || $("#Email").val() == "") {
                ErrorCnt++;
                $('#SpanEmail').show();
            }

             if ($("#DivArea").is(":visible")) {
                if ($("#ddlArea").val() == "0" || $("#ddlArea").val() == "") {
                ErrorCnt++;
                $('#SpanArea').show();
                }
              }

            if ($("#Pincode").val() == "0" || $("#Pincode").val() == "") {
                ErrorCnt++;
                $('#Spanpincode').show();
            }

            if ($("#Pincode").val().length > 2 && $("#Pincode").val().length < 6 ) {
                ErrorCnt++;
                $('#Spanlengthpincode').show();
            }

            
            if ($("#Pincode").val().length > 6 ) {
                ErrorCnt++;
                $('#Spanlengthpincode').show();
            }
             if (!pincode.match(pinregx)) {
                 ErrorCnt++;
                $('#Spanvalpincode').show();
            }
                if ($("#Email").val().length > 1 ) {
                if (!email.match(mailregEx)) {
                 ErrorCnt++;
                $('#SpanEmail').show();
            }
            }


            if (ErrorCnt > 0) {
                return false;
            }

            if (ErrorCnt == 0) {
                var myData = {
                    ApplicationID: $('#AppliactionID').val(),
                    ApplicantName: $('#ApplicantName').val(),
                    PAddress: $('#PAddress').val(),
                    SAddress: $('#SAddress').val(),
                    DistrictID: $('#DistrictID').val(),
                    TalukaID: $('#TalukaID').val(),
                    Pincode: $('#Pincode').val(),
                    Gender: $('#Gender').val(),
                    IsActive: $('#IsActive').val(),
                    URL: document.URL,
                    ZoneID: $('#ZoneID').val(),
                    AreaID: $('#AreaID').val(),
                    Email: $('#Email').val(),
                };
                $.ajax
                    ({
                        type: "POST",
                        url: "/NFormApplication/SaveNFormApplicationRecord",
                        headers: {"XSRF-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value},
                        dataType: "json",
                        data: myData,
                        success: function(data) {
                            debugger;
                            if (data.data.ErrorCode == 0) {
                                var ApplicationID = data.data.ApplicationID;
                                var ISNew =  data.data.ISNew;
                                 var Querystring = "ApplicationID=" + ApplicationID + "&ISNew=" + ISNew;
                                window.location.href = "/NFormApplication/AddnFormEstablishment?" + Querystring;
                               // alert(data.data.errorMassage);
                            }
                            else {
                                swal(data.data.ErrorMassage);
                            }

                        },

                         error: function (request, message, error) 
                        {
                            debugger; 
                            swal(request.responseJSON);
                          }
                    })
            }
    }



   $('#SameasPaddress').click(function () {
        //check if checkbox is checked
        if ($(this).is(':checked')) {

          var val = $('#PAddress').val();
           $('#SAddress').val(val);
           $("#SAddress").attr("disabled", "disabled");
        } 
        else
        {
            //$('#SAddress').val("");
            $("#SAddress").prop("disabled", false); // 
        }
    });


    function numberOnly(id) {
    var element = document.getElementById(id);
    element.value = element.value.replace(/[^0-9]/gi, "");
}
     </Script>
  
 }

 