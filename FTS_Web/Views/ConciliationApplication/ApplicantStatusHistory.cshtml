@model FTS.Model.Entities.ConciliationApplicationModel
@{
    ViewBag.Title = "Conciliation Application";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
       <br />
    <section>
        <h3 style="font-weight:bold;">Application Status Histroy</h3>
    </section>   


     Html.RenderPartial("_DetailView");

 <div class="content-wrapper">

        @*<div class="row" id="DivHearing" style="display:none;">
                  
            <div class="col-12 grid-margin stretch-card">
                  
                <div class="card">
                   
                    <div class="card-body">
               
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-6">
                                    @Html.HiddenFor(e => e.ApplicationID , new { @ID="ApplicationID"})
                                     @Html.Label("Hearing Date")<span class="text-danger">*</span>
                                     <br>
                                   @Html.TextBoxFor(e => e.HearingDate,"{0:dd-MM-yyyy}", new { @class = "form-control datetimepicker", @ID="HearingDate", required = "required" })
                                   <span class="text-danger ValidationSpan" id="SpanHearingDate" style="display:none;">Please Select Hearing Date</span>
                                </div>
                                <div class="col-md-6">
                                     @Html.Label("Hearing Reason")<span>*</span>
                                     <br>
                                       @Html.DropDownListFor(e => e.HearingReasonID, new SelectList(Model.HearingReasonList, "DataValue","DisplayValue"),"Select", new { @class = "chosen-select form-control",@ID="HearingReasonID" ,@width ="15px"})
                                   <span class="text-danger ValidationSpan" id="SpanHearingReason" style="display:none;">Please Select</span>
                                </div>

                            </div>
                        </div>
                        
                          <div class="form-group">
                            <div class="row">
                                <div class="col-md-12">
                                     @Html.Label("Hearing Remark")<span class="text-danger">*</span>
                                   @Html.TextAreaFor(e => e.HearingRemarks, new { @class = "form-control", @ID="HearingRemark", required = "required" })
                                   <span class="text-danger ValidationSpan" id="SpanHearingRemark" style="display:none;">Please Enter Hearing Reamrk</span>
                               
                                </div>
                            </div>
                        </div>

                     
                          <div class="form-group">
                          <input type="button" id="btnsubmit" class="btn btn-primary" value="Save" onclick="SubmitHearing();" />
                            @Html.ActionLink("Cancel", "ConciliationACLList", "ConciliationApplication", new { area = "" }, new { @class = "btn btn-primary" })
                        </div>   
                </div>
            </div>
        </div>
    </div>*@
     @* <div class="row" id="DivEstablishACL">
                  
            <div class="col-12 grid-margin stretch-card">
                  
                <div class="card">
                    <div class="card-body">
                          <fieldset>
                          <legend>Establishment Address</legend>
                        <div class="form-group">
                              <div class="col-md-12"> 
                                      <div class="row">
                                                <div class="col-md-3">
                                                    @Html.HiddenFor(e => e.EstalishmentdetailACL[0].EstablisDetailID, new { @ID="EstablisDetailID"})
                                                    @Html.Label("Establishment Name: / સ્થાપના નામ:")
                                                    @Html.TextBoxFor(x => x.EstalishmentdetailACL[0].EstablishmentName, new { @class = "form-control", @ID="EstablisDetailID",@disabled = "disabled" })
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.Label("District: / જિલ્લો:") <span class="text-danger">*</span>
                                                    @Html.DropDownListFor(e => e.EstalishmentdetailACL[0].DistrictID, new SelectList(Model.EstalishmentdetailACL[0].Districtlist, "DataValue","DisplayValue"),"Select", new { @class = "chosen-select form-control",@ID="EstablishmentDistrictID" })
                                                    <span class="text-danger ValidationSpan" id="SpanEstablishmentDistrictID" style="display:none;">Please Select District</span>
                                                </div>

                                                <div class="col-md-2">
                                                    @Html.Label("Taluka: / તાલુકો:")
                                                    @Html.DropDownListFor(e => e.EstalishmentdetailACL[0].TalukaID, new SelectList(Model.EstalishmentdetailACL[0].Talukalist,"DataValue","DisplayValue"),"Select", new { @class = "chosen-select form-control",@ID="EstablishmentTalukaID" })
                                                    <span class="text-danger ValidationSpan" id="SpanEstablishmentTalukaID" style="display:none;">Please Select Taluka</span>
                                                </div>
                                                <div class="col-md-2" id="DivArea">
                                                    @Html.Label("Area: / વિસ્તાર:") 
                                                    @Html.HiddenFor(e => e.EstalishmentdetailACL[0].ZoneID , new { @ID="EstablishmentZoneID"})
                                                    @Html.HiddenFor(e => e.EstalishmentdetailACL[0].AreaID , new { @ID="EstablishmentAreaID"})
                                                    <input id="ddlEstablishmentArea" class="form-control" value="@Model.EstalishmentdetailACL[0].AreaID" style="width:100%;" />
                                                    <span class="text-danger ValidationSpan" id="SpanddlEstablishmentArea" style="display:none;">Please Select Area</span>
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.Label("Pincode: / પીન કોડ:")
                                                    @Html.TextBoxFor(x => x.EstalishmentdetailACL[0].Pincode, new { @class = "form-control", @ID="EstablishmentPincode" , placeholder = "Enter Pincode", maxlength="6",oninput="numberOnly(this.id);" })
                                                    <span class="text-danger ValidationSpan" id="SpanEstablishmentPincode" style="display:none;">Please Enter Pincode </span>
                                                </div>
                                            </div>
                                  </div>
                        </div>
                          </fieldset>
                          <div class="form-group">
                          <input type="button" id="btnEshtablishment" class="btn btn-primary" value="Update" onclick="UpdateEshtablishment();" />
                </div>
            </div>
        </div>
    </div>

</div>*@
     <div class="row" id="DivHearing" style="display:none;">
                  
            <div class="col-12 grid-margin stretch-card">
                  
                <div class="card">
                   
                    <div class="card-body">
                 <fieldset>
                          <legend>Hearing Detail</legend>
                        <div id="Hearing">

                        </div>
                         </fieldset>

                        <div class="form-group">
                           @* <input type="button" id="btnHearing" class="btn btn-primary" value="Save" onclick="SubmitHearing();" />*@
                            @Html.ActionLink("Cancel", "Index", "ConciliationApplication", new { area = "" }, new { @class = "btn btn-primary",@ID = "btnCancel" })
                             @*<input type="button" id="btnAddHearing" class="btn btn-info" value="More Hearing" onclick="Fn_AddHearing();" />*@
                        </div>   
                </div>
            </div>
        </div>
    </div>

 @*Settlement*@

    <div class="row" id="DivSettlement" style="display:none;">
                  
            <div class="col-12 grid-margin stretch-card">
                  
                <div class="card">            
                    <div class="card-body">
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-2">
                                    @Html.HiddenFor(e => e.ApplicationID , new { @ID="ApplicationID"})
                                     @Html.Label("Settlement Date")<span class="text-danger ml-1">*</span>
                                   @Html.TextBoxFor(e => e.SettlementDate,"{0:dd-MM-yyyy}", new { @class = "form-control", @ID="SettlementDate", required = "required" })
                                   <span class="text-danger ValidationSpan" id="SpanSettlementDate" style="display:none;">Please Select SettlementDate Date</span>
                                
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-6">
                                     @Html.Label("Settlement Remark")<span class="text-danger ml-1">*</span>
                                   @Html.TextAreaFor(e => e.SettlementRemark, new { @class = "form-control", @ID="SettlementRemark", required = "required" })
                                   <span class="text-danger ValidationSpan" id="SpanHearingreason" style="display:none;">Please Enter Hearing Reason</span>
                                </div>
                            </div>
                        </div>
                          <div class="form-group">
                            <div class="row">
                                <div class="col-md-3">
                                     @Html.Label("Settlement Document")<span class="text-danger ml-1">*</span>
                                     <input type="file" id="SettlementfileUpload" class="fileUpload"   onchange="return fileValidation()" >
                                   <span class="text-danger ValidationSpan" id="SpanSettlementfileUpload" style="display:none;">Please Select file </span>
                                @if (@Model.SettlementDocURL != "")
                                   {
                                                 <a href="/ConciliationApplication/DownloadSettlementFile/?FileName=@Model.SettlementDocURL" ><i class="fas fa-download"></i></a>
                                   }
                                </div>
                            </div>
                        </div>

                          <div class="form-group">
                          <input type="button" id="btnsubmit" class="btn btn-primary" value="Save" onclick="SubmitSettlement();" />
                            @Html.ActionLink("Cancel", "ConciliationACLList", "ConciliationApplication", new { area = "" }, new { @class = "btn btn-primary" })
                        </div>   
                        
                </div>
            </div>
        </div>
    </div>

        @*
   Send to Labour*@
     <div class="row" id="DivSendtolabour" style="display:none;">
                  
            <div class="col-12 grid-margin stretch-card">
                  
                <div class="card">
                   
                    <div class="card-body">
               
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-2">
                                    @Html.HiddenFor(e => e.ApplicationID , new { @ID="ApplicationID"})
                                     @Html.Label("Send To DCL Clerk ")<span class="text-danger ml-1">*</span>
                                   @Html.TextBoxFor(e => e.SendLCDate,"{0:dd-MM-yyyy}", new { @class = "form-control", @ID="SendLCDate1", required = "required" })
                                   <span class="text-danger ValidationSpan" id="SpanJoinningDate" style="display:none;">Please Add LC Date</span>
                                
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-6">
                                     @Html.Label("Case Failure Remarks")<span class="text-danger ml-1">*</span>
                                   @Html.TextAreaFor(e => e.SendLCRemark, new { @class = "form-control", @ID="SendLCRemark", required = "required" })
                                   <span class="text-danger ValidationSpan" id="SpanSendLCNote" style="display:none;">Please Enter Remark</span>
                               
                                </div>
                            </div>
                        </div>
                     
                          <div class="form-group">
                          <input type="button" id="btnsubmit" class="btn btn-primary" value="Save" onclick="SubmitLabour();" />
                            @Html.ActionLink("Cancel", "ConciliationACLList", "ConciliationApplication", new { area = "" }, new { @class = "btn btn-primary" })
                        </div>   
                </div>
            </div>
        </div>
    </div>

         <div class="form-group">
             @Html.ActionLink("Cancel", "Index", "ConciliationApplication", new { area = "" }, new { @class = "btn btn-primary",@ID = "btnCancel" })
         </div>   
     </div>
 <script>
       $(document).ready(function () {
            debugger;
            @*document.getElementById("HearingReasonID_chosen").style.width = "200px";*@
               HearingDetail();
       @*    $("#DivHearing").hide();*@
        @*   $("#DivSettlement").hide();
           $("#DivSendtolabour").hide();*@
                  @* $(function () {
                 var datepicker = $("#HearingDate_" + B).kendoDatePicker({
                 value: presentDate,
                 min: presentDate,
                }).data('kendoDatePicker');
            });*@
               

     $("#SettlementDate").kendoDatePicker({
        format :"dd-MM-yyyy",
        disableDates: function (date) {
            if (date <= new Date()) {
                return true;
            } else {
                return false;
            }
        }
    });
      $("#SendLCDate1").kendoDatePicker({
        format :"dd-MM-yyyy",
        disableDates: function (date) {
            if (date <= new Date()) {
                return true;
            } else {
                return false;
            }
        }
    });


           if ('@Model.ISNew' == 0 && '@Model.HearingdetailACL.Count' > 0) 
           {
                $("#DivHearing").show();
                  $("#btnCancel").hide();
                
           }
           @*else if ('@Model.ISNew' == 0 && '@Model.SettlementDate' != null)    
           {
                $("#DivSettlement").show();
           }*@
           else if ('@Model.ISNew' == 1)    
           {
               $("#DivSettlement").show();
                    $("#btnHearing").hide();
                $("#btnCancel").hide();
                $("#btnAddHearing").hide();
                 $("#DivEstablishACL").hide();
           }
            else if ('@Model.ISNew' == 2)
           {
               $("#DivSendtolabour").show();
                    $("#btnHearing").hide();
                $("#btnCancel").hide();
                $("#btnAddHearing").hide();
           }
            
            });

            @*function SubmitHearing() {
            debugger;

             var ErrorCnt = 0;
               var regEx = /^[5-9][0-9]{9}$/;
            $('.ValidationSpan').hide();
             var i = B;
        var v;

        for (v = 0; v < i; ++v) {

            if ($("#HearingDate_" + v + "").val() == "0" || $("#HearingDate_" + v + "").val() == "") {
                ErrorCnt++;
                $("#SpanHearingDate_" + v + "").show();
            }

            if ($("#HearingReasonID_" + v + "").val() == "0" || $("#HearingReasonID_" + v + "").val() == "") {
                ErrorCnt++;
                $("#SpanHearingReasonID_" + v + "").show();
            }*@
@*

            if (ErrorCnt > 0) {
                return false;
            }
        }

                     
        if (ErrorCnt == 0) {
            var myData = {
                XMLString: GetHearingXML(),
            };
            $.ajax
                ({
                    type: "POST",
                    url: "/ConciliationApplication/SaveConciliaitonHearingACLRecord",
                    dataType: "json",
                    data: myData,
                    success: function(data) {
                        debugger;
                        if (data.data.ErrorCode == 0) {
                            swal(data.data.ErrorMassage)
                            .then((value) => {
                                 window.location.href = "/ConciliationApplication/ConciliationACLList";
                            });
                        }
                        else {
                            swal(data.data.ErrorMassage)
                        }

                    },

                    error: function(request, message, error) {
                        debugger;
                        //alert(request.responseJSON);
                        swal(request.responseJSON);
                    }
                })
        }

    }
@* function SubmitHearing() {
            debugger;

             var ErrorCnt = 0;
               var regEx = /^[5-9][0-9]{9}$/;
            $('.ValidationSpan').hide();
            if ($("#HearingReason").val() == "0" || $("#HearingReason").val() == "") {
                ErrorCnt++;
                $('#SpanHearingreason').show();
            }


            if (ErrorCnt > 0) {
                return false;
            }

            if (ErrorCnt == 0) {
                var myData = {
                    ApplicationID: $('#ApplicationID').val(),
                    HearingDate: $('#HearingDate').val(),
                    HearingReason: $('#HearingReasonID').val(),
                     HearingRemark: $('#HearingRemark').val(),
                    URL: document.URL,
                };
                $.ajax
                    ({
                        type: "POST",
                        url: "/ConciliationApplication/SaveConciliaitonHearingACLRecord",
                        headers: {"XSRF-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value},
                        dataType: "json",
                        data: myData,
                        success: function(data) {
                            debugger;
                            if (data.data.ErrorCode == 0) {
                                swal(data.data.ErrorMassage)
                                .then((value) => {
                                     window.location.href = "/ConciliationApplication/ConciliationACLList";
                                });
                            }
                           
                            else {
                                swal(data.data.ErrorMassage);
                            }

                        },

                        error: function (request, message, error) 
                        {
                            debugger; 
                            swal(request.responseJSON);
                          }
                    })
            }
    }*@


 

  function fileValidation() {
    debugger;
    var fileInput = document.getElementById('SettlementfileUpload'); 
             
            var filePath = fileInput.value;
         
            // Allowing file type
            var allowedExtensions =
                    /(\.jpg|\.jpeg|\.png|\.pdf|\.doc|\.docx|\.xls|\.xlsx)$/i;
             
            if (!allowedExtensions.exec(filePath)) {
                swal('Invalid file type');
                fileInput.value = '';
                return false;
            }
            
        }

     </Script>
      <script>
                var B = 0;
                

    function HearingDetail() {
        debugger;
        var data = @Html.Raw(Json.Serialize(@Model.HearingdetailACL));
        var i;
        for (B = 0; B < data.length; B++) {

    @*  var AddEducationdetails = "<div class='row'>";*@
             var AddEducationdetails = "";
            AddEducationdetails += "<div id='DivHearingdetail_" + B + "'>";
            AddEducationdetails += "<fieldset class='border p-2'>";
    @*  AddEducationdetails += "<legend  class='w-auto'>Establish Detail:" + E + " </legend>";*@

            AddEducationdetails += "<div class='form-group'>";
            AddEducationdetails += "<div class='row'>";

            AddEducationdetails += "<div class='col-md-2'>";
                 AddEducationdetails += "<input type='hidden' name='ApplicationID_" + B + "' value='" + data[B].ApplicationID + "' id='ApplicationID_" + B + "' />";
            AddEducationdetails += "<input type='hidden' name='HearingID_" + B + "'  value='" + data[B].Id + "' id='HearingID_" + B + "' />";
                    AddEducationdetails += "<input type='hidden' name='IsActive_" + B + "' value='" + data[B].IsActive + "' id='IsActive_" + B + "' />";
            AddEducationdetails += "<label for='Applicant_Name'>Hearing Date <span class='text-danger'>*</span></label>";
            AddEducationdetails += "<input class='form-control datetimepicker' style='width: 100%;' id='HearingDate_" + B + "' name='HearingDate_" + B + "'  type='text' value='" + data[B].HearingDate + "'>";
            AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanHearingDate_" + B + "' style='display:none;'>Please Enter Hearing Date</span>";
            AddEducationdetails += "</div>";

            //AddEducationdetails += "<div class='col-md-2'>";
            //AddEducationdetails += "<label for='District_Name'>Hearing Reason <span class='text-danger'>*</span></label>";
            //AddEducationdetails += "<select class='chosen-select form-control' name='HearingReasonID_" + B + "' id='HearingReasonID_" + B + "'>";
            //AddEducationdetails += "<option value='0'>Select</option>";
            //for (i = 0; i < data[B].HearingReasonList.length; ++i) {
            //    if (data[B].HearingReasonList[i].DataValue == data[B].HearingReasonID) {
            //        AddEducationdetails += "<option value=" + data[B].HearingReasonList[i].DataValue + " selected='selected'>" + data[B].HearingReasonList[i].DisplayValue + "</option>";
            //    }
            //    else {

            //        AddEducationdetails += "<option value=" + data[B].HearingReasonList[i].DataValue + ">" + data[B].HearingReasonList[i].DisplayValue + "</option>";
            //    }
            //}
            //AddEducationdetails += "</select>";
            //AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanHearingReasonID_" + B + "' style='display:none;'>Please Select Reason </span>";
            //AddEducationdetails += "</div>";

                AddEducationdetails += "<div class='col-md-5'>";
            AddEducationdetails += "<label for='P_Address'>Hearing Note</label>";
            //AddEducationdetails += "<textarea class='form-control'' id='HearingNote_" + B + "' name='HearingNote_" + B + "'  type='text'>" + data[B].HearingNote + "</textarea>";
                AddEducationdetails += "<textarea class='form-control'' id='HearingNote_" + B + "' name='HearingNote_" + B + "'  type='text'>" + data[B].HearingRemarks + "</textarea>";
            AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanHearingNote_" + B + "' style='display:none;'>Please Enter Hearing Note</span>";
            AddEducationdetails += "</div>";

            AddEducationdetails += "<div class='col-md-2'>";
            AddEducationdetails += "<label for='Applicant_Name'>IsCancle <span> &nbsp</span></label>";
                 AddEducationdetails += "<input type='checkbox' class='myCheckbox' name='IsCancle_" + B + "' value='" + data[B].IsCancle + "' id='IsCancle_" + B + "' />";
            AddEducationdetails += "</div>";


            AddEducationdetails += "</div>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "</fieldset>";
            AddEducationdetails += "</div>";
            AddEducationdetails += "</Br>"

            $("#Hearing").append(AddEducationdetails);
            $(".chosen-select").chosen();
            $('.chosen-container').css('width', '100%');
           $("#HearingDate_" + B).kendoDateTimePicker({ format: "dd-MM-yyyy HH:mm",  disableDates: function (date) {
            if (date <= new Date()) {
                return true;
            } else {
                return false;
            }
        }});
           if($("#HearingID_" + B).val() == 0)
           {
                $("#HearingDate_" + B).val("")
           }
              if( $("#IsCancle_" + B).val() == 'true')
              {
                   $("#IsCancle_" + B).attr('checked', 'checked');
              }
            if( $("#HearingNote_" + B).val().length > 1)
            {
                $("#HearingDate_" + B).data('kendoDateTimePicker').enable(false);
                $("#HearingNote_" + B).attr("disabled", "disabled");
                $("#IsCancle_" + B).attr("disabled", "disabled");
                $("#HearingReasonID_" + B).prop('disabled', true).trigger("chosen:updated");
            }      
            else{
                 $("#btnAddHearing").attr("disabled", "disabled");
            }
            //B++;

        }

    }

    //Contractor`s Details
    //function Fn_AddHearing() {

    //    debugger
    //    var i;
    //    var ApplicationID = $('#ApplicationID').val();
    //    var HearingID = 0;
    //    var HearingReasonList = @Html.Raw(Json.Serialize(@Model.HearingReasonList));


    //      var AddEducationdetails = "";
    //        AddEducationdetails += "<div id='DivHearingdetail_" + B + "'>";
    //        AddEducationdetails += "<fieldset class='border p-2'>";

    //        AddEducationdetails += "<div class='form-group'>";
    //        AddEducationdetails += "<div class='row'>";

    //        AddEducationdetails += "<div class='col-md-2'>";
    //        AddEducationdetails += "<input type='hidden' name='ApplicationID_" + B + "' value='" + ApplicationID + "' id='ApplicationID_" + B + "' />";
    //        AddEducationdetails += "<input type='hidden' name='HearingID_" + B + "'  value='" + HearingID + "' id='HearingID_" + B + "' />";
    //        AddEducationdetails += "<input type='hidden' name='IsActive_" + B + "' value='true' id='IsActive_" + B + "' />";
    //        AddEducationdetails += "<label for='Applicant_Name'>Hearing Date <span class='text-danger'>*</span></label>";
    //        AddEducationdetails += "<input class='form-control datepicker' style='width: 100%;' id='HearingDate_" + B + "' name='HearingDate_" + B + "'  type='text' value=''>";
    //        AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanHearingDate_" + B + "' style='display:none;'>Please Enter Hearing Date</span>";
    //        AddEducationdetails += "</div>";

    //        AddEducationdetails += "<div class='col-md-2'>";
    //        AddEducationdetails += "<label for='District_Name'>Hearing Reason <span class='text-danger'>*</span></label>";
    //        AddEducationdetails += "<select class='chosen-select form-control' name='HearingReasonID_" + B + "' id='HearingReasonID_" + B + "'>";
    //        AddEducationdetails += "<option value='0'>Select</option>";
    //        for (i = 0; i < HearingReasonList.length; ++i) {
    //        AddEducationdetails += "<option value=" + HearingReasonList[i].DataValue + ">" + HearingReasonList[i].DisplayValue + "</option>";
    //        }
    //        AddEducationdetails += "</select>";
    //        AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanHearingReasonID_" + B + "' style='display:none;'>Please Select Reason </span>";
    //        AddEducationdetails += "</div>";

    //        AddEducationdetails += "<div class='col-md-5'>";
    //        AddEducationdetails += "<label for='P_Address'>Hearing Note</label>";
    //        AddEducationdetails += "<textarea class='form-control'' id='HearingNote_" + B + "' name='HearingNote_" + B + "'  type='text'></textarea>";
    //        AddEducationdetails += "<span class='text-danger ValidationSpan'' id='SpanHearingNote_" + B + "' style='display:none;'>Please Hearing Note</span>";
    //        AddEducationdetails += "</div>";

    //        AddEducationdetails += "<div class='col-md-2'>";
    //        AddEducationdetails += "<label for='Applicant_Name'>IsCancle <span> &nbsp</span></label>";
    //        AddEducationdetails += "<input type='checkbox' class='myCheckbox' onclick='canclecheckbox("+B+")' name='IsCancle_" + B + "' value='false' id='IsCancle_" + B + "' />";
    //        AddEducationdetails += "</div>";


    //        AddEducationdetails += "</div>";
    //        AddEducationdetails += "</div>";
    //        AddEducationdetails += "</fieldset>";
    //        AddEducationdetails += "</div>";
    //        AddEducationdetails += "</Br>"

    //        $("#Hearing").append(AddEducationdetails);
    //        $(".chosen-select").chosen();
    //        $('.chosen-container').css('width', '100%');
    //        $("#HearingDate_" + B).kendoDateTimePicker({ format: "dd-MM-yyyy HH:mm",  disableDates: function (date) {
    //        if (date <= new Date()) {
    //            return true;
    //        } else {
    //            return false;
    //        }
    //    }});

    
    //        B++;

    //}

       function GetHearingXML() {
        var xml = '';
        xml += '<DataTable>';
        var i = B;
        var v;
        for (v = 0; v < i; ++v) {
            xml += '<DataRow>';
            xml += "<" + "ApplicationID" + ">" + $("#ApplicationID_" + v + "").val() + "</" + "ApplicationID" + ">";
            xml += "<" + "Id" + ">" + $("#HearingID_" + v + "").val() + "</" + "Id" + ">";
            xml += "<" + "HearingDate" + ">" + $("#HearingDate_" + v + "").val() + "</" + "HearingDate" + ">";
            xml += "<" + "HearingReasonID" + ">" + $("#HearingReasonID_" + v + "").val() + "</" + "HearingReasonID" + ">";
            xml += "<" + "HearingRemark" + ">" + $("#HearingNote_" + v + "").val() + "</" + "HearingRemark" + ">";
            
              if ($("#IsCancle_" + v + "").val() == "true") {
                  xml += "<" + "IsCancle" + ">" + 1 + "</" + "IsCancle" + ">";
              }
              else {
                  xml += "<" + "IsCancle" + ">" + 0 + "</" + "IsCancle" + ">";
              }

              
              if ($("#IsActive_" + v + "").val() == "true") {
                  xml += "<" + "IsActive" + ">" + 1 + "</" + "IsActive" + ">";
              }
              else {
                  xml += "<" + "IsActive" + ">" + 0 + "</" + "IsActive" + ">";
              }

            xml += "<" + "URL" + ">" + document.URL + "</" + "URL" + ">";
            xml += "<" + "IP_Address" + ">" + $("#IP_Address").val() + "</" + "IP_Address" + ">";
            xml += "<" + "Action" + ">" + 4 + "</" + "Action" + ">";
            //xml += "<" + "UserID" + ">" + $("#UserID").val() + "</" + "UserID" + ">";
            xml += '</DataRow>';
        }
        xml += '</DataTable>'
        return xml;
    }


    function SubmitHearing() {
            debugger;

             var ErrorCnt = 0;
               var regEx = /^[5-9][0-9]{9}$/;
            $('.ValidationSpan').hide();
             var i = B;
        var v;

        for (v = 0; v < i; ++v) {

            if ($("#HearingDate_" + v + "").val() == "0" || $("#HearingDate_" + v + "").val() == "") {
                ErrorCnt++;
                $("#SpanHearingDate_" + v + "").show();
            }

            if ($("#HearingReasonID_" + v + "").val() == "0" || $("#HearingReasonID_" + v + "").val() == "") {
                ErrorCnt++;
                $("#SpanHearingReasonID_" + v + "").show();
            }

            //if ($("#hearingnote_" + v + "").val() == "0" || $("#hearingnote_" + v + "").val() == "") {
            //    errorcnt++;
            //    $("#spanhearingnote_" + v + "").show();
            //}

            if (ErrorCnt > 0) {
                return false;
            }
        }

                     
        if (ErrorCnt == 0) {
            var myData = {
                XMLString: GetHearingXML(),
            };
            $.ajax
                ({
                    type: "POST",
                    url: "/ConciliationApplication/SaveConciliaitonHearingACLRecord",
                    headers: {"XSRF-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value},
                    dataType: "json",
                    data: myData,
                    success: function(data) {
                        debugger;
                        if (data.data.ErrorCode == 0) {
                            swal(data.data.ErrorMassage)
                            .then((value) => {
                                 window.location.href = "/ConciliationApplication/ConciliationACLList";
                            });
                        }
                        else {
                            swal(data.data.ErrorMassage)
                        }

                    },

                    error: function(request, message, error) {
                        debugger;
                        //alert(request.responseJSON);
                        swal(request.responseJSON);
                    }
                })
        }

    }

   function canclecheckbox(id) {
              debugger;
       
            if ($("#IsCancle_"+id).is(':checked')) {
          $("#IsCancle_"+id).val(true);
         
        } 

       } 

        </script>
  
 }

 