@model FTS.Model.Entities.TypeOfBodyModel
@{
    ViewBag.Title = "Type Of Body";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
 <div class="content-wrapper">

        <div class="row">
            <div class="col-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Type Of Body</h4>

                        <div class="form-group">
                            <div class="row">
                             
                                <div class="col-md-3">
                                    @Html.Label("Authority Name")
                                     @Html.HiddenFor(e => e.TypeOfBodyIDEdit , new { @ID="TypeOfBodyID"})
                                    @Html.TextBoxFor(e => e.Authority, new { @class = "form-control", @ID="Authority", required = "required" })
                                     <span class="text-danger ValidationSpan" id="SpanAuthority" style="display:none;">Please Insert Authority Name</span>
                                </div>
                                  
                                 <div class="col-md-1" style="margin-top: auto;">
                                    @Html.Label("IsActive")
                                    @Html.CheckBoxFor(e => e.IsActive, new { @ID="IsActive"})
                                    <span class="text-danger ValidationSpan" id="SpanLevel" style="display:none;">Please Select Level</span>
                                </div>
                            </div>
                        </div>
                          <div class="form-group">
                            <input type="button" id="btnsubmit" class="btn btn-primary" value="Submit" onclick="SubmitTypeOfBody();" />
                            @Html.ActionLink("Cancel", "index", "TypeOfBody", new { area = "" }, new { @class = "btn btn-primary" })
                        </div>   
                    </div>
                </div>
            </div>
        </div>
    </div>

     <script>

        function SubmitTypeOfBody() {
            debugger;
             var ErrorCnt = 0;
            $('.ValidationSpan').hide();
            if ($("#Authority").val() == "0" || $("#Authority").val() == "") {
                ErrorCnt++;
                $('#SpanAuthority').show();
            }

            if (ErrorCnt > 0) {
                return false;
            }

            if (ErrorCnt == 0) {
                var myData = {
                    TypeOfBodyID: $('#TypeOfBodyID').val(),
                    Authority: $('#Authority').val(),                    
                    IsActive: $('#IsActive').val()
                };
                $.ajax
                    ({
                        type: "GET",
                        url: "/TypeOfBody/SaveTypeOfBodyRecord",
                        headers: {"XSRF-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value},
                        dataType: "json",
                        data: myData,
                        success: function(data) {
                            debugger;

                            if (data.data.ErrorCode == 0) {
                                swal(data.data.ErrorMassage)
                                .then((value) => {
                                    window.location.href = "/TypeOfBody/Index";
                                });
                             }
                            else {
                                swal(data.data.ErrorMassage);
                             }

                            @*if (data.data.ErrorCode == 0) {
                                window.location.href = "/TypeOfBody/Index";
                                alert(data.data.ErrorMassage);
                            }
                            else {
                                alert('Something went wrong!');
                            }*@

                        },

                       error: function (request, message, error) 
                        {
                            debugger; 
                            swal(request.responseJSON);
                          }
                    })
            }
    }

   </script>
    }
 
