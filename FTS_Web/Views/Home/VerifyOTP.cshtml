@model FTS.Model.Entities.ApplicantMasterModel
@{
    ViewBag.Title = "Verify OTP";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="body">
  @Html.AntiForgeryToken();
    <div class="main-wrapper py-5">
         <div class="container-fluid">               
                <div class="content-box reg-box">
                       <div>
                             <img src="~/images/govtlogo.png" class="rounded mx-auto d-block pt-3" alt="logo">
                         <div class="content-header py-1">
                             <h3 class="text-center text-white mt-3" ><i class="fas fa-user mr-2"></i>
                                 Verify OTP
                             </h3>
                         </div> 
                    </div>                    
                            <div class="content-body">
                                <div id="divVerifyotp"> 
                                  <div class="form-group" >
                                    <label for="inputOTP" class="col-form-label">
                                        <i class="fas fa-mobile-alt mr-2"></i>
                                        <span id="labelOTP">Enter OTP</span><span class="text-danger">*</span>
                                     </label>
                                    <div class="col-6 col-sm-7 col-md-12 px-0">
                                      @Html.TextBoxFor(e =>e.OTP, new { @class = "form-control",@ID="OTP", placeholder = "Enter OTP",required = "required",maxlength="6",oninput="numberOnly(this.id);" })
                                      <span class="text-danger ValidationSpan" id="SpanOTP" style="display:none;">Please Enter OTP</span>
                                    </div>
                                 </div>

                                 <div class="form-group">
                                    <div class="d-md-flex d-block">
                                        <input type="button" id="btnsubmit" class="btn btn-primary w-100 w-md-auto mb-3 mb-md-0" value="VerifyOTP" onclick="SubmitOTP();" />
                                    </div>
                                 </div>
                               </div>                       
                                        @*PASSWORD*@

                                <div class="form-group" id="form-password">
                                    <label for="inputpassword" class="col-form-label">
                                        <i class="fas fa-lock mr-2"></i>
                                        <span id="lblPassword">New Password</span><span class="text-danger">* </span>
                                    </label>
                                    
                                    <div class="col-6 col-sm-7 col-md-12 px-0">
                                        @Html.TextBoxFor(e =>e.Password, new { @class = "form-control", type = "password",@ID="Password", placeholder = "Enter New Password" })
                                        <span class="text-danger ValidationSpan" id="SpanPassword" style="display:none;">Must contain at least one number and one uppercase and lowercase letter,one special letter, and at least 8 or more characters </span>
                                        <span class="text-danger ValidationSpan" id="SpanvalidlowercasePassword" style="display:none;">Password must contain the following: A <b>lowercase</b> letter</span>
                                        <span class="text-danger ValidationSpan" id="SpanvalidUppercasePassword" style="display:none;">Password must contain the following: A <b>capital (uppercase)</b> letter</span>
                                        <span class="text-danger ValidationSpan" id="SpanvalidnumbersPassword" style="display:none;"   >Password must contain the following:A <b>number</b> </span>
                                        <span class="text-danger ValidationSpan" id="SpanvalidPassword" style="display:none;">Plese Enter Password in Correct Format</span>
                                        <span class="text-danger ValidationSpan" id="SpanPassword" style="display:none;">Please Enter New Password.</span>
                                    </div>
                                </div>
                                                                                       @*Confirm Password*@
                                <div class="form-group" id="formConfirm">
                                    <label for="inputpassword" class="col-form-label">
                                        <i class="fas fa-lock mr-2"></i>
                                        <span id="lblRetypePassword" autocomplete="off">Confirm Password</span><span class="text-danger">*</span>
                                        
                                    </label>
                                       <div class="col-6 col-sm-7 col-md-12 px-0">
                                         @Html.TextBoxFor(e =>e.CPassword, "", new { @class = "form-control", type = "password",@ID="CPassword", placeholder = "ReEnter Password" })
                                         <span class="text-danger ValidationSpan" id="SpanCPassword" style="display:none;">Please Enter Passoword.</span>
                                         <span class="text-danger ValidationSpan" id="SpanmatchPassword" style="display:none;">Password does not match.</span>
                                       </div>                                                                
                                </div>
                                          
                             </div>
                                                      @*SAVE CANCEL RESET BTN *@
                                <div class="form-group" id="formsubmit">
                                    <div class="d-md-flex d-block">
                                        <input type="button" id="btnsubmit" class="btn btn-primary w-100 w-md-auto mb-3 mb-md-0" value="Submit" onclick="Submitmobilenum();" />
                                    </div>
                                </div>

                 </div>
                        
          </div> 
     </div>
</div>
<style>
    body {
    position: relative;
    font-family: 'Nunito', sans-serif;
    color: #333;
    background-color: #eeeeee;
    font-weight: 400;
}
.container-fluid, .container-lg, .container-md, .container-sm, .container-xl {
    width: 100%;
    padding-right: 15px;
    padding-left: 15px;
    margin-right: auto;
    margin-left: auto;
}
.content-box {
    background: #fff;
    border-radius: 1.5rem;
    -moz-box-shadow: 0px 2px 15px rgba(0, 0, 0, 0.2);
    -webkit-box-shadow: 0px 2px 15px rgb(0 0 0 / 20%);
    box-shadow: 0px 2px 15pxrgb(0 0 0 / 20%);
    overflow: hidden;
    height: 100%;
}
.reg-box {
    max-width: 620px;
    margin: 0 auto;
    width: 100%;
    height: auto !important;
}
.content-header {
    background: #022d62 !important;
    color: #ffffff;
    padding: 5px 2px;
        margin-top: 15px;
}
.content-body {
    padding: 20px;
    font-size: 1rem;
    line-height: 1.4;
}
.form-group{
     width: 100%;
}
.form-control {
    display: block;
    width: 100%;
    height: calc(1.5em + 0.75rem + 2px);
    padding: 0.375rem 0.75rem;
    font-size: 1rem;
    font-weight: 400;
    line-height: 1.5;
    color: #495057;
    background-color: #fff;
    background-clip: padding-box;
    border: 1px solid #ced4da;
    border-radius: 0.25rem;
    transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
}
.content-body .col-form-label {
    font-weight: 600;
    padding-top: 0;
}
.col-form-label {
    padding-top: calc(0.375rem + 1px);
    padding-bottom: calc(0.375rem + 1px);
    margin-bottom: 0;
    font-size: inherit;
    line-height: 1.5;
}
.btn-primary {
    background: #ef3139;
    border-color: #ef3139;
}
.btn-primary::hover{
    background: #0a73aa;
    border-color: #0a73aa;
}

</style>


<script src="~/Scripts/js/Crypto-sha1.js"></script>
<script src="~/Scripts/js/GetSHACode.js"></script>
<script>
    $(document).ready(function() {
          $("#form-password").hide();
          $("#formConfirm").hide();
          $("#formsubmit").hide();
    });

    function SubmitOTP(){
        debugger;
         var myData = {
                       OTP: $('#OTP').val()
                      };

                 $.ajax
                     ({
                        type: "POST",
                        url: "/Home/CheckVerifyOTP",
                        headers: {"XSRF-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value},
                        dataType: "json",
                        data: myData,
                        success: function(data) {
                              debugger;
                               if (data == 1) {
                                  swal({
                                        title: "Congratulation!",
                                        text: "Your Email is verified!",
                                        type: "success",
                                  })
                                $("#divVerifyotp").hide();
                                $("#form-password").show();
                                $("#formConfirm").show();
                                $("#formsubmit").show();
                               }   
                               else
                               {
                                   swal({
                                        title: 'Something Went Wrong',
                                        text: "Your Email is not  verified!",
                                        type: "error",
                                        confirmButtonText: "OK"
                                  })
                                 $("#divVerifyotp").show();
                               }
                        },

                         error: function (request, message, error) 
                         {
                            debugger; 
                            swal(request.responseJSON);
                          }
                    })
    }


    

    
     function Submitmobilenum(){

         debugger;
             var ErrorCnt = 0;
             var passwordregEx = /^(?=\S*[a-z])(?=\S*[A-Z])(?=\S*\d)(?=\S*[^\w\s])\S{8,}$/;
             var lowerCaseLettersregEx = /[a-z]/g;
             var upperCaseLetters = /[A-Z]/g;
             var numbers = /[0-9]/g;
             var password = $("#Password").val();
          
            $('.ValidationSpan').hide();         
            
              if ($("#Password").val() == "0" || $("#Password").val() == "") {
                ErrorCnt++;
                $('#SpanPassword').show();
              }
            
              else if (!password.match(lowerCaseLettersregEx)) {
                 ErrorCnt++;
                $('#SpanvalidlowercasePassword').show();
              }
              else if (!password.match(upperCaseLetters)) {
                 ErrorCnt++;
                $('#SpanvalidUppercasePassword').show();
              }
              else if (!password.match(numbers)) {
                 ErrorCnt++;
                $('#SpanvalidnumbersPassword').show();
              }
              else if (!password.match(passwordregEx)) {
                 ErrorCnt++;
                $('#SpanvalidPassword').show();
              }
              if ($("#CPassword").val() == "0" || $("#CPassword").val() == "") {
                ErrorCnt++;
                $('#SpanCPassword').show();
              }
              else if ($("#Password").val() != $("#CPassword").val()) {
                     ErrorCnt++;
                $('#SpanmatchPassword').show();
              }

              if (ErrorCnt > 0) {
                return false;
              }

              if (ErrorCnt == 0) {
                var password = $("#Password").val(PWD($("#Password").val()));
                var myData = { 
                    Password: password.val(),
                    };
                $.ajax
                    ({
                        type: "POST",
                        url: "/Home/ChangePasswordApplicantForgotPassword",
                        headers: {"XSRF-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value},
                        dataType: "json",
                        data: myData,
                        success: function(data) {
                            debugger;

                            if (data.data.ErrorCode == 0) {
                                //swal(data.data.ErrorMassage)
                                swal({
                                        title: "Congratulation!",
                                        text: data.data.ErrorMassage,
                                        type: "success",
                                        icon: "success"
                                  })
                                .then((value) => {
                                    window.location.href = "/Home/Index";
                                });
                             }
                            else {
                                swal({
                                        title: 'Something went wrong',
                                        text: data.data.ErrorMassage,
                                        type: "error",
                                        icon: "error"
                                  })
                             }
                            //if (data.data.ErrorCode == 0) {
                            //    window.location.href = "/Home/Index";
                            //    alert(data.data.ErrorMassage);
                            //}
                            //else {
                            //    alert('Something went wrong!');
                            //}
                        },

                        error: function (request, message, error) 
                        {
                            debugger; 
                            swal(request.responseJSON);
                        }
                    })
            }
    }

     
</script>
<script>
     function numberOnly(id) {
    var element = document.getElementById(id);
    element.value = element.value.replace(/[^0-9]/gi, "");
}
</script>

